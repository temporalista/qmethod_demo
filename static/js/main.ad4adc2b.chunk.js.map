{"version":3,"sources":["reportWebVitals.js","styles/globalCSS.js","utilities/decodeHTML.js","utilities/getCumulativeDuration.js","utilities/getCurrentDateTime.js","utilities/calculateTimeOnPage.js","utilities/millisecondsToTime.js","globalState/createConfigSettingsSlice.js","globalState/createLanguageSettingsSlice.js","globalState/createMapSettingsSlice.js","globalState/createStatementsSettingsSlice.js","globalState/useSettingsStore.js","globalState/createLocalPanelSlice.js","globalState/createPresortSlice.js","globalState/createLandingSlice.js","globalState/createFooterSlice.js","globalState/createSortSlice.js","globalState/createPostsortSlice.js","globalState/createSubmitSlice.js","globalState/createSurveySlice.js","globalState/useStore.js","pages/landing/LandingModal.jsx","pages/landing/LogInSubmitButton.jsx","pages/landing/LogInScreen.jsx","pages/landing/PartIdScreen.jsx","pages/landing/AccessCodeScreen.jsx","pages/landing/checkForIeBrowser.js","pages/landing/InternetExplorerWarning.jsx","pages/landing/parseParams.js","pages/landing/LocalStartButton.jsx","pages/landing/LocalDeleteButton.jsx","pages/landing/LocalSortsDownloadButton.jsx","globalState/useLocalPersist.js","pages/landing/LocalConfirmDeleteButton.jsx","pages/landing/LocalDeleteModal.jsx","pages/landing/LocalSaveBeforeDeleteModal.jsx","pages/landing/LocalStart.jsx","pages/landing/Landing.jsx","utilities/sanitizeString.js","pages/postsort/LowCards.jsx","pages/postsort/LowCards2.jsx","pages/postsort/HighCards.jsx","pages/postsort/HighCards2.jsx","pages/postsort/PostsortHelpModal.jsx","pages/postsort/Postsort.jsx","pages/presort/PresortModal.jsx","pages/presort/PresortDND.jsx","pages/presort/PresortPreventNavModal.jsx","pages/presort/PresortFinishedModal.jsx","pages/presort/PresortIsComplete.jsx","pages/presort/PleaseLogInFirst.jsx","pages/presort/Presort.jsx","pages/sort/checkForColumnOverload.js","pages/sort/move.js","pages/sort/reorder.js","pages/sort/getItemStyle.js","pages/sort/getListStyle.js","pages/sort/SortColumn.jsx","pages/sort/getListStyleHori.js","pages/sort/getItemStyleHori.js","pages/sort/calculateDragResults.js","pages/sort/SortGrid.jsx","pages/sort/SortHelpModal.jsx","utilities/SortingFinishedModal.jsx","pages/sort/PreventSortNavModal.jsx","pages/sort/OverloadedColumnModal.jsx","pages/sort/SortColGuides.jsx","pages/sort/Sort.jsx","pages/submit/SubmitSuccessModal.jsx","pages/submit/SubmitFailureModal.jsx","pages/submit/SubmitButton.jsx","pages/submit/calculatePostsortResults.js","pages/submit/FallbackButtons.jsx","pages/submit/SubmitFallback.jsx","pages/submit/SaveLocalDataToLocalStorageButton.jsx","pages/submit/ReturnToLocalPanelButton.jsx","pages/submit/LocalSubmitSuccessModal.jsx","pages/submit/SubmitButtonGS.jsx","pages/submit/Submit.jsx","pages/survey/SurveyTextElement.jsx","pages/survey/SurveyTextAreaElement.jsx","pages/survey/SurveyRadioElement.jsx","pages/survey/SurveyDropdownElement.jsx","pages/survey/SurveyCheckboxElement.jsx","pages/survey/SurveyRating2Element.jsx","pages/survey/SurveyRating5Element.jsx","pages/survey/SurveyRating10Element.jsx","pages/survey/SurveyInformationElement.jsx","pages/survey/AnswerAllSurveyQuestionsModal.jsx","pages/survey/SurveyHelpModal.jsx","pages/survey/Survey.jsx","utilities/NoPageFound.jsx","utilities/processConfigXMLData.js","utilities/processMapXMLData.js","utilities/processLanguageXMLData.js","utilities/processStatementsXMLData.js","pages/landing/LoadingScreen.jsx","utilities/PromptUnload.jsx","pages/footer/NextButton.jsx","pages/footer/FooterFontSizer.jsx","pages/footer/CardHeightSizer.jsx","pages/footer/calcProgressScore.js","pages/footer/HelpButton.jsx","pages/footer/getNextPage.js","pages/footer/StyledFooter.jsx","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createGlobalStyle","decodeHTML","string","includes","replace","error","console","log","getCumulativeDuration","startTime","cumulativeDuration2","cumulativeDuration","Date","now","getCurrentDateTime","currentDate","date","getDate","month","getMonth","year","getFullYear","hour","getHours","minute","getMinutes","seconds","getSeconds","calculateTimeOnPage","prefix","prefix2","results","identifier","identifier3","identifier4","durationCumulative","localStorage","getItem","newDurationCumulative","setItem","dateString","dateTime","formattedDuration","s","pad","n","slice","millisecondsToTime","createConfigSettingsSlice","set","get","configObj","surveyQuestionObjArray","requiredAnswersObj","setConfigObj","configObjInput","setSurveyQuestionObjArray","setRequiredAnswersObj","createLanguageSettingsSlice","langObj","setLangObj","langObjInput","createMapSettingsSlice","mapObj","setMapObj","mapObjInput","createStatementsSettingsSlice","statementsObj","columnStatements","resetColumnStatements","setStatementsObj","statementsObjInput","setColumnStatements","columnStatementsInput","setResetColumnStatements","inputValue","useSettingsStore","create","createLocalPanelSlice","displayLocalPartIdWarning1","displayLocalPartIdWarning2","triggerLocalDeleteModal","localParticipantName","setLocalParticipantName","setLocalPartIdWarning1","bool","setLocalPartIdWarning2","setLocalDeleteModal","createPresortSlice","triggerPresortModal","presortNoReturn","presortPosCards","presortNeuCards","presortNegCards","presortCards","presortSortedStatementsNumInitial","presortFinished","triggerPresortFinishedModal","triggerPresortPreventNavModal","setPresortNoReturn","setPresortPosCards","setPresortNeuCards","setPresortNegCards","setPresortCards","setPresortSortedStatementsNumInitial","setPresortFinished","setTriggerPresortFinishedModal","setTriggerPresortPreventNavModal","setResults","setTriggerPresortModal","createLandingSlice","dataLoaded","isLoggedIn","triggerLandingModal","usercode","urlUsercode","partId","localUsercode","displayAccessCodeWarning","userInputAccessCode","displayLandingContent","triggerSaveBeforeDeleteModal","userInputPartId","displayPartIdWarning","setUrlUsercode","setDisplayPartIdWarning","setUserInputPartId","setTriggerSaveBeforeDeleteModal","setDataLoaded","setIsLoggedIn","setTriggerLandingModal","setUsercode","setPartId","setLocalUsercode","input","setDisplayAccessCodeWarning","setUserInputAccessCode","setDisplayLandingContent","createFooterSlice","cardFontSize","currentPage","progressScore","progressScoreAdditional","progressScoreAdditionalSort","displayNextButton","setCardFontSize","setCurrentPage","setProgressScore","setProgressScoreAdditional","setProgressScoreAdditionalSort","setDisplayNextButton","createSortSlice","cardHeight","columnWidth","draggingOverColumnId","hasOverloadedColumn","isSortingCards","isSortingFinished","overloadedColumn","sortCompleted","sortFinished","sortFinishedModalHasBeenShown","sortCharacteristics","topMargin","triggerSortModal","triggerSortPreventNavModal","triggerSortOverloadedColumnModal","triggerSortingFinishedModal","sortGridResults","setDraggingOverColumnId","setOverloadedColumn","setTriggerSortingFinishedModal","setSortGridResults","setColumnWidth","setTopMargin","setIsSortingCards","setSortCompleted","setSortFinished","setSortFinishedModalHasBeenShown","setSortCharacteristics","setCardHeight","setTriggerSortModal","setIsSortingFinished","setHasOverloadedColumn","setTriggerSortPreventNavModal","setTriggerSortOverloadedColumnModal","createPostsortSlice","resultsPostsort","statementCommentsObj","triggerPostsortModal","setResultsPostsort","setStatementCommentsObj","setTriggerPostsortModal","createSubmitSlice","displaySubmitFallback","displayGoodbyeMessage","triggerLocalSubmitSuccessModal","triggerTransmissionOKModal","triggerTransmissionFailModal","submitFailNumber","transmittingData","checkInternetConnection","setCheckInternetConnection","setTransmittingData","setTriggerTransmissionFailModal","setTriggerTransmissionOKModal","setTriggerLocalSubmitSuccessModal","setDisplaySubmitFallback","setDisplayGoodbyeMessage","createSurveySlice","triggerSurveyModal","resultsSurvey","triggerSurveyPreventNavModal","checkRequiredQuestionsComplete","answersStorage","setAnswersStorage","setTriggerSurveyModal","setResultsSurvey","setTriggerSurveyPreventNavModal","setCheckRequiredQuestionsComplete","useStore","getLangObj","state","getTriggerLandingModal","getSetTriggerLandingModal","LandingModal","loginHelpModalHead","ReactHtmlParser","landingHelpModalHead","loginHelpModalText","landingHelpModalText","className","open","onClose","center","ModalHeader","ModalContent","styled","div","LogInSubmitButton","props","loginSubmitButtonText","StyledSubmitButton","tabindex","type","onClick","button","theme","active","secondary","primary","focus","getConfigObj","getDisplayAccessCodeWarning","getDisplayPartIdWarning","getSetUserInputPartId","getSetUserInputAccessCode","getUserInputPartId","getUserInputAccessCode","getSetDisplayLandingContent","getSetPartId","getSetDisplayNextButton","getSetIsLoggedIn","getSetDisplayAccessCodeWarning","getSetDisplayPartIdWarning","LogInScreen","welcomeText","loginWelcomeText","loginHeaderText","loginPartIdText","partIdWarning","accessCodeWarning","accessInputText","useEffect","handleKeyUpStart","event","key","userPartIdOK","userAccessOK","projectAccessCode","accessCode","length","setTimeout","window","addEventListener","removeEventListener","Fragment","LogInWelcomeText","Container","StyledHr","StyledInputDiv","StyledInput","onChange","e","target","value","autoFocus","WarningText","hr","checkForIeBrowser","ua","navigator","userAgent","indexOf","detectIEEdge","ieWarningHeaderText","ieWarningText","parseParams","params","rawParams1","split","extractedParams","forEach","item","getLocalParticipantName","getLocalUsercode","getSetLocalParticipantName","getSetLocalUsercode","getSetLocalPartIdWarning1","getSetLocalPartIdWarning2","getSetTriggerLocalSubmitSuccessModal","getSetResults","getResults","withRouter","localStartButtonText","checkForNextPageConditions","useCallback","value1","value2","history","to","location","match","staticContext","rest","push","localDeleteButtonText","LocalSortsDownloadButton","localDownloadButtonText","useLocalPersist","persist","localStoredQsorts","hasDownloadedQsorts","setHasDownloadedQsorts","setLocalStoredQsorts","name","getSetLocalDeleteModal","getLocalStoredQsorts","getSetLocalStoredQsorts","setDisplayLocalDeleteModal","getTime","JSON","stringify","getTriggerLocalDeleteModal","LocalDeleteModal","localDeleteModalHead","localDeleteModalText","ButtonContainer","LocalConfirmDeleteButton","getTriggerSaveBeforeDeleteModal","getSetTriggerSaveBeforeDeleteModal","localSaveBeforeDeleteModalHeader","localSaveBeforeDeleteModalText","getDisplayLocalPartIdWarn1","getDisplayLocalPartIdWarn2","getSetHasDownloadedQsorts","getHasDownloadedQsorts","displayPartIdWarning1","displayPartIdWarning2","localHeader","partIdText","usercodeText","localParticipantsText","storedQsortsHeaderText","headerText","Object","keys","LocalSaveBeforeDeleteModal","LocalStartButton","Container2","StoredHeader","LocalDeleteButton","studyTitle","myDate","exportName","exportObj","dataStr","encodeURIComponent","downloadAnchorNode","document","createElement","setAttribute","body","appendChild","click","remove","downloadObjectAsJson","getDataLoaded","getSetCurrentPage","getSetProgressScore","getSetUrlUsercode","getDisplayLandingContent","getSetCardFontSize","getMapObject","LandingPage","headerBarColor","landingHead","welcomeTextHtml","initialScreen","fontSizeEstimate","Math","ceil","qSortHeaderNumbers","setDefaultFontSize","defaultFontSize","urlName","href","undefined","codeName","updatedResults","displayLogInScreen","displayPartIdScreen","displayAccessCodeScreen","firebaseOrLocal","ContainerDiv","LocalStart","initialScreenSetting","isIeBrowser","SortTitleBar","background","InternetExplorerWarning","PartIdScreen","AccessCodeScreen","ContentDiv","fadeIn","keyframes","fadeOut","view","sanitizeString","shouldDoReplace","shouldDoReplace2","getColumnStatements","getResultsPostsort","getSetResultsPostsort","getStatementCommentsObj","LowCards","height","width","disagreeObj","lowCards","disagreeText","placeholder","columnDisplay","map","index","statementHtml","statement","indexVal","CardTag","CardAndTextHolder","Card","TagContainerDiv","CommentArea","id","defaultValue","comment","onBlur","itemId","cards","vCols","targetCard","userEnteredText","el","textarea","LowCards2","lowCards2","columnDisplay2","HighCards","agreeObj","highCards","agreeText","cardColor","HighCards2","highCards2","getTriggerPostsortModal","getSetTriggerPostsortModal","PostsortHelpModal","postsortHelpModalHead","postsortModalHead","postsortHelpModalText","postsortModalText","getMapObj","getCardHeight","getCardFontSize","PostSort","postsortInstructions","titleText","postsortHeader","agree","postsortAgreement","disagree","postsortDisagreement","postsortConvertObj","agreeColDisp1","pop","agreeColDisp2","disagreeColDisp1","shift","disagreeColDisp2","postsortAgreeColDisp1","postsortAgreeColDisp2","showSecondPosColumn","postsortDisagreeColDisp1","postsortDisagreeColDisp2","showSecondNegColumn","displaySecondColumn","CardsContainer","PostsortInstructions","getTriggerPresortModal","getSetTriggerPresortModal","PresortModal","header","presortModalHead","modalText","presortModalText","getStatementsObj","getPreSortedStateNumInit","getSetColumnStatements","getSetPresortFinished","getSetTrigPresortFinModal","getSetProgressScoreAdditional","PresortDND","statementsName","presortStatements","btnDisagreement","presortDisagreement","btnAgreement","presortAgreement","btnNeutral","presortNeutral","useState","presortSortedStatementsNum","setPresortSortedStatementsNum","itemsFromBackend","statements","defaultFontColor","items","neg","neutral","pos","columns","setColumns","onDragEnd","result","destination","droppableId","source","statementsArray","statementList","destinationId","draggableId","i","divColor","pinkChecked","yellowChecked","greenChecked","sortValue","listIndex","sortedStatements","sourceColumn","destColumn","sourceItems","destItems","splice","removed","backgroundColor","greenCardColor","pinkCardColor","yellowCardColor","totalStatements","completedPercent","toFixed","sourceCol","copiedItems","handleKeyUp","reason","mode","combine","projectResultsObj","npos","nneu","nneg","PresortGrid","entries","columnId","column","style","display","flexDirection","alignItems","ColumnNamesDiv","margin","provided","snapshot","droppableProps","ref","innerRef","isDraggingOver","padding","DroppableContainer","draggableProps","dragHandleProps","userSelect","overflow","fontSize","filter","isDragging","color","getTriggerModalOpen","getSetTrigPrePrevNavModal","PresortPreventNavModal","triggerModalOpen","modalHead","presortPreventNavModalHead","presortPreventNavModalText","getTriggerModal","getSetTriggerModal","PresortFinishedModal","triggerModal","setTriggerModal","presortFinishedModalHead","presortFinishedModalText","PresortIsComplete","mainText","stepCompleteMessage","titleBarText","PleaseLogInFirst","logInFirst","getIsLoggedIn","getPresortNoReturn","getResetColumnStatements","PresortPage","parse","cloneDeep","checkForColumnOverload","columnLengthCheckArray","forcedSorts","qSortPattern","tempArray","setState","numSortedStatements","reduce","acc","val","move","sourceListArray","destinationListArray","droppableSource","droppableDestination","allowUnforcedSorts","qSortHeaders","destClone","currentColumnLength","qSortPatternClone","overloadArrayCheck","isEqual","reorder","columnToBeReordered","startIndex","endIndex","list","getItemStyle","draggableStyle","cardWidth","fontColor","newCardColor","lineHeight","borderRadius","justifyContent","border","zIndex","textAlign","getListStyle","columnColor","isUnderMaxCards","columnStatementsArray","maxCards","minWidth","marginTop","marginRight","minHeight","marginBottom","outline","outlineOffset","SortColumn","this","direction","currentSortValue","React","Component","getListStyleHori","horiCardMinHeight","paddingRight","overflowX","getItemStyleHori","newSortValue","isNaN","WebkitUserSelect","maxWidth","paddingLeft","touchAction","marginLeft","order","calculateDragResults","outcome","sortValue1","parseInt","testForCompleteArray","catchNan","resultsText","newValue","charAt","substring","sort","returnObj","getSetColState","getSetIsSortingCards","getSetSortCompleted","getSetProgScoreAddSort","getSortCharacteristics","getSetSortCharacteristics","getSetCardHeight","getSetColumnWidth","getSortFinModalHasBeenShown","getSortGridResults","getSetIsSortingFinished","getSetSortFinModal","getSetTriggerSortingFinModal","getSetSortGridResults","SortGrid","visibleWidthAdjust","setMinCardHeight","minCardHeight","columnColorsArray","columnHeadersColorsArray","setValue","maxNumCardsInCol","max","dimensions","highlightedColHeader","warnOverloadedColumn","qSortHeaderNumber","columnHeadersColor","manageDragResults","sortCharacterisiticsPrep","totalStatements2","SortFooterDiv","getTriggerSortModal","getSetTriggerSortModal","SortHelpModal","helpModalHead","sortHelpModalHead","helpModalText","sortHelpModalText","getTriggerSortFinishedMod","getSetTrigSortFinishMod","SortingFinishedModal","sortingCompleteModalHead","sortingCompleteModalText","getSetTriggerSortPreventNavModal","sortPreventNavModalHead","sortPreventNavModalText","getSetTrigOverColModal","OverloadedColumnModal","sortOverloadedColumnModalHead","sortOverloadedColumnModalText","SortColGuides","ColorBarDivContainer","ColorBarDiv","uuid","getColumnWidth","getTopMargin","getSetPresortNoReturn","getSetTopMargin","Sort","sortDisagreement","sortAgreement","condOfInst","innerHeight","clientWidth","setDimensions","debouncedHandleResize","fn","ms","timer","_","clearTimeout","apply","arguments","debounce","sortGridMarginTop","getElementById","clientHeight","PreventSortNavModal","SortTitleBarContainer","Disagree","CondOfInst","condOfInstFontSize","Agree","SortGridContainer","getSetTriggerTransOKMod","getSetDisplayGoodbyeMessage","SubmitSuccessModal","transferOkModalHeader","transferOkModalText","getSetTrigTransFailMod","SubmitFailureModal","transferFailModalHeader","transferFailModalText","getDisplaySubmitFallback","getSubmitFailNumber","getSetTrigTranFailMod","getSetTrigTransOKModal","getSetDisplaySubmitFallback","getTransmittingData","getSetTransmittingData","getCheckInternetConnection","getSetCheckInternetConnection","SubmitResultsButton","btnTransferText","btnTransfer","DisabledButton","TransmittingSpin","StyledButton","preventDefault","disabled","firebase","apps","auth","signInAnonymously","rootRef","removeItem","catch","errorCode","code","errorMessage","message","handleClick","WarningDiv","calculatePostsortResults","newObject","highCardNum","highCardVal","highCard2Num","highCard2Val","lowCardNum","lowCardVal","lowCard2Num","lowCard2Val","neuCardNum","hasOwnProperty","length2","ii","displayNeutralObjects","length5","jjj","length4","jj","length3","j","downloadButtonText","btnDownload","resultsWithId","finalResults","content","fileName","contentType","a","file","Blob","URL","createObjectURL","download","revokeObjectURL","SubmitFallback","fallbackMessage","StyledMessage","FallbackButtons","SubmitLocalResultsButton","localSaveDataButton","participantDesignation","newColumnStatements","returnToLocalPanelButtonText","reload","Promise","resolve","reject","getTrigLclSubmitSucMdl","LocalSubmitSuccessModal","localSubmitSuccessModalHeader","localSubmitSuccessModalText","apiString","api","rawData","store","SteinStore","formattedResultsObj","iterator","append","res","getResultsSurvey","getPartId","getUsercode","getUrlUsercode","getDisplayGoodbyeMessage","getParticipantName","transmissionResults","SubmitPage","transferTextAbove","transferTextBelow","goodbyeMessage","pageHeader","transferHead","timeOnlandingPage","timeOnpresortPage","timeOnsortPage","showPostsort","timeOnpostsortPage","showSurvey","timeOnsurveyPage","numPos","numNeu","numNeg","newPostsortObject","keys2","property","GoodbyeDiv","SaveLocalDataToLocalStorageButton","SubmitButtonGS","steinApiUrl","SubmitButton","getSetResultsSurvey","getAnswersStorage","getSetAnswersStorage","SurveyTextElement","check","opts","qNum","userText","setUserText","bgColor","formatOptions","setFormatOptions","userTextLen","userTextLen1","required","labelText","label","noteText","note","TitleBar","NoteText","TextInput","valueLen","restricted","limited","limitLength","sanitizedText","getCheckReqQsComplete","getRequiredAnswersObj","getSetRequiredAnswersObj","SurveyTextAreaElement","TextAreaInput","SurveyRadioElement","testValue","setTestValue","optsArray","options","array","x","trim","getOptionsArray","RadioInput","checked","setter","InputStyleDiv","LabelDiv","selected","setSelected","response","RadioItems","radioList","RadioContainer","handleChange","SurveyDropdownElement","originalOptions","localStore","hasBeenAnswered","selected2","tempObj","labelledBy","SurveyCheckboxElement","setHasBeenAnswered","nameValue","Array","fill","checkedState","setCheckedState","text","currentState","toString","position","updatedCheckedState","substr","htmlFor","SurveyRatings2Element","setLocalStore","rows","scaleArray","scale","from","selectedRow","newObj","newArray","newCheckedState","row","rating2State","conditionalLength","itemText","ItemContainer","OptionsText","RatingTitle","ScaleDiv","span","SurveyRatings5Element","local5Store","setLocal5Store","checked5State","setChecked5State","newChecked5State","CircleDiv","SurveyRatings10Element","ratingState","SurveyInformationElement","infoText","getSetTrigSurvPrevNavModal","AnswerAllSurveyQuestionsModal","surveyPreventNavModalHead","surveyPreventNavModalText","getTriggerSurveyModal","getSetTriggerSurveyModal","SurveyHelpModal","surveyModalHead","surveyModalText","getSurveyQuestionObjArray","getCheckReqQuesComplete","SurveyPage","surveyQuestionObjects","surveyHeader","SurveyQuestions","object","SurveyRating2Element","SurveyRating5Element","SurveyRating10Element","NonExistentPage","processConfigXMLData","dataObject","surveyQuestionArray","data","elements","surveyData","attributes","questionType","bg","isRequired","maxlength","shuffleCards","processMapXMLData","vColsObj","colInfoArray","_attributes","labelInt","abs","colNum","colour","numCards","_text","splitArray","headerNumbers","processLanguageXMLData","language","processStatementsXMLData","statementNum","shuffledCards","shuffle","LoadingScreen","TextDiv","PromptUnload","alertUser","returnValue","when","getPresortFinished","getCurrentPage","getSetCheckReqQuesCompl","getIsSortingFinished","getHasOverloadedColumn","getSetTrigSortPrevNavModal","getSetTrigSortOverColMod","goToNextPage","setTriggerSortOverloadedColModal","isPresortFinished","checkArray","NextButton","FooterFontSizer","fontSizeText","SpanDiv","SizeButton","padBottom","CardHeightSizer","cardHeightText","calcProgressScore","additionalProgress1","additionalProgressSort","additionalProgressState","additionalProgressStateSort","adjustmentValue1","adjustmentValue2","adjustmentValue3","additionalProgress","getSetTriggerSubmitModal","setTriggerSubmitModal","HelpButton","buttonText","btnHelp","StyledHelpButton","getNextPage","getDisplayNextButton","getAdditionalProgress","getAdditionalProgressSort","StyledFooter","showAdjustmentContainer","showCardHeightSizer","displayHelpButton","logoHtml","nextButtonText","btnNext","projectName","today","totalProgressScore","CenterContent","AdjustmentsContainer","ProgressBarDiv","completed","labelColor","baseBgColor","nextPage","StyledFooterDiv","LogoContainer","CenterDiv","footer","convert","require","getSetConfigObj","getSetLangObj","getSetMapObj","getSetStatementsObj","getSetResetColumnStatements","getSetSurveyQuesObjArray","getSetDataLoaded","App","isLoading","setLoading","axios","languageData","xml2js","compact","ignoreComment","spaces","configData","info","mapData","statementsData","exact","path","component","SortPage","PostsortPage","NoPageFound","ReactDOM","render","StrictMode","Suspense","fallback"],"mappings":"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","file":"static/js/main.ad4adc2b.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createGlobalStyle } from \"styled-components\";\n\nexport default createGlobalStyle`\n    *{\n        margin: 0;\n        padding: 0;\n        outline:0;\n        box-sizing:border-box;\n        font-family: 'Open Sans', sans-serif; \n    }\n    #root{\n        margin:0 auto;\n    }\n\n    /*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */\n\n/* Document\n   ========================================================================== */\n\n/**\n * 1. Correct the line height in all browsers.\n * 2. Prevent adjustments of font size after orientation changes in iOS.\n */\n\nhtml {\n  line-height: 1.15; /* 1 */\n  -webkit-text-size-adjust: 100%; /* 2 */\n  overflow: -moz-scrollbars-vertical; \n  overflow-y: scroll;\n  -ms-touch-action: manipulation;\ntouch-action: manipulation;\n}\n\n\n\n/* Sections\n   ========================================================================== */\n\n/**\n * Remove the margin in all browsers.\n */\n\nbody {\n  margin: 0;\n  height:calc(100vh-50px);\n  overscroll-behavior: none;\n}\n\n/**\n * Render the main element consistently in IE.\n */\n\nmain {\n  display: block;\n}\n\n/**\n * Correct the font size and margin on 'h1' elements within 'section' and\n * 'article' contexts in Chrome, Firefox, and Safari.\n */\n\nh1 {\n  font-size: 2em;\n  margin: 0.67em 0;\n}\n\n/* Grouping content\n   ========================================================================== */\n\n/**\n * 1. Add the correct box sizing in Firefox.\n * 2. Show the overflow in Edge and IE.\n */\n\nhr {\n  box-sizing: content-box; /* 1 */\n  height: 0; /* 1 */\n  overflow: visible; /* 2 */\n}\n\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd 'em' font sizing in all browsers.\n */\n\npre {\n  font-family: monospace, monospace; /* 1 */\n  font-size: 1em; /* 2 */\n}\n\n/* Text-level semantics\n   ========================================================================== */\n\n/**\n * Remove the gray background on active links in IE 10.\n */\n\na {\n  background-color: transparent;\n}\n\n/**\n * 1. Remove the bottom border in Chrome 57-\n * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.\n */\n\nabbr[title] {\n  border-bottom: none; /* 1 */\n  text-decoration: underline; /* 2 */\n  text-decoration: underline dotted; /* 2 */\n}\n\n/**\n * Add the correct font weight in Chrome, Edge, and Safari.\n */\n\nb,\nstrong {\n  font-weight: bolder;\n  display: inline !important;\n}\n\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd 'em' font sizing in all browsers.\n */\n\ncode,\nkbd,\nsamp {\n  font-family: monospace, monospace; /* 1 */\n  font-size: 1em; /* 2 */\n}\n\n/**\n * Add the correct font size in all browsers.\n */\n\nsmall {\n  font-size: 80%;\n}\n\n/**\n * Prevent 'sub' and 'sup' elements from affecting the line height in\n * all browsers.\n */\n\nsub,\nsup {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline;\n}\n\nsub {\n  bottom: -0.25em;\n}\n\nsup {\n  top: -0.5em;\n}\n\n/* Embedded content\n   ========================================================================== */\n\n/**\n * Remove the border on images inside links in IE 10.\n */\n\nimg {\n  border-style: none;\n}\n\n/* Forms\n   ========================================================================== */\n\n/**\n * 1. Change the font styles in all browsers.\n * 2. Remove the margin in Firefox and Safari.\n */\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  font-family: inherit; /* 1 */\n  font-size: 100%; /* 1 */\n  line-height: 1.15; /* 1 */\n  margin: 0; /* 2 */\n}\n\n/**\n * Show the overflow in IE.\n * 1. Show the overflow in Edge.\n */\n\nbutton,\ninput { /* 1 */\n  overflow: visible;\n}\n\n/**\n * Remove the inheritance of text transform in Edge, Firefox, and IE.\n * 1. Remove the inheritance of text transform in Firefox.\n */\n\nbutton,\nselect { /* 1 */\n  text-transform: none;\n}\n\n/**\n * Correct the inability to style clickable types in iOS and Safari.\n */\n\nbutton,\n[type=\"button\"],\n[type=\"reset\"],\n[type=\"submit\"] {\n  -webkit-appearance: button;\n}\n\n/**\n * Remove the inner border and padding in Firefox.\n */\n\nbutton::-moz-focus-inner,\n[type=\"button\"]::-moz-focus-inner,\n[type=\"reset\"]::-moz-focus-inner,\n[type=\"submit\"]::-moz-focus-inner {\n  border-style: none;\n  padding: 0;\n}\n\n/**\n * Restore the focus styles unset by the previous rule.\n */\n\nbutton:-moz-focusring,\n[type=\"button\"]:-moz-focusring,\n[type=\"reset\"]:-moz-focusring,\n[type=\"submit\"]:-moz-focusring {\n  outline: 1px dotted ButtonText;\n}\n\n/**\n * Correct the padding in Firefox.\n */\n\nfieldset {\n  padding: 0.35em 0.75em 0.625em;\n}\n\n/**\n * 1. Correct the text wrapping in Edge and IE.\n * 2. Correct the color inheritance from 'fieldset' elements in IE.\n * 3. Remove the padding so developers are not caught out when they zero out\n *    'fieldset' elements in all browsers.\n */\n\nlegend {\n  box-sizing: border-box; /* 1 */\n  color: inherit; /* 2 */\n  display: table; /* 1 */\n  max-width: 100%; /* 1 */\n  padding: 0; /* 3 */\n  white-space: normal; /* 1 */\n}\n\n/**\n * Add the correct vertical alignment in Chrome, Firefox, and Opera.\n */\n\nprogress {\n  vertical-align: baseline;\n}\n\n/**\n * Remove the default vertical scrollbar in IE 10+.\n */\n\ntextarea {\n  overflow: auto;\n}\n\n/**\n * 1. Add the correct box sizing in IE 10.\n * 2. Remove the padding in IE 10.\n */\n\n[type=\"checkbox\"],\n[type=\"radio\"] {\n  box-sizing: border-box; /* 1 */\n  padding: 0; /* 2 */\n}\n\n/**\n * Correct the cursor style of increment and decrement buttons in Chrome.\n */\n\n[type=\"number\"]::-webkit-inner-spin-button,\n[type=\"number\"]::-webkit-outer-spin-button {\n  height: auto;\n}\n\n/**\n * 1. Correct the odd appearance in Chrome and Safari.\n * 2. Correct the outline style in Safari.\n */\n\n[type=\"search\"] {\n  -webkit-appearance: textfield; /* 1 */\n  outline-offset: -2px; /* 2 */\n}\n\n/**\n * Remove the inner padding in Chrome and Safari on macOS.\n */\n\n[type=\"search\"]::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n\n/**\n * 1. Correct the inability to style clickable types in iOS and Safari.\n * 2. Change font properties to 'inherit' in Safari.\n */\n\n::-webkit-file-upload-button {\n  -webkit-appearance: button; /* 1 */\n  font: inherit; /* 2 */\n}\n\n/* Interactive\n   ========================================================================== */\n\n/*\n * Add the correct display in Edge, IE 10+, and Firefox.\n */\n\ndetails {\n  display: block;\n}\n\n/*\n * Add the correct display in all browsers.\n */\n\nsummary {\n  display: list-item;\n}\n\n/* Misc\n   ========================================================================== */\n\n/**\n * Add the correct display in IE 10+.\n */\n\ntemplate {\n  display: none;\n}\n\n/**\n * Add the correct display in IE 10.\n */\n\n[hidden] {\n  display: none;\n}\n\n\n/***********************************\n  FOOTER CSS\n *******************************************************************************/\nfooter { \n  position: absolute;\n  bottom: 0;\n  width: 100%;\n  height: 50px;\n  background: #ececec; \n}\n\n/***********************************\n  PRESORT CSS\n *******************************************************************************/\n\n  .dragObject {\n    -webkit-user-select: none;\n    user-select: none;\n    display: flex;\n    flex-direction: row;\n  }\n\n\n\n  .react-responsive-modal-modal {\n  background: white;\n  max-width: 700px;\n  width: 100%;\n  padding: 15px;\n\n}\n\n  #cardsDiv{\n    grid-column-start: 3;\n    overflow: hidden;\n    align-self: end;\n  }\n  \n  #cards{\n    max-height:215px;\n    min-height:150px;\n    overflow: hidden;\n  }\n  \n  #completionRatio {\n    grid-row-start: 2;\n    grid-column-start: 3;\n    text-align: center;\n    font-weight: bold;\n  }\n\n  #negDiv{\n    grid-row-start: 3;\n    grid-column-start: 2;\n    overflow-y: auto;\n    background-color: white;\n    min-height: 300px;\n    height: 58vh;\n    padding-top: 5px;\n    border-top-left-radius: 3px;\n    border-bottom-left-radius: 3px;\n    border: 1px solid #aeaeae;\n\n    ::-webkit-scrollbar {\n      // Width of vertical scroll bar\n      width: 10px;\n      // Height of horizontal scroll bar\n      height: 10px;\n\n    }\n    ::-webkit-scrollbar-thumb {\n      border-radius: 8px;\n      background: gray;\n    }\n  }\n  \n\n  #neutralDiv{\n    grid-row-start: 3;\n    grid-column-start: 3;\n    overflow-y: auto;\n    background-color: white;\n    min-height: 300px;\n    height: 58vh;\n    padding-top: 5px;\n    border: 1px solid #aeaeae;\n\n    ::-webkit-scrollbar {\n      // Width of vertical scroll bar\n      width: 10px;\n      // Height of horizontal scroll bar\n      height: 10px;\n\n    }\n    ::-webkit-scrollbar-thumb {\n      border-radius: 8px;\n      background: gray;\n    }\n\n  }\n\n  #posDiv{\n    grid-row-start: 3;\n    grid-column-start: 4;\n    overflow-y: auto;\n    background-color: white;\n    height: 58vh;\n    padding-top: 5px;\n    border-top-right-radius: 3px;\n    border-bottom-right-radius: 3px;\n    border: 1px solid #aeaeae;\n\n    ::-webkit-scrollbar {\n      // Width of vertical scroll bar\n      width: 10px;\n      // Height of horizontal scroll bar\n      height: 10px;\n\n    }\n    ::-webkit-scrollbar-thumb {\n      border-radius: 8px;\n      background: gray;\n    }\n  }\n\n  #pos{\n    min-height: 52vh;\n    border-radius: 3px;\n  }\n\n  #neutral{\n    min-height: 52vh;\n    border-radius: 3px;\n  }\n\n  #neg{\n    min-height: 52vh;\n    border-radius: 3px;\n  }\n}\n\n\n/***********************************\n  SORT CSS\n *******************************************************************************/\n.sortContainer {\n  display: flex;\n  flex-direction: column;\n  margin: 5px;\n  background: rgba(0, 0, 0, 0.1);\n  min-height: 400px;\n  max-height: 800px;\n  overflow: auto;\n}\n\n.rootDiv {\n  background-color: white;\n  /* background-color: #6a9bc3; */\n  padding: 0px, 0px, 10px, 10px;\n  min-height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: flex-start;\n  -webkit-user-select: none;\n  -webkit-touch-callout: none;\n}\n\n.headersContainer {\n  display: flex;\n  position: fixed;\n  justify-content: center;\n  align-items: flex-start;\n  height: 50px;\n  flex-direction: \"row-reverse\";\n}\n\n.greenSortCard {\n  display: flex;\n  justify-content: center;\n  background: lightgreen;\n  border: 2px solid gray;\n}\n\n.pinkSortCard {\n  display: flex;\n  justify-content: center;\n  background-color: rgba(255, 182, 193, 0.4);\n  border: 2px solid gray;\n}\n\n.yellowSortCard {\n  display: flex;\n  justify-content: center;\n  background-color: lightgray;\n  border: 2px solid gray;\n}\n\n/* \n.isPositiveStatement {\n  background-color: rgba(199, 246, 199, 0.6);\n} */\n\n.sortFooter {\n  display: flex;\n  flex-direction: row;\n  background: #e4e4e4;\n  position: fixed;\n  left: 0px;\n  bottom: 50px !important;\n  width: 100%;\n  height: 150px;\n}\n\n.footerMessageBox {\n  flex-basis: 100px;\n  padding-right: 5px;\n  padding-left: 5px;\n  width: 100px;\n  height: 100px;\n  border: 2px solid lightgray;\n  text-align: center;\n}\n\n.footerMessageBox p {\n  padding: 0px;\n  margin-top: 10px;\n  font-size: 10px;\n  color: #3273dc;\n}\n\n.sortEndButton {\n  position: fixed;\n  bottom: 0;\n  right: 0;\n  margin: 10px;\n}\n\n.cardSlider {\n  width: 100vw;\n  overflow: hidden;\n  display: flex;\n  align-items: center;\n}\n\n\n\n\n/***********************************\n  LANDING MODAL CSS\n *******************************************************************************/\n/* \n.customModal .react-responsive-modal-modal {\n    background: rgba(0, 0, 0, 0.8) !important;\n  } */\n\n  /*\n  spinner css\n  */\n\n  #loading {\n  display: inline-block;\n  width: 100px;\n  margin-top: 40px;\n  height: 100px;\n  border: 10px solid lightgray;\n  border-radius: 50%;\n  border-top-color: #337ab7;\n  animation: spin 1s ease-in-out infinite;\n  -webkit-animation: spin 1s ease-in-out infinite;\n}\n\n@keyframes spin {\n  to { -webkit-transform: rotate(360deg); }\n}\n@-webkit-keyframes spin {\n  to { -webkit-transform: rotate(360deg); }\n}\n\n\n`;\n","const decodeHTML = (string) => {\n  try {\n    let shouldDoReplace = string.includes(\"{{{\");\n\n    if (shouldDoReplace === true) {\n      const replaceLeft = /{{{/gi;\n      const replaceRight = /}}}/gi;\n      const stringText2 = string.replace(replaceLeft, \"<\");\n      const stringText3 = stringText2.replace(replaceRight, \">\");\n      return stringText3;\n    } else {\n      return string;\n    }\n  } catch (error) {\n    console.log(\"There was an error decoding into HTML\");\n    console.error(error);\n  }\n};\n\nexport default decodeHTML;\n","// import state from \"../store\";\n// import store from \"../state\";\n\nconst getCumulativeDuration = (startTime, cumulativeDuration2) => {\n  const cumulativeDuration = +cumulativeDuration2;\n  // duration, location\n  let dateNow = Date.now();\n\n  let fullTime = dateNow - startTime + cumulativeDuration;\n\n  return fullTime;\n};\n\nexport default getCumulativeDuration;\n","const getCurrentDateTime = () => {\n  const currentDate = new Date();\n  const date = currentDate.getDate();\n  const month = currentDate.getMonth(); //Be careful! January is 0 not 1\n  const year = currentDate.getFullYear();\n  const hour = currentDate.getHours();\n  let minute = currentDate.getMinutes();\n  let seconds = currentDate.getSeconds();\n  if (seconds < 10) {\n    seconds = \"0\" + seconds;\n  }\n  if (minute < 10) {\n    minute = \"0\" + minute;\n  }\n  let dateString =\n    date +\n    \"/\" +\n    (month + 1) +\n    \"/\" +\n    year +\n    \" @ \" +\n    hour +\n    \":\" +\n    minute +\n    \":\" +\n    seconds;\n\n  return dateString;\n};\n\nexport default getCurrentDateTime;\n","import getCumulativeDuration from \"./getCumulativeDuration\";\nimport millisecondsToTime from \"./millisecondsToTime\";\nimport getCurrentDateTime from \"./getCurrentDateTime\";\n\nconst calculateTimeOnPage = (startTime, prefix, prefix2, results) => {\n  const identifier = `cumulative${prefix}Duration`;\n  // const identifier2 = `set${prefix2}DurationCumulative`;\n  const identifier3 = `timeOn${prefix2}`;\n  const identifier4 = `lastAccess${prefix2}`;\n\n  // const durationCumulative = store.getState()[identifier];\n  const durationCumulative = localStorage.getItem(identifier) || 0;\n\n  const newDurationCumulative = getCumulativeDuration(\n    startTime,\n    +durationCumulative\n  );\n  // send to state\n  localStorage.setItem(identifier, newDurationCumulative);\n\n  // send last access time to state\n  const dateString = getCurrentDateTime();\n  localStorage.setItem(identifier4, dateString);\n  if (!results.dateTime) {\n    results.dateTime = dateString;\n  }\n\n  // send to memory\n  const formattedDuration = millisecondsToTime(newDurationCumulative);\n  localStorage.setItem(identifier3, formattedDuration);\n  results[identifier3] = formattedDuration;\n  return results;\n};\n\nexport default calculateTimeOnPage;\n","export default function msToTime(s) {\n  // Pad to 2 or 3 digits, default is 2\n  var pad = (n, z = 2) => (\"00\" + n).slice(-z);\n  return (\n    pad((s / 3.6e6) | 0) +\n    \":\" +\n    pad(((s % 3.6e6) / 6e4) | 0) +\n    \":\" +\n    pad(((s % 6e4) / 1000) | 0) // +\n    // \".\" +\n    // pad(s % 1000, 3)\n  );\n}\n","const createConfigSettingsSlice = (set, get) => ({\n  configObj: {},\n  surveyQuestionObjArray: [],\n  requiredAnswersObj: {},\n\n  setConfigObj: (configObjInput) => {\n    set(() => ({ configObj: configObjInput }));\n  },\n  setSurveyQuestionObjArray: (configObjInput) => {\n    set(() => ({ surveyQuestionObjArray: configObjInput }));\n  },\n  setRequiredAnswersObj: (configObjInput) => {\n    set(() => ({ requiredAnswersObj: configObjInput }));\n  },\n});\n\nexport default createConfigSettingsSlice;\n","const createLanguageSettingsSlice = (set, get) => ({\n  langObj: {},\n\n  setLangObj: (langObjInput) => {\n    set(() => ({ langObj: langObjInput }));\n  },\n});\n\nexport default createLanguageSettingsSlice;\n","const createMapSettingsSlice = (set, get) => ({\n  // includes qSortPattern, qSortHeaderNumbers, etc...\n  mapObj: {},\n\n  setMapObj: (mapObjInput) => {\n    set(() => ({ mapObj: mapObjInput }));\n  },\n});\n\nexport default createMapSettingsSlice;\n","const createStatementsSettingsSlice = (set, get) => ({\n  statementsObj: {},\n  columnStatements: {},\n  resetColumnStatements: {},\n\n  setStatementsObj: (statementsObjInput) => {\n    set(() => ({ statementsObj: statementsObjInput }));\n  },\n  setColumnStatements: (columnStatementsInput) => {\n    set(() => ({ columnStatements: columnStatementsInput }));\n  },\n  setResetColumnStatements: (inputValue) => {\n    set(() => ({ resetColumnStatements: inputValue }));\n  },\n});\n\nexport default createStatementsSettingsSlice;\n","import create from \"zustand\";\nimport createConfigSettingsSlice from \"./createConfigSettingsSlice\";\nimport createLanguageSettingsSlice from \"./createLanguageSettingsSlice\";\nimport createMapSettingsSlice from \"./createMapSettingsSlice\";\nimport createStatementsSettingsSlice from \"./createStatementsSettingsSlice\";\n\nconst useSettingsStore = create((set, get) => ({\n  ...createConfigSettingsSlice(set, get),\n  ...createLanguageSettingsSlice(set, get),\n  ...createMapSettingsSlice(set, get),\n  ...createStatementsSettingsSlice(set, get),\n}));\n\nexport default useSettingsStore;\n","const createLocalPanelSlice = (set, get) => ({\n  displayLocalPartIdWarning1: false,\n  displayLocalPartIdWarning2: false,\n  triggerLocalDeleteModal: false,\n  localParticipantName: \"\",\n\n  setLocalParticipantName: (inputValue) => {\n    set(() => ({ localParticipantName: inputValue }));\n  },\n  setLocalPartIdWarning1: (bool) => {\n    set(() => ({ displayLocalPartIdWarning1: bool }));\n  },\n  setLocalPartIdWarning2: (bool) => {\n    set(() => ({ displayLocalPartIdWarning2: bool }));\n  },\n  setLocalDeleteModal: (bool) => {\n    set(() => ({ triggerLocalDeleteModal: bool }));\n  },\n});\n\nexport default createLocalPanelSlice;\n","const createPresortSlice = (set, get) => ({\n  triggerPresortModal: true,\n  presortNoReturn: false,\n  presortPosCards: [],\n  presortNeuCards: [],\n  presortNegCards: [],\n  presortCards: [],\n  presortSortedStatementsNumInitial: 0,\n  presortFinished: false,\n  triggerPresortFinishedModal: false,\n  triggerPresortPreventNavModal: false,\n  results: {},\n\n  setPresortNoReturn: (inputValue) => {\n    set(() => ({ presortNoReturn: inputValue }));\n  },\n  setPresortPosCards: (inputValue) => {\n    set(() => ({ presortPosCards: inputValue }));\n  },\n  setPresortNeuCards: (inputValue) => {\n    set(() => ({ presortNeuCards: inputValue }));\n  },\n  setPresortNegCards: (inputValue) => {\n    set(() => ({ presortNegCards: inputValue }));\n  },\n  setPresortCards: (inputValue) => {\n    set(() => ({ presortCards: inputValue }));\n  },\n  setPresortSortedStatementsNumInitial: (inputValue) => {\n    set(() => ({ presortSortedStatementsNumInitial: inputValue }));\n  },\n  setPresortFinished: (bool) => {\n    set(() => ({ presortFinished: bool }));\n  },\n  setTriggerPresortFinishedModal: (bool) => {\n    set(() => ({ triggerPresortFinishedModal: bool }));\n  },\n  setTriggerPresortPreventNavModal: (bool) => {\n    set(() => ({ triggerPresortPreventNavModal: bool }));\n  },\n  setResults: (inputValue) => {\n    set(() => ({ results: inputValue }));\n  },\n  setTriggerPresortModal: (inputValue) => {\n    set(() => ({ triggerPresortModal: inputValue }));\n  },\n});\n\nexport default createPresortSlice;\n","const createLandingSlice = (set, get) => ({\n  dataLoaded: false,\n  isLoggedIn: false,\n  triggerLandingModal: false,\n  usercode: \"\",\n  urlUsercode: \"not set\",\n  partId: \"not required\",\n  localUsercode: \"\",\n  displayAccessCodeWarning: false,\n  userInputAccessCode: \"\",\n  displayLandingContent: false,\n  triggerSaveBeforeDeleteModal: false,\n  userInputPartId: \"\",\n  displayPartIdWarning: false,\n\n  setUrlUsercode: (inputValue) => {\n    set(() => ({ urlUsercode: inputValue }));\n  },\n  setDisplayPartIdWarning: (inputValue) => {\n    set(() => ({ displayPartIdWarning: inputValue }));\n  },\n  setUserInputPartId: (inputValue) => {\n    set(() => ({ userInputPartId: inputValue }));\n  },\n  setTriggerSaveBeforeDeleteModal: (inputValue) => {\n    set(() => ({ triggerSaveBeforeDeleteModal: inputValue }));\n  },\n  setDataLoaded: (inputValue) => {\n    set(() => ({ dataLoaded: inputValue }));\n  },\n  setIsLoggedIn: (inputValue) => {\n    set(() => ({ isLoggedIn: inputValue }));\n  },\n  setTriggerLandingModal: (inputValue) => {\n    set(() => ({ triggerLandingModal: inputValue }));\n  },\n  setUsercode: (inputValue) => {\n    set(() => ({ usercode: inputValue }));\n  },\n  setPartId: (inputValue) => {\n    set(() => ({ partId: inputValue }));\n  },\n  setLocalUsercode: (input) => {\n    set(() => ({ localUsercode: input }));\n  },\n  setDisplayAccessCodeWarning: (input) => {\n    set(() => ({ displayAccessCodeWarning: input }));\n  },\n  setUserInputAccessCode: (input) => {\n    set(() => ({ userInputAccessCode: input }));\n  },\n  setDisplayLandingContent: (input) => {\n    set(() => ({ displayLandingContent: input }));\n  },\n});\n\nexport default createLandingSlice;\n","const createFooterSlice = (set, get) => ({\n  cardFontSize: 15,\n  currentPage: \"landing\",\n  progressScore: 10,\n  progressScoreAdditional: 0,\n  progressScoreAdditionalSort: 0,\n  displayNextButton: false,\n\n  setCardFontSize: (inputValue) => {\n    set(() => ({ cardFontSize: inputValue }));\n  },\n  setCurrentPage: (inputValue) => {\n    set(() => ({ currentPage: inputValue }));\n  },\n  setProgressScore: (inputValue) => {\n    set(() => ({ progressScore: inputValue }));\n  },\n  setProgressScoreAdditional: (inputValue) => {\n    set(() => ({ progressScoreAdditional: inputValue }));\n  },\n  setProgressScoreAdditionalSort: (inputValue) => {\n    set(() => ({ progressScoreAdditionalSort: inputValue }));\n  },\n  setDisplayNextButton: (inputValue) => {\n    set(() => ({ displayNextButton: inputValue }));\n  },\n});\n\nexport default createFooterSlice;\n","const createSortSlice = (set, get) => ({\n  cardHeight: 0,\n  columnWidth: 100,\n  draggingOverColumnId: \"\",\n  hasOverloadedColumn: false,\n  isSortingCards: true,\n  isSortingFinished: false,\n  overloadedColumn: \"\",\n  sortCompleted: false,\n  sortFinished: false,\n  sortFinishedModalHasBeenShown: false,\n  sortCharacteristics: {},\n  topMargin: 50,\n  triggerSortModal: true,\n  triggerSortPreventNavModal: false,\n  triggerSortOverloadedColumnModal: false,\n  triggerSortingFinishedModal: false,\n  sortGridResults: {},\n\n  setDraggingOverColumnId: (inputValue) => {\n    set(() => ({ draggingOverColumnId: inputValue }));\n  },\n  setOverloadedColumn: (inputValue) => {\n    set(() => ({ overloadedColumn: inputValue }));\n  },\n  setTriggerSortingFinishedModal: (inputValue) => {\n    set(() => ({ triggerSortingFinishedModal: inputValue }));\n  },\n  setSortGridResults: (inputValue) => {\n    set(() => ({ sortGridResults: inputValue }));\n  },\n  setColumnWidth: (inputValue) => {\n    set(() => ({ columnWidth: inputValue }));\n  },\n  setTopMargin: (inputValue) => {\n    set(() => ({ topMargin: inputValue }));\n  },\n  setIsSortingCards: (inputValue) => {\n    set(() => ({ isSortingCards: inputValue }));\n  },\n  setSortCompleted: (inputValue) => {\n    set(() => ({ sortCompleted: inputValue }));\n  },\n  setSortFinished: (inputValue) => {\n    set(() => ({ sortFinished: inputValue }));\n  },\n  setSortFinishedModalHasBeenShown: (inputValue) => {\n    set(() => ({ sortFinishedModalHasBeenShown: inputValue }));\n  },\n  setSortCharacteristics: (inputValue) => {\n    set(() => ({ sortCharacteristics: inputValue }));\n  },\n  setCardHeight: (inputValue) => {\n    set(() => ({ cardHeight: inputValue }));\n  },\n  setTriggerSortModal: (inputValue) => {\n    set(() => ({ triggerSortModal: inputValue }));\n  },\n  setIsSortingFinished: (inputValue) => {\n    set(() => ({ isSortingFinished: inputValue }));\n  },\n  setHasOverloadedColumn: (inputValue) => {\n    set(() => ({ hasOverloadedColumn: inputValue }));\n  },\n  setTriggerSortPreventNavModal: (inputValue) => {\n    set(() => ({ triggerSortPreventNavModal: inputValue }));\n  },\n  setTriggerSortOverloadedColumnModal: (inputValue) => {\n    set(() => ({ triggerSortOverloadedColumnModal: inputValue }));\n  },\n});\n\nexport default createSortSlice;\n","const createPostsortSlice = (set, get) => ({\n  resultsPostsort: {},\n  statementCommentsObj: {},\n  triggerPostsortModal: false,\n\n  setResultsPostsort: (inputValue) => {\n    set(() => ({ resultsPostsort: inputValue }));\n  },\n  setStatementCommentsObj: (inputValue) => {\n    set(() => ({ statementCommentsObj: inputValue }));\n  },\n  setTriggerPostsortModal: (inputValue) => {\n    set(() => ({ triggerPostsortModal: inputValue }));\n  },\n});\n\nexport default createPostsortSlice;\n","const createSubmitSlice = (set, get) => ({\n  displaySubmitFallback: false,\n  displayGoodbyeMessage: false,\n  triggerLocalSubmitSuccessModal: false,\n  triggerTransmissionOKModal: false,\n  triggerTransmissionFailModal: false,\n  submitFailNumber: 0,\n  transmittingData: false,\n  checkInternetConnection: false,\n\n  setCheckInternetConnection: (input) => {\n    set(() => ({ checkInternetConnection: input }));\n  },\n  setTransmittingData: (input) => {\n    set(() => ({ transmittingData: input }));\n  },\n  setTriggerTransmissionFailModal: (input) => {\n    set(() => ({ triggerTransmissionFailModal: input }));\n  },\n  setTriggerTransmissionOKModal: (input) => {\n    set(() => ({ triggerTransmissionOKModal: input }));\n  },\n  setTriggerLocalSubmitSuccessModal: (input) => {\n    set(() => ({ triggerLocalSubmitSuccessModal: input }));\n  },\n  setDisplaySubmitFallback: (input) => {\n    set(() => ({ displaySubmitFallback: input }));\n  },\n  setDisplayGoodbyeMessage: (inputValue) => {\n    set(() => ({ displayGoodbyeMessage: inputValue }));\n  },\n});\n\nexport default createSubmitSlice;\n","const createSurveySlice = (set, get) => ({\n  triggerSurveyModal: false,\n  resultsSurvey: {},\n  triggerSurveyPreventNavModal: false,\n  checkRequiredQuestionsComplete: false,\n  requiredAnswersObj: {},\n  answersStorage: {},\n\n  setAnswersStorage: (inputValue) => {\n    set(() => ({ answersStorage: inputValue }));\n  },\n  setTriggerSurveyModal: (inputValue) => {\n    set(() => ({ triggerSurveyModal: inputValue }));\n  },\n  setResultsSurvey: (inputValue) => {\n    set(() => ({ resultsSurvey: inputValue }));\n  },\n\n  setTriggerSurveyPreventNavModal: (inputValue) => {\n    set(() => ({ triggerSurveyPreventNavModal: inputValue }));\n  },\n  setCheckRequiredQuestionsComplete: (inputValue) => {\n    set(() => ({ checkRequiredQuestionsComplete: inputValue }));\n  },\n  setRequiredAnswersObj: (inputValue) => {\n    set(() => ({ requiredAnswersObj: inputValue }));\n  },\n});\n\nexport default createSurveySlice;\n","import create from \"zustand\";\nimport createLocalPanelSlice from \"./createLocalPanelSlice\";\nimport createPresortSlice from \"./createPresortSlice\";\nimport createLandingSlice from \"./createLandingSlice\";\nimport createFooterSlice from \"./createFooterSlice\";\nimport createSortSlice from \"./createSortSlice\";\nimport createPostsortSlice from \"./createPostsortSlice\";\nimport createSubmitSlice from \"./createSubmitSlice\";\nimport createSurveySlice from \"./createSurveySlice\";\n\nconst useStore = create((set, get) => ({\n  ...createFooterSlice(set, get),\n  ...createLocalPanelSlice(set, get),\n  ...createLandingSlice(set, get),\n  ...createPresortSlice(set, get),\n  ...createSortSlice(set, get),\n  ...createPostsortSlice(set, get),\n  ...createSubmitSlice(set, get),\n  ...createSurveySlice(set, get),\n}));\n\nexport default useStore;\n","import React from \"react\";\nimport \"react-responsive-modal/styles.css\";\nimport { Modal } from \"react-responsive-modal\";\nimport styled from \"styled-components\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport decodeHTML from \"../../utilities/decodeHTML\";\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\nimport useStore from \"../../globalState/useStore\";\n\nconst getLangObj = (state) => state.langObj;\nconst getTriggerLandingModal = (state) => state.triggerLandingModal;\nconst getSetTriggerLandingModal = (state) => state.setTriggerLandingModal;\n\nconst LandingModal = () => {\n  // STATE\n  const langObj = useSettingsStore(getLangObj);\n  const triggerLandingModal = useStore(getTriggerLandingModal);\n  const setTriggerLandingModal = useStore(getSetTriggerLandingModal);\n\n  const loginHelpModalHead = ReactHtmlParser(\n    decodeHTML(langObj.landingHelpModalHead)\n  );\n  const loginHelpModalText = ReactHtmlParser(\n    decodeHTML(langObj.landingHelpModalText)\n  );\n\n  const onCloseModal = () => {\n    setTriggerLandingModal(false);\n  };\n\n  return (\n    <Modal\n      className=\"customModal\"\n      open={triggerLandingModal}\n      onClose={onCloseModal}\n      center\n    >\n      <ModalHeader>{loginHelpModalHead}</ModalHeader>\n      <hr />\n      <ModalContent>{loginHelpModalText}</ModalContent>\n    </Modal>\n  );\n};\n\nexport default LandingModal;\n\nconst ModalHeader = styled.div`\n  font-size: 24px;\n  line-height: 1.42;\n  padding: 10px 0px 10px 0px;\n\n  hr {\n    color: black;\n  }\n`;\n\nconst ModalContent = styled.div`\n  margin-top: 15px;\n`;\n\n// react-responsive-modal-overlay\n","import styled from \"styled-components\";\nimport React from \"react\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport decodeHTML from \"../../utilities/decodeHTML\";\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\n\nconst getLangObj = (state) => state.langObj;\n\nconst LogInSubmitButton = (props) => {\n  // STATE\n  const langObj = useSettingsStore(getLangObj);\n\n  const loginSubmitButtonText = ReactHtmlParser(\n    decodeHTML(langObj.loginSubmitButtonText)\n  );\n\n  return (\n    <StyledSubmitButton tabindex=\"0\" type=\"submit\" onClick={props.onClick}>\n      {loginSubmitButtonText}\n    </StyledSubmitButton>\n  );\n};\nexport default LogInSubmitButton;\n\nconst StyledSubmitButton = styled.button`\n  border-color: #2e6da4;\n  color: white;\n  font-size: 1.5em;\n  font-weight: bold;\n  padding: 0.25em 1em;\n  border-radius: 3px;\n  text-decoration: none;\n  width: 200px;\n  height: 50px;\n  justify-self: right;\n  align-self: end;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: ${({ theme, active }) =>\n    active ? theme.secondary : theme.primary};\n\n  &:hover {\n    background-color: ${({ theme }) => theme.secondary};\n  }\n\n  &:focus {\n    background-color: ${({ theme }) => theme.focus};\n  }\n`;\n","import React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport LogInSubmitButton from \"./LogInSubmitButton\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport decodeHTML from \"../../utilities/decodeHTML\";\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\nimport useStore from \"../../globalState/useStore\";\n\nconst getLangObj = (state) => state.langObj;\nconst getConfigObj = (state) => state.configObj;\nconst getDisplayAccessCodeWarning = (state) => state.displayAccessCodeWarning;\nconst getDisplayPartIdWarning = (state) => state.displayPartIdWarning;\nconst getSetUserInputPartId = (state) => state.setUserInputPartId;\nconst getSetUserInputAccessCode = (state) => state.setUserInputAccessCode;\nconst getUserInputPartId = (state) => state.userInputPartId;\nconst getUserInputAccessCode = (state) => state.userInputAccessCode;\nconst getSetDisplayLandingContent = (state) => state.setDisplayLandingContent;\nconst getSetPartId = (state) => state.setPartId;\nconst getSetDisplayNextButton = (state) => state.setDisplayNextButton;\nconst getSetIsLoggedIn = (state) => state.setIsLoggedIn;\nconst getSetDisplayAccessCodeWarning = (state) =>\n  state.setDisplayAccessCodeWarning;\nconst getSetDisplayPartIdWarning = (state) => state.setDisplayPartIdWarning;\n\nconst LogInScreen = () => {\n  // STATE\n  const langObj = useSettingsStore(getLangObj);\n  const configObj = useSettingsStore(getConfigObj);\n  const displayAccessCodeWarning = useStore(getDisplayAccessCodeWarning);\n  const displayPartIdWarning = useStore(getDisplayPartIdWarning);\n  const setUserInputPartId = useStore(getSetUserInputPartId);\n  const setUserInputAccessCode = useStore(getSetUserInputAccessCode);\n  const userInputPartId = useStore(getUserInputPartId);\n  const userInputAccessCode = useStore(getUserInputAccessCode);\n  const setDisplayLandingContent = useStore(getSetDisplayLandingContent);\n  const setPartId = useStore(getSetPartId);\n  const setDisplayNextButton = useStore(getSetDisplayNextButton);\n  const setIsLoggedIn = useStore(getSetIsLoggedIn);\n  const setDisplayAccessCodeWarning = useStore(getSetDisplayAccessCodeWarning);\n  const setDisplayPartIdWarning = useStore(getSetDisplayPartIdWarning);\n\n  const welcomeText = ReactHtmlParser(decodeHTML(langObj.loginWelcomeText));\n  const loginHeaderText = ReactHtmlParser(decodeHTML(langObj.loginHeaderText));\n  const loginPartIdText = ReactHtmlParser(decodeHTML(langObj.loginPartIdText));\n  const partIdWarning = ReactHtmlParser(decodeHTML(langObj.partIdWarning));\n  const accessCodeWarning = ReactHtmlParser(\n    decodeHTML(langObj.accessCodeWarning)\n  );\n  const accessInputText = ReactHtmlParser(decodeHTML(langObj.accessInputText));\n\n  const handleInput = (e) => {\n    setUserInputPartId(e.target.value);\n  };\n\n  const handleAccess = (e) => {\n    setUserInputAccessCode(e.target.value);\n  };\n\n  useEffect(() => {\n    const handleKeyUpStart = (event) => {\n      if (event.key === \"Enter\") {\n        try {\n          let userPartIdOK = false;\n          let userAccessOK = false;\n          const projectAccessCode = configObj.accessCode;\n\n          // get user input\n          if (userInputPartId.length > 1) {\n            userPartIdOK = true;\n          } else {\n            userPartIdOK = false;\n          }\n          if (userInputAccessCode === projectAccessCode) {\n            userAccessOK = true;\n          }\n\n          // invalid input ==> display warnings\n          if (userAccessOK && userPartIdOK) {\n            setDisplayLandingContent(true);\n            setPartId(userInputPartId);\n            setDisplayNextButton(true);\n            setIsLoggedIn(true);\n          } else if (userAccessOK === false) {\n            console.log(\"no access code\");\n            setDisplayAccessCodeWarning(true);\n            setDisplayNextButton(false);\n            setTimeout(() => {\n              setDisplayAccessCodeWarning(false);\n            }, 5000);\n          } else if (userPartIdOK === false) {\n            setDisplayPartIdWarning(true);\n            setDisplayNextButton(false);\n            console.log(\"no id\");\n\n            setTimeout(() => {\n              setDisplayPartIdWarning(false);\n            }, 5000);\n          }\n        } catch (error) {\n          console.log(error);\n        }\n      }\n    }; // end keyup\n    window.addEventListener(\"keyup\", handleKeyUpStart);\n\n    return () => window.removeEventListener(\"keyup\", handleKeyUpStart);\n  }, [\n    setDisplayLandingContent,\n    setDisplayNextButton,\n    setIsLoggedIn,\n    configObj.accessCode,\n    setDisplayAccessCodeWarning,\n    userInputAccessCode,\n    setPartId,\n    setDisplayPartIdWarning,\n    userInputPartId,\n  ]);\n\n  const handleSubmit = () => {\n    try {\n      let userPartIdOK = false;\n      let userAccessOK = false;\n      const projectAccessCode = configObj.accessCode;\n\n      // get user input\n      if (userInputPartId.length > 1) {\n        userPartIdOK = true;\n      } else {\n        userPartIdOK = false;\n      }\n      if (userInputAccessCode === projectAccessCode) {\n        userAccessOK = true;\n      }\n\n      // invalid input ==> display warnings\n      if (userAccessOK && userPartIdOK) {\n        setDisplayLandingContent(true);\n        setPartId(userInputPartId);\n        setDisplayNextButton(true);\n        setIsLoggedIn(true);\n      } else if (userAccessOK === false) {\n        console.log(\"no access code\");\n        setDisplayAccessCodeWarning(true);\n        setDisplayNextButton(false);\n        setTimeout(() => {\n          setDisplayAccessCodeWarning(false);\n        }, 5000);\n      } else if (userPartIdOK === false) {\n        setDisplayPartIdWarning(true);\n        setDisplayNextButton(false);\n        console.log(\"no id\");\n\n        setTimeout(() => {\n          setDisplayPartIdWarning(false);\n        }, 5000);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <LogInWelcomeText>{welcomeText}</LogInWelcomeText>\n      <Container>\n        <div>\n          <h2>{loginHeaderText}</h2>\n          <StyledHr />\n        </div>\n        <div>\n          <h3>{loginPartIdText}</h3>\n          <StyledInputDiv>\n            <StyledInput onChange={handleInput} type=\"text\" autoFocus />\n            {displayPartIdWarning && <WarningText>{partIdWarning}</WarningText>}\n          </StyledInputDiv>\n        </div>\n        <div>\n          <h3>{accessInputText}</h3>\n          <StyledInputDiv>\n            <StyledInput onChange={handleAccess} type=\"text\" />\n            {displayAccessCodeWarning && (\n              <WarningText>{accessCodeWarning}</WarningText>\n            )}\n          </StyledInputDiv>\n        </div>\n        <LogInSubmitButton onClick={handleSubmit} />\n      </Container>\n      <WarningText>{}</WarningText>\n    </React.Fragment>\n  );\n};\n\nexport default LogInScreen;\n\nconst Container = styled.div`\n  display: grid;\n  grid-template-rows: 23% 28% 28% 1fr;\n  margin-top: 50px;\n  width: 800px;\n  padding: 20px;\n  min-height: 400px;\n  margin-bottom: 200px;\n  border: 2px solid black;\n  justify-self: center;\n  background-color: whitesmoke;\n`;\n\nconst LogInWelcomeText = styled.div`\n  width: 900px;\n  font-size: 25px;\n  line-height: 1.3em;\n  padding-left: 35px;\n`;\n\nconst StyledHr = styled.hr`\n  margin-top: 5px;\n  margin-bottom: 30px;\n`;\n\nconst StyledInput = styled.input`\n  margin-top: 5px;\n  width: 400px;\n  height: 30px;\n  font-size: 1.4em;\n  padding-left: 5px;\n`;\n\nconst StyledInputDiv = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nconst WarningText = styled.div`\n  color: red;\n  font-weight: bold;\n  font-size: 1.4em;\n  margin-left: 10px;\n`;\n","import React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport LogInSubmitButton from \"./LogInSubmitButton\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport decodeHTML from \"../../utilities/decodeHTML\";\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\nimport useStore from \"../../globalState/useStore\";\n\nconst getLangObj = (state) => state.langObj;\nconst getDisplayPartIdWarning = (state) => state.displayPartIdWarning;\nconst getSetUserInputPartId = (state) => state.setUserInputPartId;\nconst getUserInputPartId = (state) => state.userInputPartId;\nconst getSetDisplayLandingContent = (state) => state.setDisplayLandingContent;\nconst getSetPartId = (state) => state.setPartId;\nconst getSetDisplayNextButton = (state) => state.setDisplayNextButton;\nconst getSetIsLoggedIn = (state) => state.setIsLoggedIn;\nconst getSetDisplayPartIdWarning = (state) => state.setDisplayPartIdWarning;\n\nconst LogInScreen = () => {\n  // STATE\n  const langObj = useSettingsStore(getLangObj);\n  const displayPartIdWarning = useStore(getDisplayPartIdWarning);\n  const setUserInputPartId = useStore(getSetUserInputPartId);\n  const userInputPartId = useStore(getUserInputPartId);\n  const setDisplayLandingContent = useStore(getSetDisplayLandingContent);\n  const setPartId = useStore(getSetPartId);\n  const setDisplayNextButton = useStore(getSetDisplayNextButton);\n  const setIsLoggedIn = useStore(getSetIsLoggedIn);\n  const setDisplayPartIdWarning = useStore(getSetDisplayPartIdWarning);\n\n  const loginHeaderText = ReactHtmlParser(decodeHTML(langObj.loginHeaderText));\n  const loginPartIdText = ReactHtmlParser(decodeHTML(langObj.loginPartIdText));\n  const partIdWarning = ReactHtmlParser(decodeHTML(langObj.partIdWarning));\n\n  const handleInput = (e) => {\n    setUserInputPartId(e.target.value);\n  };\n\n  useEffect(() => {\n    const handleKeyUpStart = (event) => {\n      if (event.key === \"Enter\") {\n        console.log(\"Enter\");\n        let userPartIdOK = false;\n\n        // get user input\n        if (userInputPartId.length > 0) {\n          userPartIdOK = true;\n          setDisplayLandingContent(true);\n          setPartId(userInputPartId);\n          setDisplayNextButton(true);\n          setIsLoggedIn(true);\n        }\n\n        // invalid input ==> display warnings\n        if (userPartIdOK === false) {\n          setDisplayPartIdWarning(true);\n          setTimeout(() => {\n            setDisplayPartIdWarning(false);\n          }, 5000);\n        }\n      }\n    }; // end keyup\n\n    window.addEventListener(\"keyup\", handleKeyUpStart);\n\n    return () => window.removeEventListener(\"keyup\", handleKeyUpStart);\n  }, [\n    setDisplayLandingContent,\n    setPartId,\n    setDisplayNextButton,\n    setIsLoggedIn,\n    userInputPartId,\n    setDisplayPartIdWarning,\n  ]);\n\n  const handleSubmit = (e) => {\n    let userPartIdOK = false;\n\n    // get user input\n    if (userInputPartId.length > 0) {\n      userPartIdOK = true;\n      setDisplayLandingContent(true);\n      setPartId(userInputPartId);\n      setDisplayNextButton(true);\n      setIsLoggedIn(true);\n    }\n\n    // invalid input ==> display warnings\n    if (userPartIdOK === false) {\n      setDisplayPartIdWarning(true);\n      setTimeout(() => {\n        setDisplayPartIdWarning(false);\n      }, 5000);\n    }\n  };\n\n  return (\n    <Container>\n      <div>\n        <h2>{loginHeaderText}</h2>\n        <StyledHr />\n      </div>\n      <div>\n        <h3>{loginPartIdText}</h3>\n        <StyledInputDiv>\n          <StyledInput onChange={handleInput} type=\"text\" autoFocus />\n          {displayPartIdWarning && <WarningText>{partIdWarning}</WarningText>}\n        </StyledInputDiv>\n      </div>\n\n      <LogInSubmitButton onClick={handleSubmit} />\n    </Container>\n  );\n};\n\nexport default LogInScreen;\n\nconst Container = styled.div`\n  display: grid;\n  grid-template-rows: 1fr 1fr 1fr;\n  margin-top: 50px;\n  width: 50vw;\n  padding: 1.5vw;\n  min-height: 300px;\n  margin-bottom: 200px;\n  border: 2px solid black;\n  justify-self: center;\n  background-color: whitesmoke;\n`;\n\nconst StyledHr = styled.hr`\n  margin-top: 5px;\n  margin-bottom: 30px;\n`;\n\nconst StyledInput = styled.input`\n  margin-top: 5px;\n  width: 400px;\n  height: 30px;\n  font-size: 1.4em;\n  padding-left: 5px;\n`;\n\nconst StyledInputDiv = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nconst WarningText = styled.div`\n  color: red;\n  font-weight: bold;\n  font-size: 1.4em;\n  margin-left: 10px;\n`;\n","import React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport LogInSubmitButton from \"./LogInSubmitButton\";\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\nimport useStore from \"../../globalState/useStore\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport decodeHTML from \"../../utilities/decodeHTML\";\n\nconst getLangObj = (state) => state.langObj;\nconst getConfigObj = (state) => state.configObj;\nconst getDisplayAccessCodeWarning = (state) => state.displayAccessCodeWarning;\nconst getUserInputAccessCode = (state) => state.userInputAccessCode;\nconst getSetDisplayLandingContent = (state) => state.setDisplayLandingContent;\nconst getSetDisplayNextButton = (state) => state.setDisplayNextButton;\nconst getSetIsLoggedIn = (state) => state.setIsLoggedIn;\nconst getSetUserInputAccessCode = (state) => state.setUserInputAccessCode;\nconst getSetDisplayAccessCodeWarning = (state) =>\n  state.setDisplayAccessCodeWarning;\n\nconst LogInScreen = () => {\n  // STATE\n  const langObj = useSettingsStore(getLangObj);\n  const configObj = useSettingsStore(getConfigObj);\n  const displayAccessCodeWarning = useStore(getDisplayAccessCodeWarning);\n  const userInputAccessCode = useStore(getUserInputAccessCode);\n  const setDisplayLandingContent = useStore(getSetDisplayLandingContent);\n  const setDisplayNextButton = useStore(getSetDisplayNextButton);\n  const setIsLoggedIn = useStore(getSetIsLoggedIn);\n  const setUserInputAccessCode = useStore(getSetUserInputAccessCode);\n  const setDisplayAccessCodeWarning = useStore(getSetDisplayAccessCodeWarning);\n\n  // Language\n  const loginHeaderText = ReactHtmlParser(decodeHTML(langObj.loginHeaderText));\n  const accessInputText = ReactHtmlParser(decodeHTML(langObj.accessInputText));\n  const accessCodeWarning = ReactHtmlParser(\n    decodeHTML(langObj.accessCodeWarning)\n  );\n\n  const handleAccess = (e) => {\n    setUserInputAccessCode(e.target.value);\n  };\n\n  useEffect(() => {\n    const handleKeyUpStart = (event) => {\n      if (event.key === \"Enter\") {\n        let userAccessOK = false;\n        const projectAccessCode = configObj.accessCode;\n\n        // get user input\n\n        if (userInputAccessCode === projectAccessCode) {\n          userAccessOK = true;\n          setDisplayLandingContent(true);\n          setDisplayNextButton(true);\n          setIsLoggedIn(true);\n        }\n\n        // invalid input ==> display warnings\n        if (userAccessOK === false) {\n          setDisplayAccessCodeWarning(true);\n          setTimeout(() => {\n            setDisplayAccessCodeWarning(false);\n          }, 3000);\n        }\n      }\n    }; // end keyup\n    window.addEventListener(\"keyup\", handleKeyUpStart);\n\n    return () => window.removeEventListener(\"keyup\", handleKeyUpStart);\n  }, [\n    setDisplayLandingContent,\n    setDisplayNextButton,\n    setIsLoggedIn,\n    configObj.accessCode,\n    setDisplayAccessCodeWarning,\n    userInputAccessCode,\n  ]);\n\n  const handleSubmit = (e) => {\n    let userAccessOK = false;\n    const projectAccessCode = configObj.accessCode;\n\n    // get user input\n\n    if (userInputAccessCode === projectAccessCode) {\n      userAccessOK = true;\n      setDisplayLandingContent(true);\n      setDisplayNextButton(true);\n      setIsLoggedIn(true);\n    }\n\n    // invalid input ==> display warnings\n    if (userAccessOK === false) {\n      setDisplayAccessCodeWarning(true);\n      setTimeout(() => {\n        setDisplayAccessCodeWarning(false);\n      }, 5000);\n    }\n  };\n\n  return (\n    <Container>\n      <div>\n        <h2>{loginHeaderText}</h2>\n        <StyledHr />\n      </div>\n      <div>\n        <h3>{accessInputText}</h3>\n        <StyledInputDiv>\n          <StyledInput onChange={handleAccess} type=\"text\" autoFocus />\n          {displayAccessCodeWarning && (\n            <WarningText>{accessCodeWarning}</WarningText>\n          )}\n        </StyledInputDiv>\n      </div>\n\n      <LogInSubmitButton onClick={handleSubmit} />\n    </Container>\n  );\n};\n\nexport default LogInScreen;\n\nconst Container = styled.div`\n  display: grid;\n  grid-template-rows: 1fr 1fr 1fr;\n  margin-top: 50px;\n  width: 50vw;\n  padding: 1.5vw;\n  min-height: 300px;\n  margin-bottom: 200px;\n  border: 2px solid black;\n  justify-self: center;\n  background-color: whitesmoke;\n`;\n\nconst StyledHr = styled.hr`\n  margin-top: 5px;\n  margin-bottom: 30px;\n`;\n\nconst StyledInput = styled.input`\n  margin-top: 5px;\n  width: 400px;\n  height: 30px;\n  font-size: 1.4em;\n  padding-left: 5px;\n`;\n\nconst StyledInputDiv = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nconst WarningText = styled.div`\n  color: red;\n  font-weight: bold;\n  font-size: 1.4em;\n  margin-left: 10px;\n`;\n","/**\n * detect IEEdge\n * returns version of IE/Edge or false, if browser is not a Microsoft browser\n * stackoverflow\n * https://stackoverflow.com/questions/19999388/check-if-user-is-using-ie\n */\nfunction detectIEEdge() {\n  var ua = window.navigator.userAgent;\n\n  var msie = ua.indexOf(\"MSIE \");\n  if (msie > 0) {\n    // IE 10 or older => return version number\n    // return parseInt(ua.substring(msie + 5, ua.indexOf(\".\", msie)), 10);\n    return true;\n  }\n\n  var trident = ua.indexOf(\"Trident/\");\n  if (trident > 0) {\n    // IE 11 => return version number\n    // var rv = ua.indexOf(\"rv:\");\n    // return parseInt(ua.substring(rv + 3, ua.indexOf(\".\", rv)), 10);\n    return true;\n  }\n\n  // other browser\n  return false;\n}\n\nconst checkForIeBrowser = () => {\n  const isIE = detectIEEdge();\n  return isIE;\n};\n\nexport default checkForIeBrowser;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport decodeHTML from \"../../utilities/decodeHTML\";\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\n\nconst getLangObj = (state) => state.langObj;\n\nconst LogInScreen = () => {\n  // STATE\n  const langObj = useSettingsStore(getLangObj);\n\n  const ieWarningHeaderText = ReactHtmlParser(\n    decodeHTML(langObj.ieWarningHeaderText)\n  );\n  const ieWarningText = ReactHtmlParser(decodeHTML(langObj.ieWarningText));\n\n  return (\n    <Container>\n      <div>\n        <center>\n          <h2>{ieWarningHeaderText}</h2>\n          <StyledHr />\n        </center>\n      </div>\n      <div>\n        <StyledInputDiv>\n          <h3>{ieWarningText}</h3>\n        </StyledInputDiv>\n      </div>\n    </Container>\n  );\n};\n\nexport default LogInScreen;\n\nconst Container = styled.div`\n  //  display: grid;\n  //   grid-template-rows: 1fr 1fr 1fr;\n  margin-top: 50px;\n  width: 50vw;\n  padding: 2vw;\n  min-height: 250px;\n  margin-bottom: 20px;\n  border: 2px solid black;\n  justify-self: center;\n  background-color: lightgoldenrodyellow;\n  border-radius: 50px;\n`;\n\nconst StyledHr = styled.hr`\n  margin-top: 5px;\n  margin-bottom: 30px;\n`;\n\nconst StyledInputDiv = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin-top: 50px;\n`;\n","const parseParams = (params = \"\") => {\n  const rawParams1 = params.split(\"?\");\n  const extractedParams = {};\n  rawParams1.forEach((item) => {\n    item = item.split(\"=\");\n    extractedParams[item[0]] = item[1];\n  });\n  return extractedParams;\n};\n\nexport default parseParams;\n","import styled from \"styled-components\";\nimport React, { useEffect, useCallback } from \"react\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport decodeHTML from \"../../utilities/decodeHTML\";\nimport { withRouter } from \"react-router\";\nimport useStore from \"../../globalState/useStore\";\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\nimport getCurrentDateTime from \"../../utilities/getCurrentDateTime\";\n\nconst getLangObj = (state) => state.langObj;\nconst getLocalParticipantName = (state) => state.localParticipantName;\nconst getLocalUsercode = (state) => state.localUsercode;\nconst getSetLocalParticipantName = (state) => state.setLocalParticipantName;\nconst getSetLocalUsercode = (state) => state.setLocalUsercode;\nconst getSetLocalPartIdWarning1 = (state) => state.setLocalPartIdWarning1;\nconst getSetLocalPartIdWarning2 = (state) => state.setLocalPartIdWarning2;\nconst getSetTriggerLocalSubmitSuccessModal = (state) =>\n  state.setTriggerLocalSubmitSuccessModal;\nconst getSetResults = (state) => state.setResults;\nconst getResults = (state) => state.results;\n\nconst LogInSubmitButton = (props) => {\n  // STATE\n  const langObj = useSettingsStore(getLangObj);\n  const localParticipantName = useStore(getLocalParticipantName);\n  const localUsercode = useStore(getLocalUsercode);\n  const setLocalParticipantName = useStore(getSetLocalParticipantName);\n  const setLocalUsercode = useStore(getSetLocalUsercode);\n  let setLocalPartIdWarning1 = useStore(getSetLocalPartIdWarning1);\n  let setLocalPartIdWarning2 = useStore(getSetLocalPartIdWarning2);\n  const setTriggerLocalSubmitSuccessModal = useStore(\n    getSetTriggerLocalSubmitSuccessModal\n  );\n  const setResults = useStore(getSetResults);\n  const results = useStore(getResults);\n\n  const localStartButtonText = ReactHtmlParser(\n    decodeHTML(langObj.localStartButtonText)\n  );\n\n  const checkForNextPageConditions = useCallback(() => {\n    let value0 = false;\n    let value1;\n    let value2;\n\n    if (localParticipantName.length === 0) {\n      value1 = false;\n      setLocalPartIdWarning1(true);\n    } else {\n      setLocalPartIdWarning1(false);\n      value1 = true;\n    }\n\n    if (localUsercode.length === 0) {\n      value2 = false;\n      setLocalPartIdWarning2(true);\n    } else {\n      setLocalPartIdWarning2(false);\n\n      value2 = true;\n    }\n\n    if (value1 === true && value2 === true) {\n      value0 = true;\n    } else {\n      value0 = false;\n    }\n\n    return value0;\n  }, [\n    setLocalPartIdWarning1,\n    setLocalPartIdWarning2,\n    localParticipantName,\n    localUsercode,\n  ]);\n\n  const {\n    history,\n    location,\n    match,\n    staticContext,\n    to,\n    onClick,\n    // ⬆ filtering out props that `button` doesn’t know what to do with.\n    ...rest\n  } = props;\n\n  useEffect(() => {\n    const handleKeyUpStart = (event) => {\n      // reset time stamp\n      const dateString = getCurrentDateTime();\n      results.dateTime = dateString;\n      setResults(results);\n\n      if (event.key === \"Enter\") {\n        let isInputComplete = checkForNextPageConditions();\n        if (isInputComplete) {\n          history.push(`/presort`);\n        }\n      }\n    }; // end keyup\n\n    window.addEventListener(\"keyup\", handleKeyUpStart);\n\n    return () => window.removeEventListener(\"keyup\", handleKeyUpStart);\n  }, [history, checkForNextPageConditions, results, setResults]);\n\n  useEffect(() => {\n    setLocalParticipantName(\"\");\n    setLocalUsercode(\"\");\n    setLocalPartIdWarning1(false);\n    setLocalPartIdWarning2(false);\n  }, [\n    setLocalPartIdWarning1,\n    setLocalPartIdWarning2,\n    setLocalParticipantName,\n    setLocalUsercode,\n  ]);\n\n  return (\n    <StyledSubmitButton\n      {...rest} // `children` is just another prop!\n      onClick={(event) => {\n        onClick && onClick(event);\n        let isInputComplete = checkForNextPageConditions();\n        if (isInputComplete) {\n          history.push(to);\n        }\n        setTriggerLocalSubmitSuccessModal(false);\n      }}\n      tabindex=\"3\"\n    >\n      {localStartButtonText}\n    </StyledSubmitButton>\n  );\n};\nexport default withRouter(LogInSubmitButton);\n\nconst StyledSubmitButton = styled.button`\n  border-color: #2e6da4;\n  color: white;\n  font-size: 1.5em;\n  font-weight: bold;\n  padding: 0.25em 1em;\n  border-radius: 3px;\n  text-decoration: none;\n  width: auto;\n  height: 50px;\n  justify-self: right;\n  align-self: end;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: ${({ theme, active }) =>\n    active ? theme.secondary : theme.primary};\n\n  &:hover {\n    background-color: ${({ theme }) => theme.secondary};\n  }\n\n  &:focus {\n    background-color: ${({ theme }) => theme.focus};\n  }\n`;\n","import styled from \"styled-components\";\nimport React from \"react\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport decodeHTML from \"../../utilities/decodeHTML\";\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\n\nconst getLangObj = (state) => state.langObj;\n\nconst LogInSubmitButton = (props) => {\n  // STATE\n  const langObj = useSettingsStore(getLangObj);\n\n  const localDeleteButtonText = ReactHtmlParser(\n    decodeHTML(langObj.localDeleteButtonText)\n  );\n\n  return (\n    <StyledSubmitButton tabindex=\"0\" type=\"submit\" onClick={props.onClick}>\n      {localDeleteButtonText}\n    </StyledSubmitButton>\n  );\n};\nexport default LogInSubmitButton;\n\nconst StyledSubmitButton = styled.button`\n  border-color: #2e6da4;\n  color: white;\n  font-size: 1.5em;\n  font-weight: bold;\n  padding: 0.25em 1em;\n  border-radius: 3px;\n  text-decoration: none;\n  width: 200px;\n  height: 50px;\n  justify-self: right;\n  align-self: end;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: ${({ theme, active }) =>\n    active ? theme.secondary : theme.primary};\n\n  &:hover {\n    background-color: ${({ theme }) => theme.secondary};\n  }\n\n  &:focus {\n    background-color: ${({ theme }) => theme.focus};\n  }\n`;\n","import styled from \"styled-components\";\nimport React from \"react\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport decodeHTML from \"../../utilities/decodeHTML\";\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\n\nconst getLangObj = (state) => state.langObj;\n\nconst LocalSortsDownloadButton = (props) => {\n  // STATE\n  const langObj = useSettingsStore(getLangObj);\n\n  const localDownloadButtonText = ReactHtmlParser(\n    decodeHTML(langObj.localDownloadButtonText)\n  );\n\n  return (\n    <StyledSubmitButton tabindex=\"0\" type=\"submit\" onClick={props.onClick}>\n      {localDownloadButtonText}\n    </StyledSubmitButton>\n  );\n};\nexport default LocalSortsDownloadButton;\n\nconst StyledSubmitButton = styled.button`\n  border-color: #2e6da4;\n  color: white;\n  font-size: 1.5em;\n  font-weight: bold;\n  padding: 0.25em 1em;\n  border-radius: 3px;\n  text-decoration: none;\n  width: auto;\n  height: 50px;\n  justify-self: right;\n  align-self: end;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: ${({ theme, active }) =>\n    active ? theme.secondary : theme.primary};\n\n  &:hover {\n    background-color: ${({ theme }) => theme.secondary};\n  }\n\n  &:focus {\n    background-color: ${({ theme }) => theme.focus};\n  }\n`;\n","import create from \"zustand\";\nimport { persist } from \"zustand/middleware\";\n\nconst useLocalPersist = create(\n  persist(\n    (set, get) => ({\n      localStoredQsorts: {},\n      hasDownloadedQsorts: false,\n\n      setHasDownloadedQsorts: (inputValue) => {\n        set(() => ({ hasDownloadedQsorts: inputValue }));\n      },\n      setLocalStoredQsorts: (inputValue) => {\n        set(() => ({ localStoredQsorts: inputValue }));\n      },\n    }),\n    {\n      name: \"sorts-storage\", // unique name\n    }\n  )\n);\n\nexport default useLocalPersist;\n","import styled from \"styled-components\";\nimport React from \"react\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport decodeHTML from \"../../utilities/decodeHTML\";\nimport useStore from \"../../globalState/useStore\";\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\nimport useLocalPersist from \"../../globalState/useLocalPersist\";\n\n// const getSetterLocalQsorts = (state) => state.setLocalStoredQsorts;\nconst getLangObj = (state) => state.langObj;\nconst getSetLocalDeleteModal = (state) => state.setLocalDeleteModal;\nconst getLocalStoredQsorts = (state) => state.localStoredQsorts;\nconst getSetLocalStoredQsorts = (state) => state.setLocalStoredQsorts;\n\nconst LogInSubmitButton = (props) => {\n  // State\n  const setDisplayLocalDeleteModal = useStore(getSetLocalDeleteModal);\n  // const setLocalStoredQsorts = useStore(getSetterLocalQsorts);\n  const langObj = useSettingsStore(getLangObj);\n  const setLocalStoredQsorts = useLocalPersist(getSetLocalStoredQsorts);\n  const localStoredQsorts = useLocalPersist(getLocalStoredQsorts);\n\n  const localDeleteButtonText = ReactHtmlParser(\n    decodeHTML(langObj.localDeleteButtonText)\n  );\n\n  const clearLocalStorage = () => {\n    console.log(\"deleted localStorage\");\n    // localStorage.setItem(\"localStoredQsorts\", JSON.stringify({}));\n    // setLocalStoredQsorts({});\n    const dateTime = `${new Date().getTime()}`;\n    localStorage.setItem(dateTime, JSON.stringify(localStoredQsorts));\n    setLocalStoredQsorts({});\n    setDisplayLocalDeleteModal(false);\n  };\n\n  return (\n    <StyledSubmitButton tabindex=\"0\" type=\"submit\" onClick={clearLocalStorage}>\n      {localDeleteButtonText}\n    </StyledSubmitButton>\n  );\n};\nexport default LogInSubmitButton;\n\nconst StyledSubmitButton = styled.button`\n  border-color: #2e6da4;\n  color: white;\n  font-size: 1.5em;\n  font-weight: bold;\n  padding: 0.25em 1em;\n  border-radius: 3px;\n  text-decoration: none;\n  width: 200px;\n  height: 50px;\n  justify-self: right;\n  align-self: end;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: red;\n\n  &:hover {\n  }\n\n  &:focus {\n  }\n`;\n","import React from \"react\";\nimport \"react-responsive-modal/styles.css\";\nimport { Modal } from \"react-responsive-modal\";\nimport styled from \"styled-components\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport decodeHTML from \"../../utilities/decodeHTML\";\nimport LocalConfirmDeleteButton from \"./LocalConfirmDeleteButton\";\nimport useStore from \"../../globalState/useStore\";\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\n\nconst getLangObj = (state) => state.langObj;\nconst getTriggerLocalDeleteModal = (state) => state.triggerLocalDeleteModal;\nconst getSetLocalDeleteModal = (state) => state.setLocalDeleteModal;\n\nconst LocalDeleteModal = () => {\n  // STATE\n  const langObj = useSettingsStore(getLangObj);\n  const triggerLocalDeleteModal = useStore(getTriggerLocalDeleteModal);\n  const setLocalDeleteModal = useStore(getSetLocalDeleteModal);\n\n  const localDeleteModalHead = ReactHtmlParser(\n    decodeHTML(langObj.localDeleteModalHead)\n  );\n  const localDeleteModalText = ReactHtmlParser(\n    decodeHTML(langObj.localDeleteModalText)\n  );\n\n  const onCloseModal = () => {\n    setLocalDeleteModal(false);\n  };\n\n  return (\n    <Modal\n      className=\"customModal\"\n      open={triggerLocalDeleteModal}\n      onClose={onCloseModal}\n      center\n    >\n      <ModalHeader>{localDeleteModalHead}</ModalHeader>\n      <hr />\n      <ModalContent>{localDeleteModalText}</ModalContent>\n      <ButtonContainer>\n        <LocalConfirmDeleteButton />\n      </ButtonContainer>\n    </Modal>\n  );\n};\n\nexport default LocalDeleteModal;\n\nconst ModalHeader = styled.div`\n  font-size: 24px;\n  line-height: 1.42;\n  padding: 10px 0px 10px 0px;\n\n  hr {\n    color: black;\n  }\n`;\n\nconst ModalContent = styled.div`\n  margin-top: 15px;\n`;\n\nconst ButtonContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  justify-content: flex-end;\n`;\n\n// react-responsive-modal-overlay\n","import React from \"react\";\nimport \"react-responsive-modal/styles.css\";\nimport { Modal } from \"react-responsive-modal\";\nimport styled from \"styled-components\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport decodeHTML from \"../../utilities/decodeHTML\";\nimport useStore from \"../../globalState/useStore\";\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\n\nconst getLangObj = (state) => state.langObj;\nconst getTriggerSaveBeforeDeleteModal = (state) =>\n  state.triggerSaveBeforeDeleteModal;\nconst getSetTriggerSaveBeforeDeleteModal = (state) =>\n  state.setTriggerSaveBeforeDeleteModal;\n\nconst LocalDeleteModal = () => {\n  // STATE\n  const langObj = useSettingsStore(getLangObj);\n  const triggerSaveBeforeDeleteModal = useStore(\n    getTriggerSaveBeforeDeleteModal\n  );\n  const setTriggerSaveBeforeDeleteModal = useStore(\n    getSetTriggerSaveBeforeDeleteModal\n  );\n\n  const localDeleteModalHead = ReactHtmlParser(\n    decodeHTML(langObj.localSaveBeforeDeleteModalHeader)\n  );\n  const localDeleteModalText = ReactHtmlParser(\n    decodeHTML(langObj.localSaveBeforeDeleteModalText)\n  );\n\n  const onCloseModal = () => {\n    setTriggerSaveBeforeDeleteModal(false);\n  };\n\n  return (\n    <Modal\n      className=\"customModal\"\n      open={triggerSaveBeforeDeleteModal}\n      onClose={onCloseModal}\n      center\n    >\n      <ModalHeader>{localDeleteModalHead}</ModalHeader>\n      <hr />\n      <ModalContent>{localDeleteModalText}</ModalContent>\n    </Modal>\n  );\n};\n\nexport default LocalDeleteModal;\n\nconst ModalHeader = styled.div`\n  font-size: 24px;\n  line-height: 1.42;\n  padding: 10px 0px 10px 0px;\n\n  hr {\n    color: black;\n  }\n`;\n\nconst ModalContent = styled.div`\n  margin-top: 15px;\n`;\n\n// react-responsive-modal-overlay\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport LocalStartButton from \"./LocalStartButton\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport decodeHTML from \"../../utilities/decodeHTML\";\nimport LocalDeleteButton from \"./LocalDeleteButton\";\nimport LocalSortsDownloadButton from \"./LocalSortsDownloadButton\";\nimport LocalDeleteModal from \"./LocalDeleteModal\";\nimport useStore from \"../../globalState/useStore\";\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\nimport useLocalPersist from \"../../globalState/useLocalPersist\";\nimport LocalSaveBeforeDeleteModal from \"./LocalSaveBeforeDeleteModal\";\n\nfunction downloadObjectAsJson(exportObj, exportName) {\n  console.log(\"download called\");\n  var dataStr =\n    \"data:text/json;charset=utf-8,\" +\n    encodeURIComponent(JSON.stringify(exportObj));\n  var downloadAnchorNode = document.createElement(\"a\");\n  downloadAnchorNode.setAttribute(\"href\", dataStr);\n  downloadAnchorNode.setAttribute(\"download\", exportName + \".json\");\n  document.body.appendChild(downloadAnchorNode); // required for firefox\n  downloadAnchorNode.click();\n  downloadAnchorNode.remove();\n}\n\nconst getDisplayLocalPartIdWarn1 = (state) => state.displayLocalPartIdWarning1;\nconst getSetLocalPartIdWarning1 = (state) => state.setLocalPartIdWarning1;\nconst getDisplayLocalPartIdWarn2 = (state) => state.displayLocalPartIdWarning2;\nconst getSetLocalPartIdWarning2 = (state) => state.setLocalPartIdWarning2;\nconst getSetLocalDeleteModal = (state) => state.setLocalDeleteModal;\nconst getLangObj = (state) => state.langObj;\nconst getConfigObj = (state) => state.configObj;\nconst getSetLocalParticipantName = (state) => state.setLocalParticipantName;\nconst getSetLocalUsercode = (state) => state.setLocalUsercode;\nconst getLocalStoredQsorts = (state) => state.localStoredQsorts;\nconst getSetHasDownloadedQsorts = (state) => state.setHasDownloadedQsorts;\nconst getHasDownloadedQsorts = (state) => state.hasDownloadedQsorts;\nconst getSetTriggerSaveBeforeDeleteModal = (state) =>\n  state.setTriggerSaveBeforeDeleteModal;\n\nconst LogInScreen = () => {\n  // STATE\n  const langObj = useSettingsStore(getLangObj);\n  const configObj = useSettingsStore(getConfigObj);\n  const displayPartIdWarning1 = useStore(getDisplayLocalPartIdWarn1);\n  const setLocalPartIdWarning1 = useStore(getSetLocalPartIdWarning1);\n  const displayPartIdWarning2 = useStore(getDisplayLocalPartIdWarn2);\n  const setLocalPartIdWarning2 = useStore(getSetLocalPartIdWarning2);\n  const setLocalDeleteModal = useStore(getSetLocalDeleteModal);\n  const setLocalParticipantName = useStore(getSetLocalParticipantName);\n  const setLocalUsercode = useStore(getSetLocalUsercode);\n  const localStoredQsorts = useLocalPersist(getLocalStoredQsorts);\n  const hasDownloadedQsorts = useLocalPersist(getHasDownloadedQsorts);\n  const setHasDownloadedQsorts = useLocalPersist(getSetHasDownloadedQsorts);\n  const setTriggerSaveBeforeDeleteModal = useStore(\n    getSetTriggerSaveBeforeDeleteModal\n  );\n\n  const loginHeaderText = ReactHtmlParser(decodeHTML(langObj.localHeader));\n  const loginPartIdText = ReactHtmlParser(decodeHTML(langObj.partIdText));\n  const partIdWarning = ReactHtmlParser(decodeHTML(langObj.partIdWarning));\n  const usercodeText = ReactHtmlParser(decodeHTML(langObj.usercodeText));\n  const localParticipantsText = ReactHtmlParser(\n    decodeHTML(langObj.localParticipantsText)\n  );\n  const storedQsortsHeaderText = ReactHtmlParser(\n    decodeHTML(langObj.storedQsortsHeaderText)\n  );\n\n  const headerText = `${storedQsortsHeaderText}: ${\n    Object.keys(localStoredQsorts).length\n  } ${localParticipantsText}`;\n\n  const handleInput = (e) => {\n    setLocalParticipantName(e.target.value);\n    setLocalPartIdWarning1(false);\n  };\n\n  const handleUsercodeInput = (e) => {\n    setLocalUsercode(e.target.value);\n    setLocalPartIdWarning2(false);\n  };\n\n  const handleDeleteLocal = (e) => {\n    // console.log(hasDownloadedQsorts);\n    if (hasDownloadedQsorts) {\n      setLocalDeleteModal(true);\n    } else {\n      // console.log(\"false branch\");\n      setTriggerSaveBeforeDeleteModal(true);\n    }\n  };\n\n  const handleDownloadLocal = (e) => {\n    // console.log(JSON.stringify(localStoredQsorts));\n    const studyTitle = configObj.studyTitle;\n    const myDate = new Date();\n    const myDateString =\n      (\"0\" + myDate.getFullYear()).slice(-2) +\n      \"-\" +\n      (\"0\" + (myDate.getMonth() + 1)).slice(-2) +\n      \"-\" +\n      myDate.getDate() +\n      \"_\" +\n      (\"0\" + myDate.getHours()).slice(-2) +\n      \"-\" +\n      (\"0\" + myDate.getMinutes()).slice(-2) +\n      \"-\" +\n      (\"0\" + myDate.getSeconds()).slice(-2);\n\n    const exportName = studyTitle + \"_\" + myDateString;\n    if (Object.keys(localStoredQsorts).length > 0) {\n      downloadObjectAsJson(localStoredQsorts, exportName);\n    }\n    setHasDownloadedQsorts(true);\n  };\n\n  return (\n    <>\n      <Container>\n        <LocalDeleteModal />\n        <LocalSaveBeforeDeleteModal />\n        <div>\n          <h2>{loginHeaderText}</h2>\n          <StyledHr />\n        </div>\n\n        <div>\n          <h3>{loginPartIdText}</h3>\n          <StyledInputDiv>\n            <StyledInput tabindex=\"0\" onChange={handleInput} type=\"text\" />\n            {displayPartIdWarning1 && (\n              <WarningText>{partIdWarning}</WarningText>\n            )}\n          </StyledInputDiv>\n        </div>\n        <div>\n          {\" \"}\n          <h3>{usercodeText}</h3>\n          <StyledInputDiv>\n            <StyledInput\n              tabindex=\"1\"\n              onChange={handleUsercodeInput}\n              type=\"text\"\n            />\n            {displayPartIdWarning2 && (\n              <WarningText>{partIdWarning}</WarningText>\n            )}\n          </StyledInputDiv>\n        </div>\n        <LocalStartButton tabindex=\"3\" to={`/presort`} />\n      </Container>\n      <Container2>\n        <StoredHeader>\n          <div>{headerText}</div>\n        </StoredHeader>\n        <ButtonContainer>\n          <LocalDeleteButton onClick={handleDeleteLocal}>\n            Delete\n          </LocalDeleteButton>\n          <LocalSortsDownloadButton onClick={handleDownloadLocal}>\n            Download\n          </LocalSortsDownloadButton>\n        </ButtonContainer>\n      </Container2>\n    </>\n  );\n};\n\nexport default LogInScreen;\n\nconst Container = styled.div`\n  display: grid;\n  grid-template-rows: 1fr 1fr 1fr 1fr;\n  margin-top: 10px;\n  width: 70vw;\n  padding: 1.5vw;\n  min-height: 350px;\n  margin-bottom: 0px;\n  border: 2px solid black;\n  border-top-right-radius: 10px;\n  border-top-left-radius: 10px;\n  justify-self: center;\n  background-color: whitesmoke;\n`;\n\nconst Container2 = styled.div`\n  display: grid;\n  grid-template-rows: 1fr 1fr;\n  margin-top: 0px;\n  width: 70vw;\n  padding: 1.5vw;\n  min-height: 100px;\n  margin-bottom: 100px;\n  border-right: 2px solid black;\n  border-left: 2px solid black;\n  border-bottom: 2px solid black;\n  border-bottom-right-radius: 10px;\n  border-bottom-left-radius: 10px;\n  justify-self: center;\n  background-color: whitesmoke;\n`;\n\nconst StyledHr = styled.hr`\n  margin-top: 5px;\n  margin-bottom: 30px;\n`;\n\nconst StyledInput = styled.input`\n  margin-top: 5px;\n  width: 400px;\n  height: 30px;\n  font-size: 1.4em;\n  padding-left: 5px;\n`;\n\nconst StyledInputDiv = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nconst WarningText = styled.div`\n  color: red;\n  font-weight: bold;\n  font-size: 1.4em;\n  margin-left: 10px;\n`;\n\nconst StoredHeader = styled.div`\n  font-size: 25px;\n  font-weight: bold;\n`;\n\nconst ButtonContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n`;\n","import React, { useEffect } from \"react\";\nimport styled, { keyframes } from \"styled-components\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport decodeHTML from \"../../utilities/decodeHTML\";\nimport calculateTimeOnPage from \"../../utilities/calculateTimeOnPage\";\nimport LandingModal from \"../landing/LandingModal\";\nimport LogInScreen from \"./LogInScreen\";\nimport PartIdScreen from \"./PartIdScreen\";\nimport AccessCodeScreen from \"./AccessCodeScreen\";\nimport checkForIeBrowser from \"./checkForIeBrowser\";\nimport InternetExplorerWarning from \"./InternetExplorerWarning\";\nimport parseParams from \"./parseParams\";\nimport LocalStart from \"./LocalStart\";\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\nimport useStore from \"../../globalState/useStore\";\n\nconst getLangObj = (state) => state.langObj;\nconst getConfigObj = (state) => state.configObj;\nconst getDataLoaded = (state) => state.dataLoaded;\nconst getSetCurrentPage = (state) => state.setCurrentPage;\nconst getSetProgressScore = (state) => state.setProgressScore;\nconst getSetUrlUsercode = (state) => state.setUrlUsercode;\nconst getResults = (state) => state.results;\nconst getSetResults = (state) => state.setResults;\nconst getDisplayLandingContent = (state) => state.displayLandingContent;\nconst getSetDisplayNextButton = (state) => state.setDisplayNextButton;\nconst getSetCardFontSize = (state) => state.setCardFontSize;\nconst getMapObject = (state) => state.mapObj;\n\nconst LandingPage = () => {\n  // STATE\n  const langObj = useSettingsStore(getLangObj);\n  const configObj = useSettingsStore(getConfigObj);\n  const mapObj = useSettingsStore(getMapObject);\n  const dataLoaded = useStore(getDataLoaded);\n  const setCurrentPage = useStore(getSetCurrentPage);\n  const setProgressScore = useStore(getSetProgressScore);\n  const setUrlUsercode = useStore(getSetUrlUsercode);\n  const results = useStore(getResults);\n  const setResults = useStore(getSetResults);\n  let displayLandingContent = useStore(getDisplayLandingContent);\n  const setDisplayNextButton = useStore(getSetDisplayNextButton);\n  const setCardFontSize = useStore(getSetCardFontSize);\n\n  const headerBarColor = configObj.headerBarColor;\n  const landingHead = ReactHtmlParser(decodeHTML(langObj.landingHead));\n  const welcomeTextHtml = ReactHtmlParser(decodeHTML(langObj.welcomeText));\n\n  useEffect(() => {\n    setTimeout(() => {\n      setProgressScore(10);\n      setCurrentPage(\"landing\");\n    }, 100);\n  }, [setProgressScore, setCurrentPage]);\n\n  useEffect(() => {\n    // display \"Next\" button if anonymous log in\n    if (configObj.initialScreen === \"anonymous\") {\n      setDisplayNextButton(true);\n    }\n\n    // set FONT SIZE estimate\n    let fontSizeEstimate =\n      5 + Math.ceil(10 * (9 / mapObj.qSortHeaderNumbers.length));\n\n    setCardFontSize(fontSizeEstimate);\n\n    if (\n      configObj.setDefaultFontSize === \"true\" ||\n      configObj.setDefaultFontSize === true\n    ) {\n      setCardFontSize(configObj.defaultFontSize);\n    }\n\n    // set partId if in URL\n    let urlName = parseParams(window.location.href);\n    if (urlName !== undefined) {\n      console.log(urlName.usercode);\n      const codeName = urlName.usercode;\n      setUrlUsercode(codeName);\n    }\n  }, [\n    setUrlUsercode,\n    configObj.initialScreen,\n    configObj.setDefaultFontSize,\n    configObj.defaultFontSize,\n    setCardFontSize,\n    setDisplayNextButton,\n    mapObj,\n  ]);\n\n  // calc time on page\n  useEffect(() => {\n    const startTime = Date.now();\n    return () => {\n      const updatedResults = calculateTimeOnPage(\n        startTime,\n        \"landingPage\",\n        \"landingPage\",\n        results\n      );\n      setResults(updatedResults);\n    };\n  }, [setResults, results]);\n\n  // check for complete\n  let displayLogInScreen = false;\n  let displayPartIdScreen = false;\n  let displayAccessCodeScreen = false;\n\n  if (configObj.firebaseOrLocal === \"local\") {\n    return (\n      <>\n        {dataLoaded && (\n          <ContainerDiv>\n            <LocalStart />\n          </ContainerDiv>\n        )}\n      </>\n    );\n  } else {\n    // determine access mode\n    const initialScreenSetting = configObj.initialScreen;\n    if (initialScreenSetting === \"anonymous\") {\n      displayLandingContent = true;\n    }\n    if (\n      initialScreenSetting === \"partId-access\" &&\n      displayLandingContent === false\n    ) {\n      displayLogInScreen = true;\n    }\n    if (initialScreenSetting === \"partId\" && displayLandingContent === false) {\n      displayPartIdScreen = true;\n    }\n    if (initialScreenSetting === \"access\" && displayLandingContent === false) {\n      displayAccessCodeScreen = true;\n    }\n\n    // if isIE, hide all content except warning.\n    let isIeBrowser = checkForIeBrowser();\n    if (isIeBrowser) {\n      displayLandingContent = false;\n      displayLogInScreen = false;\n      displayAccessCodeScreen = false;\n      displayPartIdScreen = false;\n    }\n\n    return (\n      <React.Fragment>\n        {dataLoaded && (\n          <React.Fragment>\n            <SortTitleBar background={headerBarColor}>\n              {landingHead}\n            </SortTitleBar>\n            <LandingModal />\n            <ContainerDiv>\n              {isIeBrowser && <InternetExplorerWarning />}\n              {displayLogInScreen && <LogInScreen />}\n              {displayPartIdScreen && <PartIdScreen />}\n              {displayAccessCodeScreen && <AccessCodeScreen />}\n              {displayLandingContent && (\n                <ContentDiv>\n                  <div>{welcomeTextHtml}</div>\n                </ContentDiv>\n              )}\n            </ContainerDiv>\n          </React.Fragment>\n        )}\n      </React.Fragment>\n    );\n  }\n};\n\nexport default LandingPage;\n\nconst fadeIn = keyframes`\n  from {\n    opacity: 0;\n  }\n\n  to {\n    opacity: 1;\n  }\n`;\n\nconst fadeOut = keyframes`\n  from {\n    opacity: 1;\n  }\n\n  to {\n    opacity: 0;\n  }\n`;\n\nconst ContainerDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 70px;\n  padding-top: 50px;\n  transition: 0.3s ease all;\n  margin-top: 50px;\n\n  img {\n    margin-top: 20px;\n    margin-bottom: 20px;\n  }\n  iframe {\n    margin-top: 20px;\n    margin-bottom: 20px;\n  }\n`;\n\nconst ContentDiv = styled.div`\n  display: flex;\n  width: 75vw;\n  font-size: 1.25em;\n  visibility: ${(props) => (props.view ? \"hidden\" : \"visible\")};\n  animation: ${(props) => (props.view ? fadeOut : fadeIn)} 0.5s linear;\n  transition: visibility 0.5s linear;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst SortTitleBar = styled.div`\n  width: 100vw;\n  padding-left: 1.5vw;\n  padding-right: 1.5vw;\n  padding-top: 8px;\n  min-height: 50px;\n  background-color: ${(props) => props.background};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: white;\n  font-weight: bold;\n  font-size: 28px;\n  position: fixed;\n  top: 0;\n`;\n","const sanitizeString = (string) => {\n  try {\n    let shouldDoReplace = string.includes(\"<\");\n    let shouldDoReplace2 = string.includes(\">\");\n\n    if (shouldDoReplace === true || shouldDoReplace2 === true) {\n      const replaceLeft = /</gi;\n      const replaceRight = />/gi;\n      const stringText2 = string.replace(replaceLeft, \"&lt\");\n      const stringText3 = stringText2.replace(replaceRight, \"&gt\");\n      return stringText3;\n    } else {\n      return string;\n    }\n  } catch (error) {\n    console.log(\"There was an error sanitizing User Input\");\n    console.error(error);\n  }\n};\n\nexport default sanitizeString;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport decodeHTML from \"../../utilities/decodeHTML\";\nimport sanitizeString from \"../../utilities/sanitizeString\";\nimport useStore from \"../../globalState/useStore\";\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\n\n/* eslint react/prop-types: 0 */\n\n// LowCards example ===> {high: [\"column4\"], middle: [\"column0\"], low: [\"columnN4\"]}\n\nconst getColumnStatements = (state) => state.columnStatements;\nconst getResultsPostsort = (state) => state.resultsPostsort;\nconst getSetResultsPostsort = (state) => state.setResultsPostsort;\nconst getStatementCommentsObj = (state) => state.statementCommentsObj;\n\nconst LowCards = (props) => {\n  // STATE\n  const columnStatements = useSettingsStore(getColumnStatements);\n  const resultsPostsort = useStore(getResultsPostsort);\n  const setResultsPostsort = useStore(getSetResultsPostsort);\n  const statementCommentsObj = useStore(getStatementCommentsObj);\n\n  // on blur, get text and add comment to card object\n  const onBlur = (event, columnDisplay, itemId) => {\n    const results = resultsPostsort;\n    const cards = [...columnStatements.vCols[columnDisplay]];\n    const targetCard = event.target.id;\n    const userEnteredText = event.target.value;\n\n    const identifier = `${columnDisplay}_${itemId + 1}`;\n\n    // to update just the card that changed\n    cards.map((el) => {\n      if (el.id === targetCard) {\n        const comment3 = userEnteredText;\n        // remove new line and commas to make csv export easier\n        const comment2 = comment3.replace(/\\n/g, \" \");\n        const comment = comment2.replace(/,/g, \" \");\n        // assign to main data object for confirmation / debugging\n        el.comment = sanitizeString(comment);\n\n        // assign to comments object\n        statementCommentsObj[identifier] = `(${el.id}) ${comment}`;\n        results[identifier] = `(${el.id}) ${comment}`;\n      }\n      return el;\n    });\n\n    setResultsPostsort(results);\n  }; // end onBlur\n\n  const { height, width, cardFontSize, disagreeObj, lowCards } = props;\n  const { disagreeText, placeholder, columnDisplay } = disagreeObj;\n\n  return lowCards.map((item, index) => {\n    const statementHtml = ReactHtmlParser(\n      `<div>${decodeHTML(item.statement)}</div>`\n    );\n    item.indexVal = index;\n    return (\n      <Container key={item.statement}>\n        <CardTag cardFontSize={cardFontSize}>{disagreeText}</CardTag>\n        <CardAndTextHolder>\n          <Card cardFontSize={cardFontSize} width={width} height={height}>\n            {statementHtml}\n          </Card>\n          <TagContainerDiv>\n            <CommentArea\n              data-gramm_editor=\"false\"\n              height={height}\n              cardFontSize={cardFontSize}\n              id={item.id}\n              placeholder={placeholder}\n              defaultValue={item.comment}\n              onBlur={(e) => {\n                onBlur(e, columnDisplay, index);\n              }}\n            />\n          </TagContainerDiv>\n        </CardAndTextHolder>\n      </Container>\n    );\n  });\n};\n\nexport default LowCards;\n\nconst Container = styled.div`\n  width: 90vw;\n  max-width: 900px;\n  margin-top: 50px;\n  border-radius: 3px;\n  border: 1px solid darkgray;\n`;\n\nconst CardTag = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  background: lightpink;\n  color: black;\n  text-align: center;\n  font-size: ${(props) => `${props.cardFontSize}px`};\n  height: 1.5em;\n`;\n\nconst CardAndTextHolder = styled.div`\n  display: flex;\n  align-content: center;\n  background: rgb(224, 224, 224);\n  width: 90vw;\n  max-width: 898px;\n`;\n\nconst CommentArea = styled.textarea`\n  padding: 10px;\n  margin-top: 2px;\n  background-color: white;\n  height: ${(props) => `${props.height}px;`};\n  font-size: ${(props) => `${props.cardFontSize}px`};\n  width: calc(100% - 6px);\n  border: 2px solid darkgray;\n  border-radius: 3px;\n`;\n\nconst TagContainerDiv = styled.div`\n  padding-top: 3px;\n  width: 100%;\n`;\n\nconst Card = styled.div`\n  user-select: \"none\";\n  padding: 0 2px 0 2px;\n  margin: 5px 5px 5px 5px;\n  line-height: 1em;\n  height: ${(props) => `${props.height}px;`};\n  width: 20vw;\n  max-width: ${(props) => `${props.width}px;`};\n  border-radius: 5px;\n  font-size: ${(props) => `${props.cardFontSize}px`};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border: 2px solid black;\n  background-color: #f6f6f6;\n  text-align: center;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport decodeHTML from \"../../utilities/decodeHTML\";\nimport sanitizeString from \"../../utilities/sanitizeString\";\nimport useStore from \"../../globalState/useStore\";\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\n\n/* eslint react/prop-types: 0 */\n\n// LowCards example ===> {high: [\"column4\"], middle: [\"column0\"], low: [\"columnN4\"]}\n\nconst getColumnStatements = (state) => state.columnStatements;\nconst getResultsPostsort = (state) => state.resultsPostsort;\nconst getSetResultsPostsort = (state) => state.setResultsPostsort;\nconst getStatementCommentsObj = (state) => state.statementCommentsObj;\n\nconst LowCards2 = (props) => {\n  //STATE\n  const columnStatements = useSettingsStore(getColumnStatements);\n  const resultsPostsort = useStore(getResultsPostsort);\n  const setResultsPostsort = useStore(getSetResultsPostsort);\n  const statementCommentsObj = useStore(getStatementCommentsObj);\n\n  // on blur, get text and add comment to card object\n  const onBlur = (event, columnDisplay, itemId) => {\n    const results = resultsPostsort;\n    const cards = [...columnStatements.vCols[columnDisplay]];\n    const targetCard = event.target.id;\n    const userEnteredText = event.target.value;\n\n    const identifier = `${columnDisplay}_${itemId + 1}`;\n\n    // to update just the card that changed\n    cards.map((el) => {\n      if (el.id === targetCard) {\n        const comment3 = userEnteredText;\n        // remove new line and commas to make csv export easier\n        const comment2 = comment3.replace(/\\n/g, \" \");\n        const comment = comment2.replace(/,/g, \" \");\n        // assign to main data object for confirmation / debugging\n        el.comment = sanitizeString(comment);\n\n        // assign to comments object\n        statementCommentsObj[identifier] = `(${el.id}) ${comment}`;\n        results[identifier] = `(${el.id}) ${comment}`;\n      }\n      return el;\n    });\n\n    setResultsPostsort(results);\n  }; // end onBlur\n\n  const { height, width, cardFontSize, lowCards2, disagreeObj } = props;\n  const { disagreeText, placeholder } = disagreeObj;\n\n  const columnDisplay = disagreeObj.columnDisplay2;\n\n  return lowCards2.map((item, index) => {\n    const statementHtml = ReactHtmlParser(\n      `<div>${decodeHTML(item.statement)}</div>`\n    );\n    return (\n      <Container key={item.statement}>\n        <CardTag cardFontSize={cardFontSize}>{disagreeText}</CardTag>\n        <CardAndTextHolder>\n          <Card cardFontSize={cardFontSize} width={width} height={height}>\n            {statementHtml}\n          </Card>\n          <TagContainerDiv>\n            <CommentArea\n              data-gramm_editor=\"false\"\n              id={item.id}\n              height={height}\n              cardFontSize={cardFontSize}\n              className=\"commentTextArea\"\n              placeholder={placeholder}\n              defaultValue={item.comment}\n              onBlur={(e) => {\n                onBlur(e, columnDisplay, index);\n              }}\n            />\n          </TagContainerDiv>\n        </CardAndTextHolder>\n      </Container>\n    );\n  });\n};\n\nexport default LowCards2;\n\nconst Container = styled.div`\n  width: 90vw;\n  max-width: 900px;\n  margin-top: 50px;\n  border-radius: 3px;\n  border: 1px solid darkgray;\n`;\n\nconst CardTag = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  background: lightpink;\n  font-size: ${(props) => `${props.cardFontSize}px`};\n  color: black;\n  text-align: center;\n  height: 1.5em;\n`;\n\nconst CardAndTextHolder = styled.div`\n  display: flex;\n  align-content: center;\n  background: rgb(224, 224, 224);\n  width: 90vw;\n  max-width: 898px;\n`;\n\nconst CommentArea = styled.textarea`\n  padding: 10px;\n  background-color: white;\n  height: ${(props) => `${props.height}px;`};\n  font-size: ${(props) => `${props.cardFontSize}px`};\n  width: calc(100% - 6px);\n  border: 2px solid darkgray;\n  border-radius: 3px;\n`;\n\nconst TagContainerDiv = styled.div`\n  padding-top: 3px;\n  width: 100%;\n`;\n\nconst Card = styled.div`\n  user-select: \"none\";\n  padding: 0 2px 0 2px;\n  margin: 5px 5px 5px 5px;\n  line-height: 1em;\n  height: ${(props) => `${props.height}px;`};\n  width: 20vw;\n  max-width: ${(props) => `${props.width}px;`};\n  border-radius: 5px;\n  font-size: ${(props) => `${props.cardFontSize}px`};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border: 2px solid black;\n  background-color: #f6f6f6;\n  text-align: center;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport decodeHTML from \"../../utilities/decodeHTML\";\nimport sanitizeString from \"../../utilities/sanitizeString\";\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\nimport useStore from \"../../globalState/useStore\";\n\n/* eslint react/prop-types: 0 */\n\n// format example ===> {high: [\"column4\"], middle: [\"column0\"], low: [\"columnN4\"]}\n\nconst getColumnStatements = (state) => state.columnStatements;\nconst getResultsPostsort = (state) => state.resultsPostsort;\nconst getSetResultsPostsort = (state) => state.setResultsPostsort;\nconst getStatementCommentsObj = (state) => state.statementCommentsObj;\n\nconst HighCards = (props) => {\n  // STATE\n  const columnStatements = useSettingsStore(getColumnStatements);\n  const resultsPostsort = useStore(getResultsPostsort);\n  const setResultsPostsort = useStore(getSetResultsPostsort);\n  const statementCommentsObj = useStore(getStatementCommentsObj);\n\n  // on leaving card comment section,\n  const onBlur = (event, columnDisplay, itemId) => {\n    const results = resultsPostsort;\n    const cards = columnStatements.vCols[columnDisplay];\n    const targetCard = event.target.id;\n    const userEnteredText = event.target.value;\n\n    const identifier = `${columnDisplay}_${itemId + 1}`;\n\n    // to update just the card that changed\n    cards.map((el) => {\n      if (el.id === targetCard) {\n        const comment3 = userEnteredText;\n        // remove new line and commas to make csv export easier\n        const comment2 = comment3.replace(/\\n/g, \" \");\n        let comment = comment2.replace(/,/g, \" \");\n        // assign to main data object for confirmation / debugging\n        el.comment = sanitizeString(comment);\n\n        // assign to comments object\n        statementCommentsObj[identifier] = `(${el.id}) ${comment}`;\n        results[identifier] = `(${el.id}) ${comment}`;\n      }\n      return el;\n    });\n    setResultsPostsort(results);\n  }; // end onBlur\n\n  const { agreeObj, cardFontSize, width, height } = props;\n\n  const highCards = columnStatements.vCols[agreeObj.columnDisplay];\n\n  const { agreeText, placeholder } = agreeObj;\n\n  let columnDisplay = agreeObj.columnDisplay;\n\n  return highCards.map((item, index) => {\n    const statementHtml = ReactHtmlParser(\n      `<div>${decodeHTML(item.statement)}</div>`\n    );\n    return (\n      <Container key={item.statement}>\n        <CardTag cardFontSize={cardFontSize}>{agreeText}</CardTag>\n        <CardAndTextHolder>\n          <Card\n            cardFontSize={cardFontSize}\n            width={width}\n            height={height}\n            cardColor={item.cardColor}\n          >\n            {statementHtml}\n          </Card>\n          <TagContainerDiv>\n            <CommentArea\n              data-gramm_editor=\"false\"\n              cardFontSize={cardFontSize}\n              height={height}\n              id={item.id}\n              placeholder={placeholder}\n              defaultValue={item.comment}\n              onBlur={(e) => {\n                onBlur(e, columnDisplay, index);\n              }}\n            />\n          </TagContainerDiv>\n        </CardAndTextHolder>\n      </Container>\n    );\n  });\n};\n\nexport default HighCards;\n\nconst Container = styled.div`\n  width: 90vw;\n  max-width: 900px;\n  margin-top: 50px;\n  border-radius: 3px;\n  border: 1px solid darkgray;\n`;\n\nconst CardTag = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  background: #c7f6c7;\n  font-size: ${(props) => `${props.cardFontSize}px`};\n  color: black;\n  text-align: center;\n  height: 1.5em;\n`;\n\nconst CardAndTextHolder = styled.div`\n  display: flex;\n  align-content: center;\n  background: rgb(224, 224, 224);\n  width: 90vw;\n  max-width: 898px;\n`;\n\nconst CommentArea = styled.textarea`\n  padding: 10px;\n  margin-top: 2px;\n  background-color: white;\n  height: ${(props) => `${props.height}px;`};\n  font-size: ${(props) => `${props.cardFontSize}px`};\n  width: calc(100% - 6px);\n  border: 2px solid darkgray;\n  border-radius: 3px;\n`;\n\nconst TagContainerDiv = styled.div`\n  padding-top: 3px;\n  width: 100%;\n`;\n\nconst Card = styled.div`\n  user-select: \"none\";\n  padding: 0 2px 0 2px;\n  margin: 5px 5px 5px 5px;\n  line-height: 1em;\n  height: ${(props) => `${props.height}px;`};\n  width: 20vw;\n  max-width: ${(props) => `${props.width}px;`};\n  border-radius: 5px;\n  font-size: ${(props) => `${props.cardFontSize}px`};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border: 2px solid darkslategray;\n  background-color: #f6f6f6;\n  text-align: center;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport decodeHTML from \"../../utilities/decodeHTML\";\nimport sanitizeString from \"../../utilities/sanitizeString\";\nimport useStore from \"../../globalState/useStore\";\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\n\n/* eslint react/prop-types: 0 */\n\n// format example ===> {high: [\"column4\"], middle: [\"column0\"], low: [\"columnN4\"]}\n\nconst getColumnStatements = (state) => state.columnStatements;\nconst getResultsPostsort = (state) => state.resultsPostsort;\nconst getSetResultsPostsort = (state) => state.setResultsPostsort;\nconst getStatementCommentsObj = (state) => state.statementCommentsObj;\n\nconst HighCards2 = (props) => {\n  // STATE\n  const columnStatements = useSettingsStore(getColumnStatements);\n  const resultsPostsort = useStore(getResultsPostsort);\n  const setResultsPostsort = useStore(getSetResultsPostsort);\n  const statementCommentsObj = useStore(getStatementCommentsObj);\n\n  // on leaving card comment section,\n  const onBlur = (event, columnDisplay, itemId) => {\n    const results = resultsPostsort;\n    const cards = columnStatements.vCols[columnDisplay];\n    const targetCard = event.target.id;\n    const userEnteredText = event.target.value;\n\n    const identifier = `${columnDisplay}_${itemId + 1}`;\n\n    // to update just the card that changed\n    cards.map((el) => {\n      if (el.id === targetCard) {\n        const comment3 = userEnteredText;\n        // remove new line and commas to make csv export easier\n        const comment2 = comment3.replace(/\\n/g, \" \");\n        const comment = comment2.replace(/,/g, \" \");\n        // assign to main data object for confirmation / debugging\n        el.comment = sanitizeString(comment);\n\n        // assign to comments object\n        statementCommentsObj[identifier] = `(${el.id}) ${comment}`;\n        results[identifier] = `(${el.id}) ${comment}`;\n      }\n      return el;\n    });\n\n    setResultsPostsort(results);\n  }; // end onBlur\n\n  const { height, width, agreeObj, highCards2, cardFontSize } = props;\n\n  const { agreeText, placeholder } = agreeObj;\n\n  const columnDisplay = agreeObj.columnDisplay2;\n\n  return highCards2.map((item, index) => {\n    const statementHtml = ReactHtmlParser(\n      `<div>${decodeHTML(item.statement)}</div>`\n    );\n\n    return (\n      <Container key={item.statement}>\n        <CardTag cardFontSize={cardFontSize}>{agreeText}</CardTag>\n        <CardAndTextHolder>\n          <Card cardFontSize={cardFontSize} width={width} height={height}>\n            {statementHtml}\n          </Card>\n          <TagContainerDiv>\n            <CommentArea\n              data-gramm_editor=\"false\"\n              height={height}\n              cardFontSize={cardFontSize}\n              id={item.id}\n              placeholder={placeholder}\n              defaultValue={item.comment}\n              onBlur={(e) => {\n                onBlur(e, columnDisplay, index);\n              }}\n            />\n          </TagContainerDiv>\n        </CardAndTextHolder>\n      </Container>\n    );\n  });\n};\n\nexport default HighCards2;\n\nconst Container = styled.div`\n  width: 90vw;\n  max-width: 900px;\n  margin-top: 50px;\n  border-radius: 3px;\n  border: 1px solid darkgray;\n`;\n\nconst CardTag = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  background: #c7f6c7;\n  color: black;\n  text-align: center;\n  font-size: ${(props) => `${props.cardFontSize}px`};\n  height: 1.5em;\n`;\n\nconst CardAndTextHolder = styled.div`\n  display: flex;\n  align-content: center;\n  background: rgb(224, 224, 224);\n  width: 90vw;\n  max-width: 898px;\n`;\n\nconst CommentArea = styled.textarea`\n  padding: 10px;\n  margin-top: 2px;\n  background-color: white;\n  height: ${(props) => `${props.height}px;`};\n  font-size: ${(props) => `${props.cardFontSize}px`};\n  width: calc(100% - 6px);\n  border: 2px solid darkgray;\n  border-radius: 3px;\n`;\n\nconst TagContainerDiv = styled.div`\n  padding-top: 3px;\n  width: 100%;\n`;\n\nconst Card = styled.div`\n  user-select: \"none\";\n  padding: 0 2px 0 2px;\n  margin: 5px 5px 5px 5px;\n  line-height: 1em;\n  height: ${(props) => `${props.height}px;`};\n  width: 20vw;\n  max-width: ${(props) => `${props.width}px;`};\n  border-radius: 5px;\n  font-size: ${(props) => `${props.cardFontSize}px`};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border: 2px solid black;\n  background-color: #f6f6f6;\n  text-align: center;\n`;\n","import React from \"react\";\nimport \"react-responsive-modal/styles.css\";\nimport { Modal } from \"react-responsive-modal\";\nimport styled from \"styled-components\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport decodeHTML from \"../../utilities/decodeHTML\";\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\nimport useStore from \"../../globalState/useStore\";\n\nconst getLangObj = (state) => state.langObj;\nconst getTriggerPostsortModal = (state) => state.triggerPostsortModal;\nconst getSetTriggerPostsortModal = (state) => state.setTriggerPostsortModal;\n\nconst PostsortHelpModal = () => {\n  // STATE\n  const langObj = useSettingsStore(getLangObj);\n  const triggerPostsortModal = useStore(getTriggerPostsortModal);\n  const setTriggerPostsortModal = useStore(getSetTriggerPostsortModal);\n\n  const postsortHelpModalHead = ReactHtmlParser(\n    decodeHTML(langObj.postsortModalHead)\n  );\n  const postsortHelpModalText = ReactHtmlParser(\n    decodeHTML(langObj.postsortModalText)\n  );\n\n  // const onOpenModal = () => setOpen(true);\n  const onCloseModal = () => {\n    setTriggerPostsortModal(false);\n  };\n\n  return (\n    <Modal\n      className=\"customModal\"\n      open={triggerPostsortModal}\n      onClose={onCloseModal}\n      center\n    >\n      <ModalHeader>{postsortHelpModalHead}</ModalHeader>\n      <hr />\n      <ModalContent>{postsortHelpModalText}</ModalContent>\n    </Modal>\n  );\n};\n\nexport default PostsortHelpModal;\n\nconst ModalHeader = styled.div`\n  font-size: 24px;\n  line-height: 1.42;\n  padding: 10px 0px 10px 0px;\n\n  hr {\n    color: black;\n  }\n`;\n\nconst ModalContent = styled.div`\n  margin-top: 15px;\n`;\n\n// react-responsive-modal-overlay\n","import React, { useEffect } from \"react\";\nimport LowCards from \"./LowCards\";\nimport LowCards2 from \"./LowCards2\";\nimport HighCards from \"./HighCards\";\nimport HighCards2 from \"./HighCards2\";\nimport styled from \"styled-components\";\nimport calculateTimeOnPage from \"../../utilities/calculateTimeOnPage\";\nimport decodeHTML from \"../../utilities/decodeHTML\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport PostsortHelpModal from \"./PostsortHelpModal\";\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\nimport useStore from \"../../globalState/useStore\";\n\n/* eslint react/prop-types: 0 */\n\nconst getLangObj = (state) => state.langObj;\nconst getConfigObj = (state) => state.configObj;\nconst getMapObj = (state) => state.mapObj;\nconst getSetProgressScore = (state) => state.setProgressScore;\nconst getColumnStatements = (state) => state.columnStatements;\nconst getCardHeight = (state) => state.cardHeight;\nconst getCardFontSize = (state) => state.cardFontSize;\nconst getSetCurrentPage = (state) => state.setCurrentPage;\nconst getResults = (state) => state.results;\nconst getSetResults = (state) => state.setResults;\nconst getSetDisplayNextButton = (state) => state.setDisplayNextButton;\n\nconst PostSort = () => {\n  // STATE\n  const langObj = useSettingsStore(getLangObj);\n  const configObj = useSettingsStore(getConfigObj);\n  const mapObj = useSettingsStore(getMapObj);\n  const setProgressScore = useStore(getSetProgressScore);\n  const columnStatements = useSettingsStore(getColumnStatements);\n  const cardHeight = useStore(getCardHeight);\n  const cardFontSize = useStore(getCardFontSize);\n  const setCurrentPage = useStore(getSetCurrentPage);\n  const results = useStore(getResults);\n  const setResults = useStore(getSetResults);\n  const setDisplayNextButton = useStore(getSetDisplayNextButton);\n\n  // console.log(\"conf: \", JSON.stringify(configObj, null, 2));\n  //  console.log(\"map: \", JSON.stringify(mapObj, null, 2));\n\n  // set next button display\n  setDisplayNextButton(true);\n\n  const headerBarColor = configObj.headerBarColor;\n  const postsortInstructions = ReactHtmlParser(\n    decodeHTML(langObj.postsortInstructions)\n  );\n\n  useEffect(() => {\n    let startTime;\n    startTime = Date.now();\n    setCurrentPage(\"postsort\");\n    setProgressScore(50);\n\n    return () => {\n      const updatedResults = calculateTimeOnPage(\n        startTime,\n        \"postsortPage\",\n        \"postsortPage\",\n        results\n      );\n      setResults(updatedResults);\n    };\n  }, [setCurrentPage, setProgressScore, results, setResults]);\n\n  // pull data from localStorage\n  const columnWidth = 250;\n\n  const titleText = ReactHtmlParser(decodeHTML(langObj.postsortHeader));\n  const agree = ReactHtmlParser(decodeHTML(langObj.postsortAgreement));\n  const disagree = ReactHtmlParser(decodeHTML(langObj.postsortDisagreement));\n  // const neutral = ReactHtmlParser(decodeHTML(langObj.postsortNeutral));\n  const placeholder = langObj.placeholder;\n\n  const keys = Object.keys(mapObj.postsortConvertObj);\n  const agreeColDisp1 = keys.pop();\n  const agreeColDisp2 = keys.pop();\n  const disagreeColDisp1 = keys.shift();\n  const disagreeColDisp2 = keys.shift();\n\n  const postsortAgreeColDisp1 = agreeColDisp1;\n  const postsortAgreeColDisp2 = agreeColDisp2;\n  const showSecondPosColumn = configObj.showSecondPosColumn;\n  const postsortDisagreeColDisp1 = disagreeColDisp1;\n  const postsortDisagreeColDisp2 = disagreeColDisp2;\n  const showSecondNegColumn = configObj.showSecondNegColumn;\n\n  const agreeObj = {};\n  agreeObj.agreeText = agree;\n  agreeObj.columnDisplay = [postsortAgreeColDisp1];\n  agreeObj.columnDisplay2 = [postsortAgreeColDisp2];\n  agreeObj.displaySecondColumn = showSecondPosColumn;\n  agreeObj.placeholder = placeholder;\n\n  const disagreeObj = {};\n  disagreeObj.disagreeText = disagree;\n  disagreeObj.columnDisplay = [postsortDisagreeColDisp1];\n  disagreeObj.columnDisplay2 = [postsortDisagreeColDisp2];\n  disagreeObj.displaySecondColumn = showSecondNegColumn;\n  disagreeObj.placeholder = placeholder;\n\n  const highCards = columnStatements?.vCols[agreeObj.columnDisplay];\n  const highCards2 = columnStatements?.vCols[agreeObj.columnDisplay2];\n  // const neutralCards = columnStatements.vCols[neutralObj.columnDisplay];\n  const lowCards = columnStatements?.vCols[disagreeObj.columnDisplay];\n  const lowCards2 = columnStatements?.vCols[disagreeObj.columnDisplay2];\n\n  return (\n    <div>\n      <PostsortHelpModal />\n      <SortTitleBar background={headerBarColor}>{titleText}</SortTitleBar>\n      <CardsContainer>\n        <PostsortInstructions>{postsortInstructions}</PostsortInstructions>\n        <HighCards\n          agreeObj={agreeObj}\n          height={cardHeight}\n          cardFontSize={cardFontSize}\n          width={columnWidth}\n          highCards={highCards}\n        />\n\n        {agreeObj.displaySecondColumn && (\n          <HighCards2\n            agreeObj={agreeObj}\n            height={cardHeight}\n            cardFontSize={cardFontSize}\n            width={columnWidth}\n            highCards2={highCards2}\n          />\n        )}\n        {disagreeObj.displaySecondColumn && (\n          <LowCards2\n            disagreeObj={disagreeObj}\n            height={cardHeight}\n            width={columnWidth}\n            lowCards2={lowCards2}\n            cardFontSize={cardFontSize}\n          />\n        )}\n\n        <LowCards\n          disagreeObj={disagreeObj}\n          height={cardHeight}\n          width={columnWidth}\n          cardFontSize={cardFontSize}\n          lowCards={lowCards}\n        />\n      </CardsContainer>\n    </div>\n  );\n};\n\nexport default PostSort;\n\nconst CardsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  padding-bottom: 150px;\n  margin-top: 50px;\n`;\n\nconst SortTitleBar = styled.div`\n  width: 100vw;\n  padding-left: 1.5vw;\n  padding-right: 1.5vw;\n  padding-top: 5px;\n  min-height: 50px;\n  background-color: ${(props) => props.background};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: white;\n  font-weight: bold;\n  font-size: 28px;\n  position: fixed;\n  top: 0;\n`;\n\nconst PostsortInstructions = styled.div`\n  display: flex;\n  justify-self: center;\n  align-self: center;\n  margin-top: 30px;\n  text-align: center;\n  color: black;\n  font-size: 2vh;\n  font-weight: normal;\n  max-width: 1100px;\n`;\n","import React from \"react\";\nimport \"react-responsive-modal/styles.css\";\nimport { Modal } from \"react-responsive-modal\";\nimport styled from \"styled-components\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport decodeHTML from \"../../utilities/decodeHTML\";\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\nimport useStore from \"../../globalState/useStore\";\n\nconst getLangObj = (state) => state.langObj;\nconst getTriggerPresortModal = (state) => state.triggerPresortModal;\nconst getSetTriggerPresortModal = (state) => state.setTriggerPresortModal;\n\nconst PresortModal = () => {\n  // STATE\n  const langObj = useSettingsStore(getLangObj);\n  const triggerPresortModal = useStore(getTriggerPresortModal);\n  const setTriggerPresortModal = useStore(getSetTriggerPresortModal);\n\n  const onCloseModal = () => {\n    setTriggerPresortModal(false);\n  };\n\n  const header = ReactHtmlParser(decodeHTML(langObj.presortModalHead));\n  const modalText = ReactHtmlParser(decodeHTML(langObj.presortModalText));\n\n  return (\n    <Modal\n      className=\"customModal\"\n      open={triggerPresortModal}\n      onClose={onCloseModal}\n      center\n    >\n      <ModalHeader>{header}</ModalHeader>\n      <hr />\n      <ModalContent>{modalText}</ModalContent>\n    </Modal>\n  );\n};\n\nexport default PresortModal;\n\nconst ModalHeader = styled.div`\n  font-size: 24px;\n  line-height: 1.42;\n  padding: 10px 0px 10px 0px;\n\n  hr {\n    color: black;\n  }\n`;\n\nconst ModalContent = styled.div`\n  margin-top: 15px;\n`;\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\nimport styled from \"styled-components\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport decodeHTML from \"../../utilities/decodeHTML\";\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\nimport useStore from \"../../globalState/useStore\";\n\nconst getLangObj = (state) => state.langObj;\nconst getConfigObj = (state) => state.configObj;\nconst getStatementsObj = (state) => state.statementsObj;\nconst getColumnStatements = (state) => state.columnStatements;\nconst getPreSortedStateNumInit = (state) =>\n  state.presortSortedStatementsNumInitial;\nconst getSetColumnStatements = (state) => state.setColumnStatements;\nconst getSetPresortFinished = (state) => state.setPresortFinished;\nconst getSetTrigPresortFinModal = (state) =>\n  state.setTriggerPresortFinishedModal;\nconst getResults = (state) => state.results;\nconst getSetResults = (state) => state.setResults;\nconst getSetProgressScoreAdditional = (state) =>\n  state.setProgressScoreAdditional;\n\nfunction PresortDND(props) {\n  // STATE\n  const langObj = useSettingsStore(getLangObj);\n  const configObj = useSettingsStore(getConfigObj);\n  const statementsObj = useSettingsStore(getStatementsObj);\n  const columnStatements = useSettingsStore(getColumnStatements);\n  const presortSortedStatementsNumInitial = useStore(getPreSortedStateNumInit);\n  const setColumnStatements = useSettingsStore(getSetColumnStatements);\n  const setPresortFinished = useStore(getSetPresortFinished);\n  const setTriggerPresortFinishedModal = useStore(getSetTrigPresortFinModal);\n  const results = useStore(getResults);\n  const setResults = useStore(getSetResults);\n  const setProgressScoreAdditional = useStore(getSetProgressScoreAdditional);\n\n  const statementsName = ReactHtmlParser(decodeHTML(langObj.presortStatements));\n  const btnDisagreement = ReactHtmlParser(\n    decodeHTML(langObj.presortDisagreement)\n  );\n  const btnAgreement = ReactHtmlParser(decodeHTML(langObj.presortAgreement));\n  const btnNeutral = ReactHtmlParser(decodeHTML(langObj.presortNeutral));\n\n  // initialize local state\n  let [presortSortedStatementsNum, setPresortSortedStatementsNum] = useState(\n    presortSortedStatementsNumInitial\n  );\n\n  const itemsFromBackend = props.statements;\n  const cardFontSize = `${props.cardFontSize}px`;\n  let defaultFontColor = configObj.defaultFontColor;\n\n  const cardHeight = 210;\n\n  const [columns, setColumns] = useState({\n    cards: {\n      name: statementsName,\n      items: itemsFromBackend,\n      id: \"cards\",\n    },\n    neg: {\n      name: btnDisagreement,\n      items: [],\n      id: \"neg\",\n    },\n    neutral: {\n      name: btnNeutral,\n      items: [],\n      id: \"neutral\",\n    },\n    pos: {\n      name: btnAgreement,\n      id: \"pos\",\n      items: [],\n    },\n  });\n\n  const onDragEnd = useCallback(\n    (result, columns, setColumns) => {\n      if (!result.destination || result.destination.droppableId === \"cards\") {\n        return;\n      }\n      const { source, destination } = result;\n\n      // update statement characteristics\n      const statementsArray = [...columnStatements.statementList];\n      const destinationId = result.destination.droppableId;\n      const draggableId = result.draggableId;\n\n      // set METADATA FOR SORTING\n      for (let i = 0; i < statementsArray.length; i++) {\n        if (statementsArray[i].id === draggableId) {\n          if (destinationId === \"neg\") {\n            statementsArray[i].divColor = \"isNegativeStatement\";\n            statementsArray[i].cardColor = \"pinkSortCard\";\n            statementsArray[i].pinkChecked = true;\n            statementsArray[i].yellowChecked = false;\n            statementsArray[i].greenChecked = false;\n            statementsArray[i].sortValue = 111;\n          }\n          if (destinationId === \"neutral\") {\n            statementsArray[i].divColor = \"isUncertainStatement\";\n            statementsArray[i].cardColor = \"yellowSortCard\";\n            statementsArray[i].pinkChecked = false;\n            statementsArray[i].yellowChecked = true;\n            statementsArray[i].greenChecked = false;\n            statementsArray[i].sortValue = 222;\n          }\n          if (destinationId === \"pos\") {\n            statementsArray[i].divColor = \"isPositiveStatement\";\n            statementsArray[i].cardColor = \"greenSortCard\";\n            statementsArray[i].pinkChecked = false;\n            statementsArray[i].yellowChecked = false;\n            statementsArray[i].greenChecked = true;\n            statementsArray[i].sortValue = 333;\n          }\n        }\n      }\n\n      // set new ordering\n      for (let i = 0; i < statementsArray.length; i++) {\n        statementsArray[i].listIndex = i + 1;\n      }\n\n      // save to memory\n      columnStatements.statementList = [...statementsArray];\n      setColumnStatements(columnStatements);\n\n      // when dropped on different droppable\n      if (source.droppableId !== destination.droppableId) {\n        try {\n          const sourceColumn = columns[source.droppableId];\n          const destColumn = columns[destination.droppableId];\n          const sourceItems = [...sourceColumn.items];\n          const destItems = [...destColumn.items];\n          const [removed] = sourceItems.splice(source.index, 1);\n\n          // change background color\n          if (destColumn.id === \"pos\") {\n            removed.backgroundColor = configObj.greenCardColor;\n          }\n          if (destColumn.id === \"neg\") {\n            removed.backgroundColor = configObj.pinkCardColor;\n          }\n          if (destColumn.id === \"neutral\") {\n            removed.backgroundColor = configObj.yellowCardColor;\n          }\n\n          destItems.splice(destination.index, 0, removed);\n\n          // update columns\n          setColumns({\n            ...columns,\n            [source.droppableId]: {\n              ...sourceColumn,\n              items: sourceItems,\n            },\n            [destination.droppableId]: {\n              ...destColumn,\n              items: destItems,\n            },\n          });\n\n          // calc remaining statements\n          let sortedStatements;\n          if (sourceColumn.id === \"cards\") {\n            sortedStatements =\n              statementsObj.totalStatements - sourceColumn.items.length + 1;\n            setPresortSortedStatementsNum(sortedStatements);\n            const ratio = sortedStatements / statementsObj.totalStatements;\n            const completedPercent = (ratio * 30).toFixed();\n\n            // update Progress Bar State\n            setProgressScoreAdditional(completedPercent);\n          }\n        } catch (error) {\n          console.log(error);\n        }\n      } else {\n        try {\n          // MOVING BETWEEN COLUMNS\n          const sourceCol = columns[source.droppableId];\n          const copiedItems = [...sourceCol.items];\n          const [removed] = copiedItems.splice(source.index, 1);\n          copiedItems.splice(destination.index, 0, removed);\n          setColumns({\n            ...columns,\n            [source.droppableId]: {\n              ...sourceCol,\n              items: copiedItems,\n            },\n          });\n        } catch (error) {\n          console.log(error);\n        }\n      }\n    },\n    [\n      configObj,\n      columnStatements,\n      setColumnStatements,\n      statementsObj,\n      setProgressScoreAdditional,\n    ]\n  ); // END DRAG-END\n\n  useEffect(() => {\n    const handleKeyUp = (event) => {\n      let target;\n      if (event.key === \"1\" || event.key === 1) {\n        target = \"neg\";\n      } else if (event.key === \"2\" || event.key === 2) {\n        target = \"neutral\";\n      } else if (event.key === \"3\" || event.key === 3) {\n        target = \"pos\";\n      } else {\n        return;\n      }\n\n      if (columns.cards.items.length > 0) {\n        let source = columns.cards.items[0].id;\n        const results = {\n          draggableId: source,\n          type: \"DEFAULT\",\n          source: {\n            index: 0,\n            droppableId: \"cards\",\n          },\n          reason: \"DROP\",\n          mode: \"FLUID\",\n          destination: {\n            droppableId: target,\n            index: 0,\n          },\n          combine: null,\n        };\n\n        onDragEnd(results, columns, setColumns);\n      }\n    }; // end keyup\n\n    window.addEventListener(\"keyup\", handleKeyUp);\n\n    return () => window.removeEventListener(\"keyup\", handleKeyUp);\n  }, [onDragEnd, columns]);\n\n  useEffect(() => {\n    let projectResultsObj = results;\n    projectResultsObj.npos = columns.pos.items.length;\n    projectResultsObj.nneu = columns.neutral.items.length;\n    projectResultsObj.nneg = columns.neg.items.length;\n    setResults(projectResultsObj);\n  }, [columns, results, setResults]);\n\n  useEffect(() => {\n    if (columns.cards.items.length === 0) {\n      setPresortFinished(true);\n      setTriggerPresortFinishedModal(true);\n    }\n  }, [\n    columns.cards.items.length,\n    setPresortFinished,\n    setTriggerPresortFinishedModal,\n  ]);\n\n  // RENDER COMPONENT\n\n  return (\n    <PresortGrid>\n      <div id=\"completionRatio\">\n        {presortSortedStatementsNum}/{statementsObj.totalStatements}\n      </div>\n      <DragDropContext\n        onDragEnd={(result) => onDragEnd(result, columns, setColumns)}\n      >\n        {Object.entries(columns).map(([columnId, column], index) => {\n          return (\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                alignItems: \"center\",\n              }}\n              key={columnId}\n              id={`${columnId}Div`}\n            >\n              <ColumnNamesDiv>{column.name}</ColumnNamesDiv>\n              <div style={{ margin: 4 }}>\n                <Droppable droppableId={columnId} key={columnId}>\n                  {(provided, snapshot) => {\n                    return (\n                      <div\n                        {...provided.droppableProps}\n                        ref={provided.innerRef}\n                        id={columnId}\n                        style={{\n                          background: snapshot.isDraggingOver\n                            ? \"lightblue\"\n                            : \"white\",\n                          padding: 4,\n                          width: 300,\n                        }}\n                      >\n                        {column.items.map((item, index) => {\n                          const statementHtml = ReactHtmlParser(\n                            `<div>${decodeHTML(item.statement)}</div>`\n                          );\n                          return (\n                            <Draggable\n                              key={item.id}\n                              draggableId={item.id}\n                              index={index}\n                              className=\"dragObject\"\n                            >\n                              {(provided, snapshot) => {\n                                return (\n                                  <DroppableContainer\n                                    ref={provided.innerRef}\n                                    {...provided.draggableProps}\n                                    {...provided.dragHandleProps}\n                                    style={{\n                                      userSelect: \"none\",\n                                      padding: 16,\n                                      margin: \"0 0 8px 0\",\n                                      height: cardHeight,\n                                      overflow: \"hidden\",\n                                      fontSize: cardFontSize,\n                                      filter: snapshot.isDragging\n                                        ? \"brightness(0.85)\"\n                                        : \"brightness(1.00)\",\n                                      backgroundColor: snapshot.isDragging\n                                        ? item.backgroundColor\n                                        : item.backgroundColor,\n                                      color: defaultFontColor,\n                                      ...provided.draggableProps.style,\n                                    }}\n                                  >\n                                    {statementHtml}\n                                  </DroppableContainer>\n                                );\n                              }}\n                            </Draggable>\n                          );\n                        })}\n                        {provided.placeholder}\n                      </div>\n                    );\n                  }}\n                </Droppable>\n              </div>\n            </div>\n          );\n        })}\n      </DragDropContext>\n    </PresortGrid>\n  );\n}\n\nexport default PresortDND;\n\nconst ColumnNamesDiv = styled.div`\n  font-size: 20px;\n  font-weight: bold;\n  padding-left: 3px;\n  padding-right: 3px;\n`;\n\nconst PresortGrid = styled.div`\n  margin-top: 75px;\n  margin-bottom: 55px;\n  display: grid;\n  height: calc(100vh-75);\n  grid-template-rows: 230px 15px 1fr;\n  grid-template-columns: 1fr 325px 325px 325px 1fr;\n  row-gap: 3px;\n  column-gap: 15px;\n`;\n\nconst DroppableContainer = styled.div`\n  background-color: \"#83cafe\";\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n  border-radius: 2px;\n  border: 1px solid #a8a8a8;\n`;\n","import React from \"react\";\nimport \"react-responsive-modal/styles.css\";\nimport { Modal } from \"react-responsive-modal\";\nimport styled from \"styled-components\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport decodeHTML from \"../../utilities/decodeHTML\";\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\nimport useStore from \"../../globalState/useStore\";\n\nconst getLangObj = (state) => state.langObj;\nconst getTriggerModalOpen = (state) => state.triggerPresortPreventNavModal;\nconst getSetTrigPrePrevNavModal = (state) =>\n  state.setTriggerPresortPreventNavModal;\n\nconst PresortPreventNavModal = () => {\n  // STATE\n  const langObj = useSettingsStore(getLangObj);\n  const triggerModalOpen = useStore(getTriggerModalOpen);\n  const setTriggerPresortPreventNavModal = useStore(getSetTrigPrePrevNavModal);\n\n  const modalHead = ReactHtmlParser(\n    decodeHTML(langObj.presortPreventNavModalHead)\n  );\n  const modalText = ReactHtmlParser(\n    decodeHTML(langObj.presortPreventNavModalText)\n  );\n\n  // const onOpenModal = () => setOpen(true);\n  const onCloseModal = () => {\n    setTriggerPresortPreventNavModal(false);\n  };\n\n  return (\n    <Modal\n      className=\"customModal\"\n      open={triggerModalOpen}\n      onClose={onCloseModal}\n      center\n    >\n      <ModalHeader>{modalHead}</ModalHeader>\n      <hr />\n      <ModalContent>{modalText}</ModalContent>\n    </Modal>\n  );\n};\n\nexport default PresortPreventNavModal;\n\nconst ModalHeader = styled.div`\n  font-size: 24px;\n  line-height: 1.42;\n  padding: 10px 0px 10px 0px;\n\n  hr {\n    color: black;\n  }\n`;\n\nconst ModalContent = styled.div`\n  margin-top: 15px;\n`;\n\n// react-responsive-modal-overlay\n","import React from \"react\";\nimport \"react-responsive-modal/styles.css\";\nimport { Modal } from \"react-responsive-modal\";\nimport styled from \"styled-components\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport decodeHTML from \"../../utilities/decodeHTML\";\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\nimport useStore from \"../../globalState/useStore\";\n\nconst getLangObj = (state) => state.langObj;\nconst getTriggerModal = (state) => state.triggerPresortFinishedModal;\nconst getSetTriggerModal = (state) => state.setTriggerPresortFinishedModal;\n\nconst PresortFinishedModal = () => {\n  // STATE\n  const langObj = useSettingsStore(getLangObj);\n  const triggerModal = useStore(getTriggerModal);\n  const setTriggerModal = useStore(getSetTriggerModal);\n\n  const loginHelpModalHead = ReactHtmlParser(\n    decodeHTML(langObj.presortFinishedModalHead)\n  );\n  const loginHelpModalText = ReactHtmlParser(\n    decodeHTML(langObj.presortFinishedModalText)\n  );\n\n  // const onOpenModal = () => setOpen(true);\n  const onCloseModal = () => {\n    setTriggerModal(false);\n  };\n\n  return (\n    <Modal\n      className=\"customModal\"\n      open={triggerModal}\n      onClose={onCloseModal}\n      center\n    >\n      <ModalHeader>{loginHelpModalHead}</ModalHeader>\n      <hr />\n      <ModalContent>{loginHelpModalText}</ModalContent>\n    </Modal>\n  );\n};\n\nexport default PresortFinishedModal;\n\nconst ModalHeader = styled.div`\n  font-size: 24px;\n  line-height: 1.42;\n  padding: 10px 0px 10px 0px;\n\n  hr {\n    color: black;\n  }\n`;\n\nconst ModalContent = styled.div`\n  margin-top: 15px;\n`;\n\n// react-responsive-modal-overlay\n","import React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport decodeHTML from \"../../utilities/decodeHTML\";\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\nimport useStore from \"../../globalState/useStore\";\n\nconst getLangObj = (state) => state.langObj;\nconst getConfigObj = (state) => state.configObj;\nconst getSetCurrentPage = (state) => state.setCurrentPage;\n\nconst PresortIsComplete = () => {\n  // STATE\n  const langObj = useSettingsStore(getLangObj);\n  const configObj = useSettingsStore(getConfigObj);\n  const setCurrentPage = useStore(getSetCurrentPage);\n\n  const headerBarColor = configObj.headerBarColor;\n  const mainText = ReactHtmlParser(decodeHTML(langObj.stepCompleteMessage));\n  const titleBarText = ReactHtmlParser(decodeHTML(langObj.titleBarText));\n\n  useEffect(() => {\n    setCurrentPage(\"presort\");\n  }, [setCurrentPage]);\n\n  return (\n    <React.Fragment>\n      <SortTitleBar background={headerBarColor}>{titleBarText}</SortTitleBar>\n      <ContainerDiv>\n        <ContentDiv>{mainText}</ContentDiv>\n      </ContainerDiv>\n    </React.Fragment>\n  );\n};\n\nexport default PresortIsComplete;\n\nconst SortTitleBar = styled.div`\n  width: calc(100vw-4px);\n  padding-left: 1.5vw;\n  padding-right: 1.5vw;\n  padding-top: 5px;\n  min-height: 50px;\n  background-color: ${(props) => props.background};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: white;\n  font-weight: bold;\n  font-size: 28px;\n`;\n\nconst ContainerDiv = styled.div`\n  display: flex;\n  min-height: 800px;\n  width: calc(100vw-4px);\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst ContentDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  line-height: 1.2em;\n  width: 85vw;\n  font-size: 1.35em;\n  padding: 25px;\n  align-self: center;\n`;\n","import React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport decodeHTML from \"../../utilities/decodeHTML\";\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\nimport useStore from \"../../globalState/useStore\";\n\nconst getLangObj = (state) => state.langObj;\nconst getConfigObj = (state) => state.configObj;\nconst getSetCurrentPage = (state) => state.setCurrentPage;\n\nconst PleaseLogInFirst = () => {\n  // STATE\n  const langObj = useSettingsStore(getLangObj);\n  const configObj = useSettingsStore(getConfigObj);\n  const setCurrentPage = useStore(getSetCurrentPage);\n\n  const headerBarColor = configObj.headerBarColor;\n  const mainText = ReactHtmlParser(decodeHTML(langObj.logInFirst));\n  const titleBarText = ReactHtmlParser(decodeHTML(langObj.titleBarText));\n\n  useEffect(() => {\n    setCurrentPage(\"presort\");\n  }, [setCurrentPage]);\n\n  return (\n    <React.Fragment>\n      <SortTitleBar background={headerBarColor}>{titleBarText}</SortTitleBar>\n      <ContainerDiv>\n        <ContentDiv>{mainText}</ContentDiv>\n      </ContainerDiv>\n    </React.Fragment>\n  );\n};\n\nexport default PleaseLogInFirst;\n\nconst SortTitleBar = styled.div`\n  width: calc(100vw-4px);\n  padding-left: 1.5vw;\n  padding-right: 1.5vw;\n  padding-top: 5px;\n  min-height: 50px;\n  background-color: ${(props) => props.background};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: white;\n  font-weight: bold;\n  font-size: 28px;\n`;\n\nconst ContainerDiv = styled.div`\n  display: flex;\n  min-height: 800px;\n  width: calc(100vw-4px);\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst ContentDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  line-height: 1.2em;\n  width: 85vw;\n  font-size: 1.35em;\n  padding: 25px;\n  align-self: center;\n`;\n","import React, { useEffect } from \"react\";\nimport cloneDeep from \"lodash/cloneDeep\";\nimport PresortModal from \"./PresortModal\";\nimport PresortDND from \"./PresortDND\";\nimport calculateTimeOnPage from \"../../utilities/calculateTimeOnPage\";\nimport styled from \"styled-components\";\nimport PresortPreventNavModal from \"./PresortPreventNavModal\";\nimport PresortFinishedModal from \"./PresortFinishedModal\";\nimport PresortIsComplete from \"./PresortIsComplete\";\nimport PleaseLogInFirst from \"./PleaseLogInFirst\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport decodeHTML from \"../../utilities/decodeHTML\";\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\nimport useStore from \"../../globalState/useStore\";\n\nconst getLangObj = (state) => state.langObj;\nconst getConfigObj = (state) => state.configObj;\nconst getStatementsObj = (state) => state.statementsObj;\nconst getCardFontSize = (state) => state.cardFontSize;\nconst getIsLoggedIn = (state) => state.isLoggedIn;\nconst getSetCurrentPage = (state) => state.setCurrentPage;\nconst getSetProgressScore = (state) => state.setProgressScore;\nconst getPresortNoReturn = (state) => state.presortNoReturn;\nconst getResults = (state) => state.results;\nconst getSetResults = (state) => state.setResults;\nconst getResetColumnStatements = (state) => state.resetColumnStatements;\nconst getSetDisplayNextButton = (state) => state.setDisplayNextButton;\n\nconst PresortPage = (props) => {\n  // STATE\n  const langObj = useSettingsStore(getLangObj);\n  const configObj = useSettingsStore(getConfigObj);\n  const statementsObj = useSettingsStore(getStatementsObj);\n  let cardFontSize = useStore(getCardFontSize);\n  const isLoggedIn = useSettingsStore(getIsLoggedIn);\n  const setCurrentPage = useStore(getSetCurrentPage);\n  const setProgressScore = useStore(getSetProgressScore);\n  const presortNoReturn = useStore(getPresortNoReturn);\n  const results = useStore(getResults);\n  const setResults = useStore(getSetResults);\n  const resetColumnStatements = useSettingsStore(getResetColumnStatements);\n  const setDisplayNextButton = useStore(getSetDisplayNextButton);\n\n  // set next button display\n  setDisplayNextButton(true);\n\n  useEffect(() => {\n    setTimeout(() => {\n      setCurrentPage(\"presort\");\n      setProgressScore(20);\n    }, 200);\n  }, [setCurrentPage, setProgressScore]);\n\n  // calc time on page\n  useEffect(() => {\n    let startTime = Date.now();\n    return () => {\n      const updatedResults = calculateTimeOnPage(\n        startTime,\n        \"presortPage\",\n        \"presortPage\",\n        results\n      );\n      setResults(updatedResults);\n    };\n  }, [results, setResults]);\n\n  let columnStatements = statementsObj.columnStatements;\n\n  if (configObj.firebaseOrLocal === \"local\") {\n    columnStatements = JSON.parse(JSON.stringify(resetColumnStatements));\n  }\n\n  const headerBarColor = configObj.headerBarColor;\n  const initialScreen = configObj.initialScreen;\n  const statements = cloneDeep(columnStatements.statementList);\n\n  const titleBarText = ReactHtmlParser(decodeHTML(langObj.titleBarText));\n\n  // early return if log-in required and not logged in\n  if (initialScreen !== \"anonymous\") {\n    if (isLoggedIn === false) {\n      return <PleaseLogInFirst />;\n    }\n  }\n  // early return of presort finished message if complete\n  if (presortNoReturn) {\n    return <PresortIsComplete />;\n  }\n\n  return (\n    <React.Fragment>\n      <PresortModal />\n      <PresortFinishedModal />\n      <PresortPreventNavModal />\n      <SortTitleBar background={headerBarColor}>{titleBarText}</SortTitleBar>\n      <PresortDND statements={statements} cardFontSize={cardFontSize} />\n    </React.Fragment>\n  );\n};\n\nexport default PresortPage;\n\nconst SortTitleBar = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100vw;\n  padding-left: 1.5vw;\n  padding-right: 1.5vw;\n  min-height: 50px;\n  background-color: ${(props) => props.background};\n  color: white;\n  font-weight: bold;\n  font-size: 28px;\n  position: fixed;\n  z-index: 999;\n  top: 0;\n`;\n","import useStore from \"../../globalState/useStore\";\n\nconst checkForColumnOverload = (\n  columnLengthCheckArray,\n  forcedSorts,\n  totalStatements,\n  qSortPattern,\n  qSortHeaderNumbers\n) => {\n  if (forcedSorts === true) {\n    const tempArray = [];\n\n    // iterate through array and check if col length > design length\n    columnLengthCheckArray.forEach(function (item, index) {\n      if (item > +qSortPattern[index]) {\n        tempArray.push(qSortHeaderNumbers[index]);\n        useStore.setState({ sortCompleted: false });\n        useStore.setState({ overloadedColumn: qSortHeaderNumbers[index] });\n        useStore.setState({ hasOverloadedColumn: true });\n        useStore.setState({ isSortingCards: false });\n        return null;\n      }\n    });\n    // if no overload - set overload to no and is sorting to true\n    if (tempArray.length === 0) {\n      useStore.setState({ hasOverloadedColumn: false });\n      useStore.setState({ isSortingCards: true });\n    }\n  }\n\n  const numSortedStatements = columnLengthCheckArray.reduce(function (\n    acc,\n    val\n  ) {\n    return acc + val;\n  });\n\n  useStore.setState({ numSortedStatements: numSortedStatements });\n\n  if (forcedSorts === false) {\n    if (numSortedStatements === totalStatements) {\n      useStore.setState({ sortCompleted: true });\n      useStore.setState({ isSortingCards: false });\n    } else {\n      useStore.setState({ sortCompleted: false });\n      useStore.setState({ isSortingCards: true });\n    }\n  }\n};\n\nexport default checkForColumnOverload;\n","import isEqual from \"lodash/isEqual\";\nimport checkForColumnOverload from \"./checkForColumnOverload\";\nimport useStore from \"../../globalState/useStore\";\n\n/**\n * Moves an item from one list to another list.\n */\nconst move = (\n  sourceListArray,\n  destinationListArray,\n  droppableSource,\n  droppableDestination,\n  columnStatements,\n  totalStatements,\n  sortCharacteristics,\n  allowUnforcedSorts,\n  qSortHeaderNumbers\n) => {\n  const { qSortPattern, qSortHeaders, forcedSorts } = sortCharacteristics;\n\n  const destClone = [...destinationListArray];\n\n  // to splice in and out\n  const [removed] = sourceListArray.splice(droppableSource.index, 1);\n  destinationListArray.splice(droppableDestination.index, 0, removed);\n\n  sourceListArray[droppableSource.droppableId] = [removed];\n  destinationListArray[droppableDestination.droppableId] = [...destClone];\n\n  // to assign to object and register results to state\n  const result = {};\n  result[droppableSource.droppableId] = [...sourceListArray];\n  result[droppableDestination.droppableId] = [...destinationListArray];\n\n  // to save to state and auto update lists\n  useStore.setState({ result: result });\n\n  // for sort complete checking\n  const columnLengthCheckArray = [];\n  for (let i = 0; i < qSortHeaders.length; i++) {\n    const currentColumnLength =\n      columnStatements.vCols[`column${qSortHeaders[i]}`];\n    columnLengthCheckArray.push(currentColumnLength.length);\n  }\n  // sort mutates, so clone\n  const qSortPatternClone = [...qSortPattern];\n  const overloadArrayCheck = [...columnLengthCheckArray];\n  const match = isEqual(columnLengthCheckArray, qSortPatternClone);\n\n  checkForColumnOverload(\n    overloadArrayCheck,\n    forcedSorts,\n    totalStatements,\n    qSortPattern,\n    qSortHeaderNumbers\n  );\n\n  // to disable checking if unforced Q sorts allowed\n  if (allowUnforcedSorts === false) {\n    // if the sort pattern matches default sort pattern\n    if (match === true) {\n      useStore.setState({ hasOverloadedColumn: false });\n      useStore.setState({ sortCompleted: true });\n      console.log(\"sorting complete\");\n      useStore.setState({ isSortingCards: false });\n      useStore.setState({ isSortingFinished: true });\n    } else {\n      useStore.setState({ hasOverloadedColumn: true });\n      useStore.setState({ sortCompleted: false });\n      useStore.setState({ isSortingCards: true });\n      if (columnStatements.statementList.length === 0) {\n        useStore.setState({ isSortingFinished: true });\n      } else {\n        useStore.setState({ isSortingFinished: false });\n      }\n    }\n  } else {\n    // for unforced sorts - is source array empty?\n    if (sourceListArray.length === 0) {\n      useStore.setState({ hasOverloadedColumn: false });\n      useStore.setState({ sortCompleted: true });\n      console.log(\"sorting complete\");\n      useStore.setState({ isSortingCards: false });\n      useStore.setState({ isSortingFinished: true });\n    } else {\n      useStore.setState({ sortCompleted: false });\n      useStore.setState({ isSortingCards: true });\n      useStore.setState({ hasOverloadedColumn: false });\n      useStore.setState({ isSortingFinished: false });\n    }\n  }\n  return null;\n};\n\nexport default move;\n","import useStore from \"../../globalState/useStore\";\n\n// to reorder within the same column\nconst reorder = (\n  columnToBeReordered,\n  startIndex,\n  endIndex,\n  columnStatements\n) => {\n  try {\n    // no re-ordering of statements list / it's arranged by flexbox \"order\" css property\n    if (columnToBeReordered === \"statements\") {\n      return;\n    }\n    // let list = state.getState(columnList);\n    const list = columnStatements.vCols[columnToBeReordered];\n    const result = [...list]; // Array.from(list);\n    const [removed] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n\n    columnStatements.vCols[columnToBeReordered] = [...result];\n\n    useStore.setState({ columnStatements: columnStatements });\n\n    return null;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport default reorder;\n","const getItemStyle = (\n  isDragging,\n  draggableStyle,\n  cardWidth,\n  cardHeight,\n  cardFontSize,\n  cardColor,\n  greenCardColor,\n  yellowCardColor,\n  pinkCardColor,\n  fontColor\n) => {\n  let newCardColor;\n  if (cardColor === \"greenSortCard\") {\n    newCardColor = greenCardColor;\n  }\n  if (cardColor === \"yellowSortCard\") {\n    newCardColor = yellowCardColor;\n  }\n  if (cardColor === \"pinkSortCard\") {\n    newCardColor = pinkCardColor;\n  }\n\n  return {\n    // some basic styles to make the items look a bit nicer\n    userSelect: \"none\",\n    padding: `0 2px 0 2px`,\n    margin: `0 2px 8px 3px`,\n    lineHeight: `1.3em`,\n    fontSize: cardFontSize,\n    color: fontColor,\n    height: cardHeight,\n    width: cardWidth,\n    borderRadius: `5px`,\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    border: `1px solid #a8a8a8`,\n    filter: isDragging ? \"brightness(0.85)\" : \"brightness(1.00)\",\n    zIndex: \"-1\",\n\n    // transitionDelay: \"0.2s\",\n    // change background colour if dragging  (#e6bbad or #FFB266)\n    textAlign: `center`,\n    background: isDragging ? newCardColor : newCardColor,\n\n    // styles we need to apply on draggables\n    ...draggableStyle,\n  };\n};\n\nexport default getItemStyle;\n","import useStore from \"../../globalState/useStore\";\n\n// card and column styling\nconst getListStyle = (\n  isDraggingOver,\n  props,\n  forcedSorts,\n  columnWidth,\n  columnColor,\n  cardHeight\n) => {\n  // forcedSorts is \"warnOverloadedColumn\" in configObj\n  let isUnderMaxCards;\n  if (forcedSorts === true) {\n    isUnderMaxCards = props.columnStatementsArray.length <= props.maxCards;\n  } else {\n    isUnderMaxCards = true;\n  }\n\n  // to set highlighting for column headers\n  if (isDraggingOver) {\n    useStore.setState({ draggingOverColumnId: props.columnId });\n  }\n\n  return {\n    background: isDraggingOver\n      ? \"lightblue\"\n      : isUnderMaxCards\n      ? columnColor\n      : \"orange\",\n    padding: `3px 0.5px 0px 3.5px`,\n\n    minWidth: columnWidth + 13,\n    marginTop: 0,\n    marginRight: 0,\n    minHeight: props.minHeight - 10,\n    marginBottom: cardHeight + 80,\n    borderRadius: `2px`,\n    outline: isUnderMaxCards ? \"1px solid #d8d8d8\" : \"2px dashed black\",\n    outlineOffset: \"-1px\",\n  };\n};\n\nexport default getListStyle;\n\n// border: 'solid 1px #ededed',\n","import React from \"react\";\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\nimport styled from \"styled-components\";\nimport getItemStyle from \"./getItemStyle\";\nimport getListStyle from \"./getListStyle\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport decodeHTML from \"../../utilities/decodeHTML\";\nimport useStore from \"../../globalState/useStore\";\n\n/* eslint react/prop-types: 0 */\n\nclass SortColumn extends React.Component {\n  render() {\n    const {\n      forcedSorts,\n      columnWidth,\n      cardHeight,\n      columnId,\n      sortValue,\n      columnStatementsArray,\n      columnColor,\n      cardFontSize,\n      greenCardColor,\n      yellowCardColor,\n      pinkCardColor,\n      fontColor,\n    } = this.props;\n\n    // had to push column sort value to state because didn't want to edit dnd library result object\n    // was't able to just pass it as a prop\n    return (\n      <ContainerDiv>\n        <Droppable droppableId={columnId} direction=\"vertical\">\n          {(provided, snapshot) => {\n            if (snapshot.isDraggingOver) {\n              useStore.setState({ draggingOverColumnId: columnId });\n              useStore.setState({ currentSortValue: sortValue });\n            }\n            return (\n              <div\n                ref={provided.innerRef}\n                style={getListStyle(\n                  snapshot.isDraggingOver,\n                  this.props,\n                  forcedSorts,\n                  columnWidth,\n                  columnColor,\n                  cardHeight\n                )}\n              >\n                {columnStatementsArray.map((item, index) => {\n                  const statementHtml = ReactHtmlParser(\n                    `<div>${decodeHTML(item.statement)}</div>`\n                  );\n                  return (\n                    <Draggable\n                      key={item.id}\n                      draggableId={item.id}\n                      cardColor={item.cardColor}\n                      index={index}\n                    >\n                      {(provided, snapshot) => (\n                        <div\n                          ref={provided.innerRef}\n                          {...provided.draggableProps}\n                          {...provided.dragHandleProps}\n                          style={getItemStyle(\n                            snapshot.isDragging,\n                            provided.draggableProps.style,\n                            columnWidth,\n                            cardHeight,\n                            cardFontSize,\n                            `${item.cardColor}`,\n                            greenCardColor,\n                            yellowCardColor,\n                            pinkCardColor,\n                            fontColor\n                          )}\n                        >\n                          {statementHtml}\n                        </div>\n                      )}\n                    </Draggable>\n                  );\n                })}\n                {provided.placeholder}\n              </div>\n            );\n          }}\n        </Droppable>\n      </ContainerDiv>\n    );\n  }\n}\n\nexport default SortColumn;\n\n/*\nconst HeaderDiv = styled.div`\n  background: ${(props) => props.color};\n  text-align: center;\n  border-bottom: 2px solid black;\n  min-width: 50px;\n  border-radius: 2px;\n  margin-bottom: 1px;\n  font-weight: bold;\n  font-size: 25px;\n  border-right: 1px solid #d8d8d8;\n  border-left: 1px solid #d8d8d8;\n`;\n*/\n\nconst ContainerDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n","// horizontal column styling\nconst getListStyleHori = (isDraggingOver, horiCardMinHeight) => ({\n  background: isDraggingOver ? \"lightblue\" : \"#e4e4e4\",\n  display: \"flex\",\n  width: \"100vw\",\n  paddingRight: \"20px\",\n  minHeight: horiCardMinHeight,\n  overflowX: `scroll`,\n});\n\nexport default getListStyleHori;\n","// card styling\nconst getItemStyleHori = (\n  isDragging,\n  draggableStyle,\n  sortValue,\n  cardColor,\n  columnWidth,\n  cardHeight,\n  cardFontSize,\n  greenCardColor,\n  yellowCardColor,\n  pinkCardColor,\n  fontColor\n) => {\n  let newSortValue = sortValue;\n  let newCardColor = cardColor;\n\n  // puts un-evaluated cards at the end of the list and set default color\n  if (isNaN(+newSortValue)) {\n    newSortValue = 999;\n  }\n\n  // set background color according to user passed in values\n  if (newCardColor === \"undefined\" || newCardColor === \"yellowSortCard\") {\n    newCardColor = yellowCardColor;\n  }\n  if (newCardColor === \"pinkSortCard\") {\n    newCardColor = pinkCardColor;\n  }\n  if (newCardColor === \"greenSortCard\") {\n    newCardColor = greenCardColor;\n  }\n\n  return {\n    userSelect: \"none\",\n    WebkitUserSelect: \"none\",\n    lineHeight: `1.3em`,\n    fontSize: cardFontSize,\n    color: fontColor,\n    height: cardHeight,\n    minWidth: columnWidth,\n    maxWidth: columnWidth,\n    paddingRight: 2,\n    paddingLeft: 2,\n    borderRadius: `5px`,\n    touchAction: \"manipulation\",\n    marginBottom: 5,\n    marginTop: 5,\n    marginRight: `2px`,\n    marginLeft: `2px`,\n    display: \"flex\",\n    alignItems: \"center\",\n    textAlign: `center`,\n    order: newSortValue,\n    filter: isDragging ? \"brightness(0.85)\" : \"brightness(1.00)\",\n    // change background color if dragging, otherwise pre-sort value color\n    background: isDragging ? newCardColor : newCardColor,\n    // styles to apply on draggables\n    ...draggableStyle,\n  };\n};\n\nexport default getItemStyleHori;\n","const calculateDragResults = (\n  outcome,\n  totalStatements,\n  results,\n  sortFinishedModalHasBeenShown,\n  sortGridResults\n) => {\n  try {\n    let isSortingFinished = false;\n    let triggerSortingFinishedModal = false;\n\n    if (outcome.destination !== null) {\n      // derive sortValue from droppableId\n      const replaceColumn = /column/gi;\n      const replaceN = /N/gi;\n      let sortValue1 = outcome.destination.droppableId;\n      sortValue1 = sortValue1.replace(replaceColumn, \"\");\n      sortValue1 = sortValue1.replace(replaceN, \"-\");\n      const sortValue = parseInt(sortValue1, 10);\n\n      // assign key (like \"s1\") and value (sortValue like \"-4\")\n      sortGridResults[outcome.draggableId] = sortValue;\n\n      // create results string\n      const testForCompleteArray = Object.keys(sortGridResults);\n      let catchNan = false;\n\n      // test if finished\n      if (testForCompleteArray.length === totalStatements) {\n        let resultsText = \"\";\n        for (let i = 0; i < totalStatements; i++) {\n          let key = `s${i + 1}`;\n          let newValue = sortGridResults[key];\n          if (isNaN(newValue)) {\n            catchNan = true;\n          }\n          resultsText += `${newValue}|`;\n        } // loop end\n\n        if (catchNan === true) {\n          // card in footer - sort not complete\n          isSortingFinished = false;\n        } else {\n          // if sort is complete\n          // process string to remove trailing bar\n          isSortingFinished = true;\n\n          if (resultsText.charAt(resultsText.length - 1) === \"|\") {\n            resultsText = resultsText.substring(0, resultsText.length - 1);\n          }\n\n          results.sort = resultsText;\n\n          if (sortFinishedModalHasBeenShown === false) {\n            sortFinishedModalHasBeenShown = true;\n            triggerSortingFinishedModal = true;\n          }\n        }\n      }\n\n      const returnObj = {};\n      returnObj.isSortingFinished = isSortingFinished;\n      returnObj.results = results;\n      returnObj.sortFinishedModalHasBeenShown = sortFinishedModalHasBeenShown;\n      returnObj.triggerSortingFinishedModal = triggerSortingFinishedModal;\n      returnObj.sortGridResults = sortGridResults;\n\n      return returnObj;\n    }\n  } catch (error) {\n    console.error(error);\n    console.log(\"there was an error in calculateDragResults\");\n  }\n};\n\nexport default calculateDragResults;\n","import React, { useState } from \"react\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport styled from \"styled-components\";\nimport move from \"./move\";\nimport reorder from \"./reorder\";\nimport SortColumn from \"./SortColumn\";\nimport getListStyleHori from \"./getListStyleHori\";\nimport getItemStyleHori from \"./getItemStyleHori\";\nimport calculateDragResults from \"./calculateDragResults\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport decodeHTML from \"../../utilities/decodeHTML\";\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\nimport useStore from \"../../globalState/useStore\";\n\n/* eslint react/prop-types: 0 */\n\nconst getConfigObj = (state) => state.configObj;\nconst getMapObj = (state) => state.mapObj;\nconst getStatementsObj = (state) => state.statementsObj;\nconst getColumnStatements = (state) => state.columnStatements;\nconst getSetColState = (state) => state.setColumnStatements;\nconst getSetIsSortingCards = (state) => state.setIsSortingCards;\nconst getSetSortCompleted = (state) => state.setSortCompleted;\nconst getSetProgScoreAddSort = (state) => state.setProgressScoreAdditionalSort;\nconst getSortCharacteristics = (state) => state.sortCharacteristics;\nconst getSetSortCharacteristics = (state) => state.setSortCharacteristics;\nlet getCardHeight = (state) => state.cardHeight;\nconst getSetCardHeight = (state) => state.setCardHeight;\nconst getSetColumnWidth = (state) => state.setColumnWidth;\nconst getResults = (state) => state.results;\nconst getSortFinModalHasBeenShown = (state) =>\n  state.sortFinishedModalHasBeenShown;\nconst getSortGridResults = (state) => state.sortGridResults;\nconst getSetIsSortingFinished = (state) => state.setIsSortingFinished;\nconst getSetResults = (state) => state.setResults;\nconst getSetSortFinModal = (state) => state.setSortFinishedModalHasBeenShown;\nconst getSetTriggerSortingFinModal = (state) =>\n  state.setTriggerSortingFinishedModal;\nconst getSetSortGridResults = (state) => state.setSortGridResults;\n\nconst SortGrid = (props) => {\n  // STATE\n  const configObj = useSettingsStore(getConfigObj);\n  const mapObj = useSettingsStore(getMapObj);\n  const statementsObj = useSettingsStore(getStatementsObj);\n  const columnStatements = useSettingsStore(getColumnStatements);\n  const setColumnStatements = useSettingsStore(getSetColState);\n  const setIsSortingCards = useStore(getSetIsSortingCards);\n  const setSortCompleted = useStore(getSetSortCompleted);\n  const setProgressScoreAdditionalSort = useStore(getSetProgScoreAddSort);\n  const sortCharacteristics = useStore(getSortCharacteristics);\n  const setSortCharacteristics = useStore(getSetSortCharacteristics);\n  let cardHeight = useStore(getCardHeight);\n  const setCardHeight = useStore(getSetCardHeight);\n  const setColumnWidth = useStore(getSetColumnWidth);\n  const results = useStore(getResults);\n  const sortFinishedModalHasBeenShown = useStore(getSortFinModalHasBeenShown);\n  const sortGridResults = useStore(getSortGridResults);\n  const setIsSortingFinished = useStore(getSetIsSortingFinished);\n  const setResults = useStore(getSetResults);\n  const setSortFinishedModalHasBeenShown = useStore(getSetSortFinModal);\n  const setTriggerSortingFinishedModal = useStore(getSetTriggerSortingFinModal);\n  const setSortGridResults = useStore(getSetSortGridResults);\n\n  const greenCardColor = configObj.greenCardColor;\n  const yellowCardColor = configObj.yellowCardColor;\n  const pinkCardColor = configObj.pinkCardColor;\n\n  // setMinCardHeight is boolean\n  const setMinCardHeight = configObj.setMinCardHeight;\n  const minCardHeight = +configObj.minCardHeight;\n\n  // MAP out SORT COLUMNS component before render\n  // code inside render so that column lists update automatically\n  const qSortHeaders = [...mapObj.qSortHeaders];\n  const qSortHeaderNumbers = [...mapObj.qSortHeaderNumbers];\n\n  // column colors\n  const columnColorsArray = [...mapObj.columnColorsArray];\n  const columnHeadersColorsArray = [...mapObj.columnHeadersColorsArray];\n  const qSortPattern = [...mapObj.qSortPattern];\n\n  // force updates after dragend - do not delete\n  const [value, setValue] = useState(0); // integer state\n\n  // fire move and re-order functions\n  const onDragEnd = (result) => {\n    try {\n      /*\n    example result object:\n    result {\"draggableId\":\"s1\",\"type\":\"DEFAULT\",\n    \"source\":{\"droppableId\":\"statements\",\"index\":0},\n    \"destination\":{\"droppableId\":\"column1\",\"index\":0},\n    \"reason\":\"DROP\"}\n    */\n\n      const totalStatements = statementsObj.totalStatements;\n\n      const manageDragResults = calculateDragResults(\n        { ...result },\n        totalStatements,\n        results,\n        sortFinishedModalHasBeenShown,\n        sortGridResults\n      );\n\n      setIsSortingFinished(manageDragResults.sortFinished);\n      setResults(manageDragResults.results);\n      setSortFinishedModalHasBeenShown(\n        manageDragResults.sortFinishedModalHasBeenShown\n      );\n      setTriggerSortingFinishedModal(\n        manageDragResults.triggerSortingFinishedModal\n      );\n      setSortGridResults(manageDragResults.sortGridResults);\n\n      // source and destination are objects\n      const { source, destination } = result;\n\n      // dropped outside the list\n      if (!destination) {\n        return;\n      }\n      // if moving inside the same column\n      if (source.droppableId === destination.droppableId) {\n        reorder(\n          source.droppableId,\n          source.index,\n          destination.index,\n          columnStatements\n        );\n\n        // force component update\n        const newValue = value + 1;\n        setValue(newValue);\n      } else {\n        // moving to another column\n\n        // source.droppableId give orgin id => \"statements\" or \"columnN1\"\n        // sourceList is cards in that origin\n        // gather data to send to move function\n        let sourceListArray;\n        let destinationListArray;\n        if (source.droppableId === \"statements\") {\n          sourceListArray = columnStatements.statementList;\n        } else {\n          sourceListArray = columnStatements.vCols[source.droppableId];\n        }\n        if (destination.droppableId === \"statements\") {\n          destinationListArray = columnStatements.statementList;\n        } else {\n          destinationListArray =\n            columnStatements.vCols[destination.droppableId];\n        }\n        const droppableSource = source;\n        const droppableDestination = destination;\n        const totalStatements = +configObj.totalStatements;\n\n        const sortCharacterisiticsPrep = {};\n        sortCharacterisiticsPrep.qSortPattern = [...mapObj.qSortPattern];\n        sortCharacterisiticsPrep.qSortHeaders = [...mapObj.qSortHeaders];\n        sortCharacterisiticsPrep.forcedSorts = configObj.warnOverloadedColumn;\n        sortCharacterisiticsPrep.qSortHeaderNumbers = [\n          ...mapObj.qSortHeaderNumbers,\n        ];\n        const sortCharacteristics = sortCharacterisiticsPrep;\n        const allowUnforcedSorts = configObj.allowUnforcedSorts;\n\n        move(\n          sourceListArray,\n          destinationListArray,\n          droppableSource,\n          droppableDestination,\n          columnStatements,\n          totalStatements,\n          sortCharacteristics,\n          allowUnforcedSorts,\n          qSortHeaderNumbers\n        );\n\n        // global state updates\n        setColumnStatements(columnStatements);\n\n        if (columnStatements.statementList.length === 0) {\n          setIsSortingCards(false);\n          setSortCompleted(true);\n        } else {\n          setIsSortingCards(true);\n          setSortCompleted(false);\n        }\n\n        // increment Progress Bar\n        const totalStatements2 = statementsObj.totalStatements;\n        const remainingStatements = columnStatements.statementList.length;\n        const numerator = totalStatements2 - remainingStatements;\n\n        const ratio = numerator / totalStatements2;\n        const completedPercent = (ratio * 30).toFixed();\n\n        // update Progress Bar State\n        setProgressScoreAdditionalSort(completedPercent);\n\n        // force component update\n        const newValue = value + 1;\n        setValue(newValue);\n      }\n      setSortCharacteristics(sortCharacteristics);\n    } catch (error) {\n      console.log(error);\n    }\n  }; // end of dragEnd helper function\n\n  // get user settings\n  const cardFontSize = props.cardFontSize;\n  const fontColor = props.fontColor;\n\n  // just the hori container size, not card size\n  let horiCardMinHeight = 50;\n\n  // maximize cardHeight on first mount using default 0 in globalState\n  const maxNumCardsInCol = Math.max(...qSortPattern);\n  if (+cardHeight === 0) {\n    cardHeight = +(\n      (props.dimensions.height - 320) /\n      maxNumCardsInCol\n    ).toFixed();\n    if (setMinCardHeight === true || setMinCardHeight === \"true\") {\n      setCardHeight(minCardHeight);\n    } else {\n      setCardHeight(+cardHeight);\n    }\n  }\n\n  // adjust width by q sort design\n  // todo - find better adjustment process\n  let visibleWidthAdjust;\n\n  // less than -3\n  if (qSortPattern.length > 0) {\n    visibleWidthAdjust = 70;\n  }\n  // -3 to +3\n  if (qSortPattern.length > 6) {\n    visibleWidthAdjust = 96;\n  }\n  // -4 to +4\n  if (qSortPattern.length > 8) {\n    visibleWidthAdjust = 120;\n  }\n  // -5 to +5\n  if (qSortPattern.length > 10) {\n    visibleWidthAdjust = 145;\n  }\n  // -6 to +6\n  if (qSortPattern.length > 12) {\n    visibleWidthAdjust = 170;\n  }\n\n  // set dynamic width on page load on reload\n  const columnWidth =\n    (props.dimensions.width - visibleWidthAdjust) / qSortPattern.length;\n\n  // send column width to global state\n  setTimeout(() => setColumnWidth(columnWidth), 0);\n\n  // pull data from localStorage\n  const statements = columnStatements.statementList;\n\n  // setup grid columns\n  const columns = qSortHeaders.map((value, index, highlightedColHeader) => {\n    const columnId = `column${qSortHeaders[index]}`;\n    const sortValue = qSortHeaderNumbers[index];\n    const columnColor = columnColorsArray[index];\n\n    return (\n      <SortColumn\n        key={columnId}\n        minHeight={qSortPattern[index] * (+cardHeight + 8) + 15}\n        maxCards={qSortPattern[index]}\n        columnId={columnId}\n        columnStatementsArray={columnStatements.vCols[columnId]}\n        forcedSorts={configObj.warnOverloadedColumn}\n        columnWidth={columnWidth}\n        cardHeight={+cardHeight}\n        sortValue={sortValue}\n        columnColor={columnColor}\n        cardFontSize={cardFontSize}\n        qSortHeaderNumber={qSortHeaderNumbers[index]}\n        columnHeadersColor={columnHeadersColorsArray[index]}\n        greenCardColor={greenCardColor}\n        yellowCardColor={yellowCardColor}\n        pinkCardColor={pinkCardColor}\n        fontColor={fontColor}\n      />\n    );\n  }); // end map of sort columns\n\n  // returning main content => horizontal feeder\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <div className=\"rootDiv\">\n        {columns}\n        <SortFooterDiv>\n          <div className=\"cardSlider\">\n            <Droppable droppableId=\"statements\" direction=\"horizontal\">\n              {(provided, snapshot) => (\n                <div\n                  ref={provided.innerRef}\n                  style={getListStyleHori(\n                    snapshot.isDraggingOver,\n                    horiCardMinHeight\n                  )}\n                >\n                  {statements.map((item, index) => {\n                    const statementHtml = ReactHtmlParser(\n                      `<div>${decodeHTML(item.statement)}</div>`\n                    );\n                    return (\n                      <Draggable\n                        key={item.id}\n                        draggableId={item.id}\n                        index={index}\n                        sortValue={item.sortValue}\n                        cardColor={item.cardColor}\n                        className=\"droppableCards\"\n                      >\n                        {(provided, snapshot) => (\n                          <div\n                            className={`${item.cardColor}`}\n                            ref={provided.innerRef}\n                            {...provided.draggableProps}\n                            {...provided.dragHandleProps}\n                            style={getItemStyleHori(\n                              snapshot.isDragging,\n                              provided.draggableProps.style,\n                              `${item.sortValue}`,\n                              `${item.cardColor}`,\n                              columnWidth,\n                              cardHeight,\n                              cardFontSize,\n                              greenCardColor,\n                              yellowCardColor,\n                              pinkCardColor,\n                              fontColor\n                            )}\n                          >\n                            {statementHtml}\n                          </div>\n                        )}\n                      </Draggable>\n                    );\n                  })}\n                  {provided.placeholder}\n                </div>\n              )}\n            </Droppable>\n          </div>\n        </SortFooterDiv>\n      </div>\n    </DragDropContext>\n  );\n};\n\nexport default SortGrid;\n\nconst SortFooterDiv = styled.div`\n  flex-direction: row;\n  background: #e4e4e4;\n  position: fixed;\n  padding-right: 10px;\n  left: 0px;\n  bottom: 50px;\n  width: 100vw;\n  height: ${(props) => `${+props.cardHeight + 20}px;`};\n`;\n\n/* DO NOT DELETE - important\n\"columnColorsArray\": [\n      \"#ffb2b2\"\n      \"#ffbfbf\",\n      \"#ffcbcb\",\n      \"#ffd8d8\",\n      \"#ffe5e5\",\n      \"#f5f5f5\",\n      \"#d6f5d6\",\n      \"#c1f0c1\",\n      \"#adebad\",\n      \"#98E698\",\n      \"#84e184\"\n    ],\n*/\n","import React from \"react\";\nimport \"react-responsive-modal/styles.css\";\nimport { Modal } from \"react-responsive-modal\";\nimport styled from \"styled-components\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport decodeHTML from \"../../utilities/decodeHTML\";\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\nimport useStore from \"../../globalState/useStore\";\n\nconst getLangObj = (state) => state.langObj;\nconst getTriggerSortModal = (state) => state.triggerSortModal;\nconst getSetTriggerSortModal = (state) => state.setTriggerSortModal;\n\nconst SortHelpModal = () => {\n  // STATE\n  const langObj = useSettingsStore(getLangObj);\n  const triggerSortModal = useStore(getTriggerSortModal);\n  const setTriggerSortModal = useStore(getSetTriggerSortModal);\n\n  const helpModalHead = ReactHtmlParser(decodeHTML(langObj.sortHelpModalHead));\n  const helpModalText = ReactHtmlParser(decodeHTML(langObj.sortHelpModalText));\n\n  // const onOpenModal = () => setOpen(true);\n  const onCloseModal = () => {\n    setTriggerSortModal(false);\n  };\n\n  return (\n    <Modal\n      className=\"customModal\"\n      open={triggerSortModal}\n      onClose={onCloseModal}\n      center\n    >\n      <ModalHeader>{helpModalHead}</ModalHeader>\n      <hr />\n      <ModalContent>{helpModalText}</ModalContent>\n    </Modal>\n  );\n};\n\nexport default SortHelpModal;\n\nconst ModalHeader = styled.div`\n  font-size: 24px;\n  line-height: 1.42;\n  padding: 10px 0px 10px 0px;\n\n  hr {\n    color: black;\n  }\n`;\n\nconst ModalContent = styled.div`\n  margin-top: 15px;\n`;\n\n// react-responsive-modal-overlay\n","import React from \"react\";\nimport \"react-responsive-modal/styles.css\";\nimport { Modal } from \"react-responsive-modal\";\nimport styled from \"styled-components\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport decodeHTML from \"./decodeHTML\";\nimport useSettingsStore from \"../globalState/useSettingsStore\";\nimport useStore from \"../globalState/useStore\";\n\nconst getLangObj = (state) => state.langObj;\nconst getTriggerSortFinishedMod = (state) => state.triggerSortingFinishedModal;\nconst getSetTrigSortFinishMod = (state) => state.setTriggerSortingFinishedModal;\n\nconst SortingFinishedModal = () => {\n  // STATE\n  const langObj = useSettingsStore(getLangObj);\n  const triggerSortingFinishedModal = useStore(getTriggerSortFinishedMod);\n  const setTriggerSortingFinishedModal = useStore(getSetTrigSortFinishMod);\n\n  const helpModalHead = ReactHtmlParser(\n    decodeHTML(langObj.sortingCompleteModalHead)\n  );\n  const helpModalText = ReactHtmlParser(\n    decodeHTML(langObj.sortingCompleteModalText)\n  );\n\n  // const onOpenModal = () => setOpen(true);\n  const onCloseModal = () => {\n    setTriggerSortingFinishedModal(false);\n  };\n\n  return (\n    <Modal\n      className=\"customModal\"\n      open={triggerSortingFinishedModal}\n      onClose={onCloseModal}\n      center\n    >\n      <ModalHeader>{helpModalHead}</ModalHeader>\n      <hr />\n      <ModalContent>{helpModalText}</ModalContent>\n    </Modal>\n  );\n};\n\nexport default SortingFinishedModal;\n\nconst ModalHeader = styled.div`\n  font-size: 24px;\n  line-height: 1.42;\n  padding: 10px 0px 10px 0px;\n\n  hr {\n    color: black;\n  }\n`;\n\nconst ModalContent = styled.div`\n  margin-top: 15px;\n`;\n\n// react-responsive-modal-overlay\n","import React from \"react\";\nimport \"react-responsive-modal/styles.css\";\nimport { Modal } from \"react-responsive-modal\";\nimport styled from \"styled-components\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport decodeHTML from \"../../utilities/decodeHTML\";\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\nimport useStore from \"../../globalState/useStore\";\n\nconst getLangObj = (state) => state.langObj;\nconst getTriggerModalOpen = (state) => state.triggerSortPreventNavModal;\nconst getSetTriggerSortPreventNavModal = (state) =>\n  state.setTriggerSortPreventNavModal;\n\nconst PresortPreventNavModal = () => {\n  // STATE\n  const langObj = useSettingsStore(getLangObj);\n  const triggerModalOpen = useStore(getTriggerModalOpen);\n  const setTriggerSortPreventNavModal = useStore(\n    getSetTriggerSortPreventNavModal\n  );\n\n  const modalHead = ReactHtmlParser(\n    decodeHTML(langObj.sortPreventNavModalHead)\n  );\n  const modalText = ReactHtmlParser(\n    decodeHTML(langObj.sortPreventNavModalText)\n  );\n\n  // const onOpenModal = () => setOpen(true);\n  const onCloseModal = () => {\n    setTriggerSortPreventNavModal(false);\n  };\n\n  return (\n    <Modal\n      className=\"customModal\"\n      open={triggerModalOpen}\n      onClose={onCloseModal}\n      center\n    >\n      <ModalHeader>{modalHead}</ModalHeader>\n      <hr />\n      <ModalContent>{modalText}</ModalContent>\n    </Modal>\n  );\n};\n\nexport default PresortPreventNavModal;\n\nconst ModalHeader = styled.div`\n  font-size: 24px;\n  line-height: 1.42;\n  padding: 10px 0px 10px 0px;\n\n  hr {\n    color: black;\n  }\n`;\n\nconst ModalContent = styled.div`\n  margin-top: 15px;\n`;\n\n// react-responsive-modal-overlay\n","import React from \"react\";\nimport \"react-responsive-modal/styles.css\";\nimport { Modal } from \"react-responsive-modal\";\nimport styled from \"styled-components\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport decodeHTML from \"../../utilities/decodeHTML\";\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\nimport useStore from \"../../globalState/useStore\";\n\nconst getLangObj = (state) => state.langObj;\nconst getTriggerModalOpen = (state) => state.triggerSortOverloadedColumnModal;\nconst getSetTrigOverColModal = (state) =>\n  state.setTriggerSortOverloadedColumnModal;\n\nconst OverloadedColumnModal = () => {\n  // STATE\n  const langObj = useSettingsStore(getLangObj);\n  const triggerModalOpen = useStore(getTriggerModalOpen);\n  const setTriggerSortOverloadedColumnModal = useStore(getSetTrigOverColModal);\n\n  const modalHead = ReactHtmlParser(\n    decodeHTML(langObj.sortOverloadedColumnModalHead)\n  );\n  const modalText = ReactHtmlParser(\n    decodeHTML(langObj.sortOverloadedColumnModalText)\n  );\n\n  // const onOpenModal = () => setOpen(true);\n  const onCloseModal = () => {\n    setTriggerSortOverloadedColumnModal(false);\n  };\n\n  return (\n    <Modal\n      className=\"customModal\"\n      open={triggerModalOpen}\n      onClose={onCloseModal}\n      center\n    >\n      <ModalHeader>{modalHead}</ModalHeader>\n      <hr />\n      <ModalContent>{modalText}</ModalContent>\n    </Modal>\n  );\n};\n\nexport default OverloadedColumnModal;\n\nconst ModalHeader = styled.div`\n  font-size: 24px;\n  line-height: 1.42;\n  padding: 10px 0px 10px 0px;\n\n  hr {\n    color: black;\n  }\n`;\n\nconst ModalContent = styled.div`\n  margin-top: 15px;\n`;\n\n// react-responsive-modal-overlay\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { v4 as uuid } from \"uuid\";\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\n\nconst getMapObj = (state) => state.mapObj;\n\nconst SortColGuides = (props) => {\n  // STATE\n  const mapObj = useSettingsStore(getMapObj);\n\n  const qSortHeaderNumbers = [...mapObj.qSortHeaderNumbers];\n  const columnHeadersColorsArray = [...mapObj.columnHeadersColorsArray];\n  let columnWidth = +props.columnWidth + 11;\n\n  return (\n    <ColorBarDivContainer id=\"colorBarDivContainer\">\n      {qSortHeaderNumbers.map((value, index) => {\n        return (\n          <ColorBarDiv\n            key={uuid()}\n            width={columnWidth}\n            color={columnHeadersColorsArray[index]}\n          >\n            {value}\n          </ColorBarDiv>\n        );\n      })}\n    </ColorBarDivContainer>\n  );\n};\n\nexport default SortColGuides;\n\nconst ColorBarDiv = styled.div`\n  background-color: ${(props) => props.color};\n  width: ${(props) => +props.width}px;\n  margin-right: 1px;\n  margin-left: 1px;\n  text-align: center;\n  font-weight: bold;\n  font-size: 24px;\n  height: 28px;\n  border-bottom: 2px solid black;\n`;\n\nconst ColorBarDivContainer = styled.div`\n  display: flex;\n  padding-left: 2px;\n  flex-direction: row;\n  background-color: #d8d8d8;\n  margin-bottom: 0px;\n  height: 30px;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport SortGrid from \"./SortGrid\";\nimport styled from \"styled-components\";\nimport calculateTimeOnPage from \"../../utilities/calculateTimeOnPage\";\nimport SortHelpModal from \"./SortHelpModal\";\nimport SortingFinishedModal from \"../../utilities/SortingFinishedModal\";\nimport PreventSortNavModal from \"./PreventSortNavModal\";\nimport OverloadedColumnModal from \"./OverloadedColumnModal\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport decodeHTML from \"../../utilities/decodeHTML\";\nimport SortColGuides from \"./SortColGuides\";\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\nimport useStore from \"../../globalState/useStore\";\n\nfunction debounce(fn, ms) {\n  let timer;\n  return (_) => {\n    clearTimeout(timer);\n    timer = setTimeout((_) => {\n      timer = null;\n      fn.apply(this, arguments);\n    }, ms);\n  };\n}\n\nconst getLangObj = (state) => state.langObj;\nconst getConfigObj = (state) => state.configObj;\nconst getCardFontSize = (state) => state.cardFontSize;\nconst getColumnWidth = (state) => state.columnWidth;\nconst getTopMargin = (state) => state.topMargin;\nconst getSetPresortNoReturn = (state) => state.setPresortNoReturn;\nconst getSetCurrentPage = (state) => state.setCurrentPage;\nconst getSetTopMargin = (state) => state.setTopMargin;\nconst getResults = (state) => state.results;\nconst getSetResults = (state) => state.setResults;\nconst getSetDisplayNextButton = (state) => state.setDisplayNextButton;\n\nconst Sort = () => {\n  // STATE\n  const langObj = useSettingsStore(getLangObj);\n  const configObj = useSettingsStore(getConfigObj);\n  let cardFontSize = useStore(getCardFontSize);\n  const columnWidth = useStore(getColumnWidth);\n  const topMargin = useStore(getTopMargin);\n  const results = useStore(getResults);\n  const setPresortNoReturn = useStore(getSetPresortNoReturn);\n  const setCurrentPage = useStore(getSetCurrentPage);\n  const setTopMargin = useStore(getSetTopMargin);\n  const setResults = useStore(getSetResults);\n  const setDisplayNextButton = useStore(getSetDisplayNextButton);\n\n  // shrink from sort size\n  // todo - add configurator default\n  cardFontSize = cardFontSize - 5;\n\n  // set next button display\n  setDisplayNextButton(true);\n\n  const headerBarColor = configObj.headerBarColor;\n  const fontColor = configObj.defaultFontColor;\n\n  const sortDisagreement = ReactHtmlParser(\n    decodeHTML(langObj.sortDisagreement)\n  );\n  const sortAgreement = ReactHtmlParser(decodeHTML(langObj.sortAgreement));\n  const condOfInst = ReactHtmlParser(decodeHTML(langObj.condOfInst));\n\n  // force updates on window resize\n  const [dimensions, setDimensions] = useState({\n    height: window.innerHeight,\n    width: document.body.clientWidth,\n  });\n\n  // page resize\n  useEffect(() => {\n    const debouncedHandleResize = debounce(function handleResize() {\n      setDimensions({\n        height: window.innerHeight,\n        width: document.body.clientWidth,\n      });\n    }, 200);\n\n    window.addEventListener(\"resize\", debouncedHandleResize);\n\n    return (_) => {\n      window.removeEventListener(\"resize\", debouncedHandleResize);\n    };\n  });\n\n  useEffect(() => {\n    /* this should adjust the margin of the sort grid because I can't know\n     the size - it will depend on how much the researcher writes in the \n     \"conditions of instruction\" section - so, I grab the height of titleBar \n     after render and reset the margin\n    */\n    const sortGridMarginTop = +JSON.parse(\n      localStorage.getItem(\"sortGridMarginTop\")\n    );\n    let height = document.getElementById(\"sortTitleBarContainer\").clientHeight;\n\n    height = +JSON.stringify(height);\n\n    setTimeout(() => {\n      if (sortGridMarginTop !== height) {\n        setTopMargin(height);\n        localStorage.setItem(\"sortGridMarginTop\", JSON.stringify(height));\n      } else {\n        setTopMargin(+sortGridMarginTop);\n      }\n    }, 200);\n  });\n\n  useEffect(() => {\n    setPresortNoReturn(true);\n    setTimeout(() => {\n      setCurrentPage(\"sort\");\n    }, 300);\n  }, [setPresortNoReturn, setCurrentPage]);\n\n  // calc time on page\n  useEffect(() => {\n    // get card font size\n\n    let startTime;\n    startTime = Date.now();\n    return () => {\n      const updatedResults = calculateTimeOnPage(\n        startTime,\n        \"sortPage\",\n        \"sortPage\",\n        results\n      );\n      setResults(updatedResults);\n    };\n  }, [results, setResults]);\n\n  return (\n    <React.Fragment>\n      <SortHelpModal />\n      <PreventSortNavModal />\n      <SortingFinishedModal />\n      <OverloadedColumnModal />\n      <SortTitleBarContainer id=\"sortTitleBarContainer\">\n        <SortTitleBar id=\"sortTitleBar\" background={headerBarColor}>\n          <Disagree>{sortDisagreement}</Disagree>\n          <CondOfInst fontSize={configObj.condOfInstFontSize}>\n            {condOfInst}\n          </CondOfInst>\n          <Agree>{sortAgreement}</Agree>\n        </SortTitleBar>\n        <SortColGuides columnWidth={columnWidth} />\n      </SortTitleBarContainer>\n      <SortGridContainer marginTop={topMargin}>\n        <SortGrid\n          dimensions={dimensions}\n          cardFontSize={cardFontSize}\n          fontColor={fontColor}\n        />\n        ;\n      </SortGridContainer>\n    </React.Fragment>\n  );\n};\n\nexport default Sort;\n\nconst SortTitleBarContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100vw;\n  position: fixed;\n  top: 0;\n  z-index: 999;\n`;\n\nconst SortTitleBar = styled.div`\n  width: 100vw;\n  padding-left: 1.5vw;\n  padding-right: 1.5vw;\n  padding-bottom: 5px;\n  display: inline-grid;\n  grid-template-columns: 15% 1fr 15%;\n  color: black;\n  font-weight: bold;\n  background-color: ${(props) => props.background};\n`;\n\nconst CondOfInst = styled.div`\n  color: white;\n  max-width: 80vw;\n  font-size: ${(props) => `${props.fontSize}px`};\n  padding: 5px;\n  border-radius: 5px;\n  text-align: center;\n  align-self: end;\n`;\n\nconst Agree = styled.div`\n  font-size: 22px;\n  align-self: end;\n  justify-self: end;\n  color: white;\n  padding-bottom: 5px;\n  margin-right: 20px;\n`;\n\nconst Disagree = styled.div`\n  font-size: 22px;\n  align-self: end;\n  justify-self: start;\n  color: white;\n  padding-bottom: 5px;\n`;\n\nconst SortGridContainer = styled.div`\n  margin-top: ${(props) => `${props.marginTop}px`};\n`;\n","import React from \"react\";\nimport \"react-responsive-modal/styles.css\";\nimport { Modal } from \"react-responsive-modal\";\nimport styled from \"styled-components\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport decodeHTML from \"../../utilities/decodeHTML\";\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\nimport useStore from \"../../globalState/useStore\";\n\nconst getLangObj = (state) => state.langObj;\nconst getTriggerModalOpen = (state) => state.triggerTransmissionOKModal;\nconst getSetTriggerTransOKMod = (state) => state.setTriggerTransmissionOKModal;\nconst getSetDisplayGoodbyeMessage = (state) => state.setDisplayGoodbyeMessage;\n\nconst SubmitSuccessModal = () => {\n  // STATE\n  const langObj = useSettingsStore(getLangObj);\n  const triggerModalOpen = useStore(getTriggerModalOpen);\n  const setTriggerTransmissionOKModal = useStore(getSetTriggerTransOKMod);\n  const setDisplayGoodbyeMessage = useStore(getSetDisplayGoodbyeMessage);\n\n  const modalHead = ReactHtmlParser(decodeHTML(langObj.transferOkModalHeader));\n  const modalText = ReactHtmlParser(decodeHTML(langObj.transferOkModalText));\n\n  // const onOpenModal = () => setOpen(true);\n  const onCloseModal = () => {\n    setTriggerTransmissionOKModal(false);\n    setDisplayGoodbyeMessage(true);\n  };\n\n  return (\n    <Modal\n      className=\"customModal\"\n      open={triggerModalOpen}\n      onClose={onCloseModal}\n      center\n    >\n      <ModalHeader>{modalHead}</ModalHeader>\n      <hr />\n      <ModalContent>{modalText}</ModalContent>\n    </Modal>\n  );\n};\n\nexport default SubmitSuccessModal;\n\nconst ModalHeader = styled.div`\n  font-size: 24px;\n  line-height: 1.42;\n  padding: 10px 0px 10px 0px;\n\n  hr {\n    color: black;\n  }\n`;\n\nconst ModalContent = styled.div`\n  margin-top: 15px;\n`;\n\n// react-responsive-modal-overlay\n","import React from \"react\";\nimport \"react-responsive-modal/styles.css\";\nimport { Modal } from \"react-responsive-modal\";\nimport styled from \"styled-components\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport decodeHTML from \"../../utilities/decodeHTML\";\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\nimport useStore from \"../../globalState/useStore\";\n\nconst getLangObj = (state) => state.langObj;\nconst getTriggerModalOpen = (state) => state.triggerTransmissionFailModal;\nconst getSetTrigTransFailMod = (state) => state.setTriggerTransmissionFailModal;\n\nconst SubmitFailureModal = () => {\n  // STATE\n  const langObj = useSettingsStore(getLangObj);\n  const triggerModalOpen = useStore(getTriggerModalOpen);\n  const setTriggerTransmissionFailModal = useStore(getSetTrigTransFailMod);\n\n  const modalHead = ReactHtmlParser(\n    decodeHTML(langObj.transferFailModalHeader)\n  );\n\n  const modalText = ReactHtmlParser(decodeHTML(langObj.transferFailModalText));\n\n  // const onOpenModal = () => setOpen(true);\n  const onCloseModal = () => {\n    setTriggerTransmissionFailModal(false);\n  };\n\n  return (\n    <Modal\n      className=\"customModal\"\n      open={triggerModalOpen}\n      onClose={onCloseModal}\n      center\n    >\n      <ModalHeader>{modalHead}</ModalHeader>\n      <hr />\n      <ModalContent>{modalText}</ModalContent>\n    </Modal>\n  );\n};\n\nexport default SubmitFailureModal;\n\nconst ModalHeader = styled.div`\n  font-size: 24px;\n  line-height: 1.42;\n  padding: 10px 0px 10px 0px;\n\n  hr {\n    color: black;\n  }\n`;\n\nconst ModalContent = styled.div`\n  margin-top: 15px;\n`;\n\n// react-responsive-modal-overlay\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport SubmitSuccessModal from \"./SubmitSuccessModal\";\nimport SubmitFailureModal from \"./SubmitFailureModal\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport decodeHTML from \"../../utilities/decodeHTML\";\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\nimport useStore from \"../../globalState/useStore\";\n\nconst getLangObj = (state) => state.langObj;\nconst getDisplaySubmitFallback = (state) => state.displaySubmitFallback;\nconst getSubmitFailNumber = (state) => state.submitFailNumber;\nconst getSetTrigTranFailMod = (state) => state.setTriggerTransmissionFailModal;\nconst getSetTrigTransOKModal = (state) => state.setTriggerTransmissionOKModal;\nconst getSetDisplaySubmitFallback = (state) => state.setDisplaySubmitFallback;\nconst getTransmittingData = (state) => state.transmittingData;\nconst getSetTransmittingData = (state) => state.setTransmittingData;\nconst getCheckInternetConnection = (state) => state.checkInternetConnection;\nconst getSetCheckInternetConnection = (state) =>\n  state.setCheckInternetConnection;\n\nconst SubmitResultsButton = (props) => {\n  // STATE\n  const langObj = useSettingsStore(getLangObj);\n  let displaySubmitFallback = useStore(getDisplaySubmitFallback);\n  let submitFailNumber = useStore(getSubmitFailNumber);\n  const setTriggerTransmissionFailModal = useStore(getSetTrigTranFailMod);\n  const setTriggerTransmissionOKModal = useStore(getSetTrigTransOKModal);\n  const setDisplaySubmitFallback = useStore(getSetDisplaySubmitFallback);\n  let transmittingData = useStore(getTransmittingData);\n  const setTransmittingData = useStore(getSetTransmittingData);\n  let checkInternetConnection = useStore(getCheckInternetConnection);\n  const setCheckInternetConnection = useStore(getSetCheckInternetConnection);\n\n  const btnTransferText = ReactHtmlParser(decodeHTML(langObj.btnTransfer));\n\n  const handleClick = (e) => {\n    e.preventDefault();\n    e.target.disabled = true;\n\n    // setup for client-side internet connection fail case\n    setTransmittingData(true);\n    setCheckInternetConnection(false);\n    setTimeout(() => {\n      setTransmittingData(false);\n      setCheckInternetConnection(true);\n    }, 20000);\n\n    console.log(JSON.stringify(props.results, null, 2));\n    console.log(props.results);\n    console.log(window.firebase.apps.length);\n\n    window.firebase\n      .auth()\n      .signInAnonymously()\n      .then(() => {\n        // Signed in..\n        window.rootRef.push(props.results, function (error) {\n          if (error) {\n            // data error action -  modal\n            console.log(\"data error - there was an error at rootRef level!\");\n            setTriggerTransmissionFailModal(true);\n            e.target.disabled = false;\n          } else {\n            // do success action - modal\n            setTriggerTransmissionOKModal(true);\n            console.log(\"success! pushed to database\");\n            localStorage.removeItem(\"cumulativelandingPageDuration\");\n            localStorage.removeItem(\"cumulativepresortPageDuration\");\n            localStorage.removeItem(\"cumulativesortPageDuration\");\n            localStorage.removeItem(\"cumulativepostsortPageDuration\");\n            localStorage.removeItem(\"cumulativesurveyPageDuration\");\n            localStorage.removeItem(\"lastAccesslandingPage\");\n            localStorage.removeItem(\"lastAccesspresortPage\");\n            localStorage.removeItem(\"lastAccesssortPage\");\n            localStorage.removeItem(\"lastAccesspostsortPage\");\n            localStorage.removeItem(\"lastAccesssurveyPage\");\n            localStorage.removeItem(\"timeOnlandingPage\");\n            localStorage.removeItem(\"timeOnpresortPage\");\n            localStorage.removeItem(\"timeOnsortPage\");\n            localStorage.removeItem(\"timeOnpostsortPage\");\n            localStorage.removeItem(\"timeOnsurveyPage\");\n          }\n        });\n      })\n      .catch((error) => {\n        var errorCode = error.code;\n        var errorMessage = error.message;\n        submitFailNumber = submitFailNumber + 1;\n        console.log(submitFailNumber);\n        setTransmittingData(false);\n        // Firebase connection error\n        console.log(\"Connection error - there was an error at firebase level!\");\n        setTriggerTransmissionFailModal(true);\n        console.log(errorCode, errorMessage);\n        e.target.disabled = false;\n\n        if (submitFailNumber > 2) {\n          console.log(\"display fallback set to true\");\n          setDisplaySubmitFallback(true);\n          displaySubmitFallback = true;\n        }\n      });\n    console.log(\"submission processed\");\n  };\n\n  if (displaySubmitFallback === true) {\n    return (\n      <React.Fragment>\n        <SubmitSuccessModal />\n        <SubmitFailureModal />\n        <DisabledButton tabindex=\"0\">{btnTransferText}</DisabledButton>\n      </React.Fragment>\n    );\n  }\n\n  return (\n    <React.Fragment>\n      <SubmitSuccessModal />\n      <SubmitFailureModal />\n      {transmittingData ? (\n        <TransmittingSpin />\n      ) : (\n        <StyledButton tabindex=\"0\" onClick={(e) => handleClick(e)}>\n          {btnTransferText}\n        </StyledButton>\n      )}\n      {checkInternetConnection && (\n        <WarningDiv>Check your internet connection</WarningDiv>\n      )}\n    </React.Fragment>\n  );\n};\nexport default SubmitResultsButton;\n\nconst StyledButton = styled.button`\n  border-color: #2e6da4;\n  color: white;\n  font-size: 1.2em;\n  font-weight: bold;\n  padding: 0.25em 1em;\n  border-radius: 3px;\n  text-decoration: none;\n  width: 200px;\n  height: 50px;\n  justify-self: right;\n  margin-right: 35px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-top: 30px;\n  margin-bottom: 20px;\n  background-color: ${({ theme, active }) =>\n    active ? theme.secondary : theme.primary};\n\n  &:hover {\n    background-color: ${({ theme }) => theme.secondary};\n  }\n\n  &:focus {\n    background-color: ${({ theme }) => theme.focus};\n  }\n`;\n\nconst DisabledButton = styled.button`\n  border-color: lightgray;\n  color: white;\n  font-size: 1.2em;\n  font-weight: bold;\n  padding: 0.25em 1em;\n  border-radius: 3px;\n  text-decoration: none;\n  width: 200px;\n  height: 50px;\n  justify-self: right;\n  margin-right: 35px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-top: 30px;\n  margin-bottom: 20px;\n  background-color: lightgray;\n`;\n\nconst TransmittingSpin = styled.div`\n  display: inline-block;\n  width: 50px;\n  height: 50px;\n  border: 5px solid rgba(255, 255, 255, 0.3);\n  border-radius: 50%;\n  border-top-color: #337ab7;\n  animation: spin 1s ease-in-out infinite;\n  -webkit-animation: spin 1s ease-in-out infinite;\n\n  @keyframes spin {\n    to {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n  @-webkit-keyframes spin {\n    to {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n`;\n\nconst WarningDiv = styled.div`\n  background-color: lightpink;\n  padding: 5px;\n  border-radius: 3px;\n  font-weight: bold;\n`;\n\n/* \n  const demoData = {\n    projectName: \"My_Q_project\",\n    partId: \"jimbo-wilbur\",\n    randomId: \"8ea8f130-b1e\",\n    dateTime: \"26/9/2021 @ 7:28:33\",\n    timeLanding: \"00:02:15\",\n    timePresort: \"00:05:06\",\n    timeSort: \"00:06:28\",\n    timePostsort: \"00:01:01\",\n    timeSurvey: \"00:01:36\",\n    npos: 3,\n    nneu: 27,\n    nneg: 3,\n    column4_1: \"no response\",\n    column4_2: \"no response\",\n    columnN4_1: \"no response\",\n    columnN4_2: \"no response\",\n    qNum1: \"info. - na\",\n    qNum2: \"hjkhjkhk\",\n    qNum3: \"no response\",\n    qNum4: \"no response\",\n    qNum5: \"no response\",\n    qNum6: \"no response\",\n    qNum7: \"1\",\n    \"qNum8-1\": \"no response\",\n    \"qNum8-2\": \"no response\",\n    \"qNum8-3\": \"no response\",\n    \"qNum8-4\": \"no response\",\n    \"qNum9-1\": \"no response\",\n    \"qNum9-2\": \"no response\",\n    \"qNum9-3\": \"no response\",\n    \"qNum9-4\": \"no response\",\n    \"qNum10-1\": \"no response\",\n    \"qNum10-2\": \"no response\",\n    \"qNum10-3\": \"no response\",\n    \"qNum10-4\": \"no response\",\n    sort: \"1|0|-1|0|-1|-2|0|-1|3|-2|-3|3|1|-4|-4|1|2|2|2|3|1|2|4|-3|4|-2|-1|0|-2|-1|1|0|-3\",\n  };\n */\n","const calculatePostsortResults = (resultsPostsort, mapObj, configObj) => {\n  const newObject = {};\n\n  // check for missing responses\n  const qSortPattern = mapObj.qSortPattern;\n  const qSortHeaderNumbers = mapObj.qSortHeaders;\n  const highCardNum = +qSortPattern[qSortPattern.length - 1];\n  const highCardVal = +qSortHeaderNumbers[qSortHeaderNumbers.length - 1];\n  const highCard2Num = +qSortPattern[qSortPattern.length - 2];\n  const highCard2Val = +qSortHeaderNumbers[qSortHeaderNumbers.length - 2];\n  const lowCardNum = +qSortPattern[0];\n  const lowCardVal = qSortHeaderNumbers[0];\n  const lowCard2Num = +qSortPattern[1];\n  const lowCard2Val = qSortHeaderNumbers[1];\n  const maxValue = Math.max(...qSortPattern);\n  const neuCardNum = maxValue;\n  const neuCardVal = 0;\n\n  // check for high card answers\n  const length = highCardNum;\n  for (let i = 0; i < length; i++) {\n    if (!resultsPostsort.hasOwnProperty(`column${highCardVal}_${i + 1}`))\n      resultsPostsort[`column${highCardVal}_${i + 1}`] = \"no response\";\n  }\n\n  // check for high card 2 answers\n  if (configObj.showSecondPosColumn === true) {\n    const length2 = highCard2Num;\n    for (let ii = 0; ii < length2; ii++) {\n      if (!resultsPostsort.hasOwnProperty(`column${highCard2Val}_${ii + 1}`))\n        resultsPostsort[`column${highCard2Val}_${ii + 1}`] = \"no response\";\n    }\n  }\n\n  // check for neu card answers\n  if (configObj.displayNeutralObjects === true) {\n    const length5 = neuCardNum;\n    for (let jjj = 0; jjj < length5; jjj++) {\n      if (!resultsPostsort.hasOwnProperty(`column${neuCardVal}_${jjj + 1}`))\n        resultsPostsort[`column${neuCardVal}_${jjj + 1}`] = \"no response\";\n    }\n  }\n\n  // check for low card 2 answers\n  if (configObj.showSecondNegColumn === true) {\n    const length4 = lowCard2Num;\n    for (let jj = 0; jj < length4; jj++) {\n      if (!resultsPostsort.hasOwnProperty(`column${lowCard2Val}_${jj + 1}`))\n        resultsPostsort[`column${lowCard2Val}_${jj + 1}`] = \"no response\";\n    }\n  }\n\n  // check for low card answers\n  const length3 = lowCardNum;\n  for (let j = 0; j < length3; j++) {\n    if (!resultsPostsort.hasOwnProperty(`column${lowCardVal}_${j + 1}`))\n      resultsPostsort[`column${lowCardVal}_${j + 1}`] = \"no response\";\n  }\n\n  // re-arrange object properties\n  let keys = Object.keys(resultsPostsort);\n  keys.sort();\n\n  for (let i = 0; i < keys.length; i++) {\n    newObject[keys[i]] = resultsPostsort[keys[i]];\n  }\n  return newObject;\n};\n\nexport default calculatePostsortResults;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport decodeHTML from \"../../utilities/decodeHTML\";\nimport { v4 as uuid } from \"uuid\";\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\n\nconst getLangObj = (state) => state.langObj;\n\nconst SubmitResultsButton = (props) => {\n  // STATE\n  const langObj = useSettingsStore(getLangObj);\n\n  const downloadButtonText = ReactHtmlParser(decodeHTML(langObj.btnDownload));\n  const randomId = uuid().substring(0, 12);\n\n  const resultsWithId = {};\n  resultsWithId[randomId] = props.results;\n\n  const finalResults = JSON.stringify(resultsWithId);\n\n  const handleClick = (e) => {\n    function download(content, fileName, contentType) {\n      var a = document.createElement(\"a\");\n      var file = new Blob([content], { type: contentType });\n      a.href = URL.createObjectURL(file);\n      a.download = fileName;\n      a.click();\n      URL.revokeObjectURL(a.href);\n    }\n\n    download(finalResults, \"EQ_Web_Sort_Results.txt\", \"text/plain\");\n  };\n\n  return (\n    <ButtonContainer>\n      <StyledButton tabindex=\"0\" onClick={(e) => handleClick(e)}>\n        {downloadButtonText}\n      </StyledButton>\n    </ButtonContainer>\n  );\n};\nexport default SubmitResultsButton;\n\nconst StyledButton = styled.button`\n  border-color: #2e6da4;\n  color: white;\n  font-size: 1.2em;\n  font-weight: bold;\n  padding: 0.25em 1em;\n  border-radius: 3px;\n  text-decoration: none;\n  width: 200px;\n  height: 50px;\n  justify-self: right;\n  margin-right: 35px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: fit-content;\n\n  margin-top: 30px;\n  margin-bottom: 20px;\n  background-color: ${({ theme, active }) =>\n    active ? theme.secondary : theme.primary};\n\n  &:hover {\n    background-color: ${({ theme }) => theme.secondary};\n  }\n\n  &:focus {\n    background-color: ${({ theme }) => theme.focus};\n  }\n`;\n\nconst ButtonContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 50vw;\n  justify-content: center;\n  align-items: center;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport decodeHTML from \"../../utilities/decodeHTML\";\nimport FallbackButtons from \"./FallbackButtons\";\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\n\n// eslint-disable-next-line react/button-has-type\n/* eslint react/prop-types: 0 */\n\n/* const handleClick = () => {\n  console.log(\"clicked\");\n}; */\n\nconst getLangObj = (state) => state.langObj;\n\nconst SubmitFallback = (props) => {\n  // STATE\n  const langObj = useSettingsStore(getLangObj);\n\n  const fallbackMessage = ReactHtmlParser(decodeHTML(langObj.fallbackMessage));\n\n  return (\n    <div>\n      <StyledMessage>{fallbackMessage}</StyledMessage>\n      <FallbackButtons results={props.results} />\n    </div>\n  );\n};\n\nexport default SubmitFallback;\n\nconst StyledMessage = styled.div`\n  width: 50vw;\n  max-width: 900px;\n  font-size: 3vh;\n  background-color: orange;\n  padding: 10px;\n  border-radius: 5px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport SubmitSuccessModal from \"./SubmitSuccessModal\";\nimport SubmitFailureModal from \"./SubmitFailureModal\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport decodeHTML from \"../../utilities/decodeHTML\";\nimport { v4 as uuid } from \"uuid\";\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\nimport useLocalPersist from \"../../globalState/useLocalPersist\";\nimport useStore from \"../../globalState/useStore\";\n\nconst getSetLocalStoredQsorts = (state) => state.setLocalStoredQsorts;\nconst getLocalStoredQsorts = (state) => state.localStoredQsorts;\nconst getSetHasDownloadedQsorts = (state) => state.setHasDownloadedQsorts;\nconst getSetTriggerLocalSubmitSuccessModal = (state) =>\n  state.setTriggerLocalSubmitSuccessModal;\n\nconst getLangObj = (state) => state.langObj;\n\nconst SubmitLocalResultsButton = (props) => {\n  // STATE\n  const langObj = useSettingsStore(getLangObj);\n  const setLocalStoredQsorts = useLocalPersist(getSetLocalStoredQsorts);\n  let localStoredQsorts = useLocalPersist(getLocalStoredQsorts);\n  const setHasDownloadedQsorts = useLocalPersist(getSetHasDownloadedQsorts);\n  const setTriggerLocalSubmitSuccessModal = useStore(\n    getSetTriggerLocalSubmitSuccessModal\n  );\n\n  const btnTransferText = ReactHtmlParser(\n    decodeHTML(langObj.localSaveDataButton)\n  );\n  // let identifier = uuid();\n  /* \n  const demoData = {\n    projectName: \"My_Q_project\",\n    partId: \"jimbo-wilbur\",\n    randomId: \"8ea8f130-b1e\",\n    dateTime: \"26/9/2021 @ 7:28:33\",\n    timeLanding: \"00:02:15\",\n    timePresort: \"00:05:06\",\n    timeSort: \"00:06:28\",\n    timePostsort: \"00:01:01\",\n    timeSurvey: \"00:01:36\",\n    npos: 3,\n    nneu: 27,\n    nneg: 3,\n    column4_1: \"no response\",\n    column4_2: \"no response\",\n    columnN4_1: \"no response\",\n    columnN4_2: \"no response\",\n    qNum1: \"info. - na\",\n    qNum2: \"hjkhjkhk\",\n    qNum3: \"no response\",\n    qNum4: \"no response\",\n    qNum5: \"no response\",\n    qNum6: \"no response\",\n    qNum7: \"1\",\n    \"qNum8-1\": \"no response\",\n    \"qNum8-2\": \"no response\",\n    \"qNum8-3\": \"no response\",\n    \"qNum8-4\": \"no response\",\n    \"qNum9-1\": \"no response\",\n    \"qNum9-2\": \"no response\",\n    \"qNum9-3\": \"no response\",\n    \"qNum9-4\": \"no response\",\n    \"qNum10-1\": \"no response\",\n    \"qNum10-2\": \"no response\",\n    \"qNum10-3\": \"no response\",\n    \"qNum10-4\": \"no response\",\n    sort: \"1|0|-1|0|-1|-2|0|-1|3|-2|-3|3|1|-4|-4|1|2|2|2|3|1|2|4|-3|4|-2|-1|0|-2|-1|1|0|-3\",\n  };\n */\n  const handleClick = (e) => {\n    e.preventDefault();\n    e.target.disabled = true;\n\n    try {\n      console.log(JSON.stringify(props.results, null, 2));\n\n      // setLocalStoredQsorts(props.results);\n\n      const participantDesignation1 = uuid();\n      const participantDesignation = participantDesignation1.substring(0, 8);\n\n      localStoredQsorts[participantDesignation] = props.results;\n      setLocalStoredQsorts(localStoredQsorts);\n\n      localStorage.removeItem(\"cumulativelandingPageDuration\");\n      localStorage.removeItem(\"cumulativepresortPageDuration\");\n      localStorage.removeItem(\"cumulativesortPageDuration\");\n      localStorage.removeItem(\"cumulativepostsortPageDuration\");\n      localStorage.removeItem(\"cumulativesurveyPageDuration\");\n      localStorage.removeItem(\"lastAccesslandingPage\");\n      localStorage.removeItem(\"lastAccesspresortPage\");\n      localStorage.removeItem(\"lastAccesssortPage\");\n      localStorage.removeItem(\"lastAccesspostsortPage\");\n      localStorage.removeItem(\"lastAccesssurveyPage\");\n      localStorage.removeItem(\"timeOnlandingPage\");\n      localStorage.removeItem(\"timeOnpresortPage\");\n      localStorage.removeItem(\"timeOnsortPage\");\n      localStorage.removeItem(\"timeOnpostsortPage\");\n      localStorage.removeItem(\"timeOnsurveyPage\");\n\n      setTriggerLocalSubmitSuccessModal(true);\n      setHasDownloadedQsorts(false);\n\n      // const results = props.results;\n\n      /*\n        if (errorMessage) {\n            // data error action -  modal\n            console.log(\"data error - there was an error at rootRef level!\");\n            setGlobalState(\"triggerTransmissionFailModal\", true);\n            e.target.disabled = false;\n          } else {\n            // do success action - modal\n            setGlobalState(\"triggerTransmissionOKModal\", true);\n            console.log(\"success! pushed to database\");\n          } */\n    } catch (error) {\n      e.target.disabled = false;\n\n      /*\n        ((error) => {\n        var errorCode = error.code;\n        var errorMessage = error.message;\n        submitFailNumber = submitFailNumber + 1;\n        console.log(submitFailNumber);\n        // Firebase connection error\n        console.log(\"Connection error - there was an error at firebase level!\");\n        setGlobalState(\"triggerTransmissionFailModal\", true);\n        console.log(errorCode, errorMessage);\n        e.target.disabled = false;\n\n        if (submitFailNumber > 2) {\n          console.log(\"display fallback set to true\");\n          setGlobalState(\"displaySubmitFallback\", true);\n          displaySubmitFallback = true;\n        }\n      });\n    console.log(\"submission processed\");\n  };\n\n  if (displaySubmitFallback === true) {\n    return (\n      <React.Fragment>\n        <SubmitSuccessModal />\n        <SubmitFailureModal />\n        <DisabledButton tabindex=\"0\">{btnTransferText}</DisabledButton>\n      </React.Fragment>\n    );\n    */\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <SubmitSuccessModal />\n      <SubmitFailureModal />\n      <StyledButton tabindex=\"0\" onClick={(e) => handleClick(e)}>\n        {btnTransferText}\n      </StyledButton>\n    </React.Fragment>\n  );\n};\nexport default SubmitLocalResultsButton;\n\nconst StyledButton = styled.button`\n  border-color: #2e6da4;\n  color: white;\n  font-size: 1.2em;\n  font-weight: bold;\n  padding: 0.25em 1em;\n  border-radius: 3px;\n  text-decoration: none;\n  width: auto;\n  height: 50px;\n  justify-self: right;\n  margin-right: 35px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-top: 30px;\n  margin-bottom: 20px;\n  background-color: ${({ theme, active }) =>\n    active ? theme.secondary : theme.primary};\n\n  &:hover {\n    background-color: ${({ theme }) => theme.secondary};\n  }\n\n  &:focus {\n    background-color: ${({ theme }) => theme.focus};\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport decodeHTML from \"../../utilities/decodeHTML\";\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\nimport { withRouter } from \"react-router\";\nimport useStore from \"../../globalState/useStore\";\nimport cloneDeep from \"lodash/cloneDeep\";\n\nconst getLangObj = (state) => state.langObj;\nconst getSetPresortNoReturn = (state) => state.setPresortNoReturn;\nconst getSetColumnStatements = (state) => state.setColumnStatements;\nconst getResetColumnStatements = (state) => state.resetColumnStatements;\n\nconst ReturnToLocalPanelButton = (props) => {\n  // STATE\n  const langObj = useSettingsStore(getLangObj);\n  const setPresortNoReturn = useStore(getSetPresortNoReturn);\n  const setColumnStatements = useSettingsStore(getSetColumnStatements);\n  const resetColumnStatements = useSettingsStore(getResetColumnStatements);\n  const newColumnStatements = cloneDeep(resetColumnStatements);\n\n  const btnTransferText = ReactHtmlParser(\n    decodeHTML(langObj.returnToLocalPanelButtonText)\n  );\n\n  const {\n    history,\n    onClick,\n    // ⬆ filtering out props that `button` doesn’t know what to do with.\n  } = props;\n\n  let reload = async function (history) {\n    await new Promise((resolve, reject) => window.location.reload());\n  };\n\n  return (\n    <React.Fragment>\n      <StyledButton\n        onClick={(event) => {\n          onClick && onClick(event);\n          setPresortNoReturn(false);\n          setColumnStatements(newColumnStatements);\n          history.push(\"/\");\n          reload();\n        }}\n      >\n        {btnTransferText}\n      </StyledButton>\n    </React.Fragment>\n  );\n};\nexport default withRouter(ReturnToLocalPanelButton);\n\nconst StyledButton = styled.button`\n  border-color: #2e6da4;\n  color: white;\n  font-size: 1.2em;\n  font-weight: bold;\n  padding: 0.25em 1em;\n  border-radius: 3px;\n  text-decoration: none;\n  width: auto;\n  height: 50px;\n  justify-self: right;\n  margin-right: 35px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-top: 30px;\n  margin-bottom: 20px;\n  background-color: ${({ theme, active }) =>\n    active ? theme.secondary : theme.primary};\n\n  &:hover {\n    background-color: ${({ theme }) => theme.secondary};\n  }\n\n  &:focus {\n    background-color: ${({ theme }) => theme.focus};\n  }\n`;\n","import React from \"react\";\nimport \"react-responsive-modal/styles.css\";\nimport { Modal } from \"react-responsive-modal\";\nimport styled from \"styled-components\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport decodeHTML from \"../../utilities/decodeHTML\";\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\nimport useStore from \"../../globalState/useStore\";\nimport ReturnToLocalPanelButton from \"./ReturnToLocalPanelButton\";\n\nconst getLangObj = (state) => state.langObj;\nconst getTrigLclSubmitSucMdl = (state) => state.triggerLocalSubmitSuccessModal;\n\nconst LocalSubmitSuccessModal = () => {\n  // STATE\n  const langObj = useSettingsStore(getLangObj);\n  const triggerModalOpen = useStore(getTrigLclSubmitSucMdl);\n\n  const modalHead = ReactHtmlParser(\n    decodeHTML(langObj.localSubmitSuccessModalHeader)\n  );\n  const modalText = ReactHtmlParser(\n    decodeHTML(langObj.localSubmitSuccessModalText)\n  );\n\n  const onCloseModal = () => {};\n\n  return (\n    <Modal\n      className=\"customModal\"\n      open={triggerModalOpen}\n      onClose={onCloseModal}\n      center\n    >\n      <ModalHeader>{modalHead}</ModalHeader>\n      <hr />\n      <ModalContent>{modalText}</ModalContent>\n      <ButtonContainer>\n        <ReturnToLocalPanelButton />\n      </ButtonContainer>\n    </Modal>\n  );\n};\n\nexport default LocalSubmitSuccessModal;\n\nconst ModalHeader = styled.div`\n  font-size: 24px;\n  line-height: 1.42;\n  padding: 10px 0px 10px 0px;\n\n  hr {\n    color: black;\n  }\n`;\n\nconst ModalContent = styled.div`\n  margin-top: 15px;\n`;\n\nconst ButtonContainer = styled.div`\n  display: flex;\n  justify-content: flex-end;\n`;\n// react-responsive-modal-overlay\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport SubmitSuccessModal from \"./SubmitSuccessModal\";\nimport SubmitFailureModal from \"./SubmitFailureModal\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport decodeHTML from \"../../utilities/decodeHTML\";\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\nimport useStore from \"../../globalState/useStore\";\nimport SteinStore from \"stein-js-client\";\n\nconst getLangObj = (state) => state.langObj;\nconst getDisplaySubmitFallback = (state) => state.displaySubmitFallback;\nconst getSubmitFailNumber = (state) => state.submitFailNumber;\nconst getSetTrigTranFailMod = (state) => state.setTriggerTransmissionFailModal;\nconst getSetTrigTransOKModal = (state) => state.setTriggerTransmissionOKModal;\nconst getSetDisplaySubmitFallback = (state) => state.setDisplaySubmitFallback;\nconst getTransmittingData = (state) => state.transmittingData;\nconst getSetTransmittingData = (state) => state.setTransmittingData;\nconst getCheckInternetConnection = (state) => state.checkInternetConnection;\nconst getSetCheckInternetConnection = (state) =>\n  state.setCheckInternetConnection;\n\nconst SubmitResultsButton = (props) => {\n  // STATE\n  const langObj = useSettingsStore(getLangObj);\n  const apiString = props.api;\n  const rawData = props.results;\n\n  let displaySubmitFallback = useStore(getDisplaySubmitFallback);\n  let submitFailNumber = useStore(getSubmitFailNumber);\n  const setTriggerTransmissionFailModal = useStore(getSetTrigTranFailMod);\n  const setTriggerTransmissionOKModal = useStore(getSetTrigTransOKModal);\n  const setDisplaySubmitFallback = useStore(getSetDisplaySubmitFallback);\n  let transmittingData = useStore(getTransmittingData);\n  const setTransmittingData = useStore(getSetTransmittingData);\n  let checkInternetConnection = useStore(getCheckInternetConnection);\n  const setCheckInternetConnection = useStore(getSetCheckInternetConnection);\n\n  const btnTransferText = ReactHtmlParser(decodeHTML(langObj.btnTransfer));\n\n  const store = new SteinStore(apiString);\n\n  const handleClick = (e) => {\n    e.preventDefault();\n    e.target.disabled = true;\n    setTransmittingData(true);\n    setCheckInternetConnection(false);\n\n    setTimeout(() => {\n      setTransmittingData(false);\n      setCheckInternetConnection(true);\n    }, 20000);\n\n    // create results object for transmission\n    let formattedResultsObj = {};\n    let iterator = 1;\n    for (const [key, value] of Object.entries(rawData)) {\n      formattedResultsObj[iterator] = `${key}: ${value}`;\n      iterator += 1;\n    }\n\n    // POST TO STEIN\n\n    console.log(JSON.stringify(formattedResultsObj, null, 2));\n    store.append(\"Sheet1\", [formattedResultsObj]).then((res) => {\n      if (Object.keys(res)[0] === \"error\") {\n        console.log(\"there was an error\");\n        // setTriggerTransmissionFailModal(true);\n\n        // re-enable submit button and log error number for fallback\n        e.target.disabled = false;\n        setTransmittingData(false);\n\n        submitFailNumber = submitFailNumber + 1;\n        console.log(submitFailNumber);\n\n        if (submitFailNumber > 2) {\n          console.log(\"display fallback set to true\");\n          setDisplaySubmitFallback(true);\n          displaySubmitFallback = true;\n        } else {\n          setTriggerTransmissionFailModal(true);\n        }\n      } else {\n        // submission success\n        console.log(res);\n        setTriggerTransmissionOKModal(true);\n        console.log(\"success! pushed to database\");\n        localStorage.removeItem(\"cumulativelandingPageDuration\");\n        localStorage.removeItem(\"cumulativepresortPageDuration\");\n        localStorage.removeItem(\"cumulativesortPageDuration\");\n        localStorage.removeItem(\"cumulativepostsortPageDuration\");\n        localStorage.removeItem(\"cumulativesurveyPageDuration\");\n        localStorage.removeItem(\"lastAccesslandingPage\");\n        localStorage.removeItem(\"lastAccesspresortPage\");\n        localStorage.removeItem(\"lastAccesssortPage\");\n        localStorage.removeItem(\"lastAccesspostsortPage\");\n        localStorage.removeItem(\"lastAccesssurveyPage\");\n        localStorage.removeItem(\"timeOnlandingPage\");\n        localStorage.removeItem(\"timeOnpresortPage\");\n        localStorage.removeItem(\"timeOnsortPage\");\n        localStorage.removeItem(\"timeOnpostsortPage\");\n        localStorage.removeItem(\"timeOnsurveyPage\");\n      }\n    });\n\n    /*\n    if (props.results.sort !== \"no data\") {\n      let rawSort = props.results.sort;\n      let sortArray = rawSort.split(\"|\");\n      let sortObj = {};\n      sortArray.forEach((item, index) => (sortObj[\"s\" + (index + 1)] = +item));\n      sortObj.randomId = rawData.randomId;\n      sortObj.partId = rawData.partId;\n      sortObj.urlUsercode = rawData.urlUsercode;\n\n      console.log(JSON.stringify(sortObj, null, 2));\n\n      store.append(\"Sheet2\", [sortObj]).then((res) => {\n        if (Object.keys(res)[0] === \"error\") {\n          console.log(\"there was an error\");\n          e.target.disabled = false;\n          submitFailNumber = submitFailNumber + 1;\n          console.log(submitFailNumber);\n\n          if (submitFailNumber > 2) {\n            console.log(\"display fallback set to true\");\n            setDisplaySubmitFallback(true);\n            displaySubmitFallback = true;\n          } else {\n            setTriggerTransmissionFailModal(true);\n          }\n        } else {\n          // submission success\n          console.log(res);\n          setTriggerTransmissionOKModal(true);\n          console.log(\"success! pushed to database\");\n          localStorage.removeItem(\"cumulativelandingPageDuration\");\n          localStorage.removeItem(\"cumulativepresortPageDuration\");\n          localStorage.removeItem(\"cumulativesortPageDuration\");\n          localStorage.removeItem(\"cumulativepostsortPageDuration\");\n          localStorage.removeItem(\"cumulativesurveyPageDuration\");\n          localStorage.removeItem(\"lastAccesslandingPage\");\n          localStorage.removeItem(\"lastAccesspresortPage\");\n          localStorage.removeItem(\"lastAccesssortPage\");\n          localStorage.removeItem(\"lastAccesspostsortPage\");\n          localStorage.removeItem(\"lastAccesssurveyPage\");\n          localStorage.removeItem(\"timeOnlandingPage\");\n          localStorage.removeItem(\"timeOnpresortPage\");\n          localStorage.removeItem(\"timeOnsortPage\");\n          localStorage.removeItem(\"timeOnpostsortPage\");\n          localStorage.removeItem(\"timeOnsurveyPage\");\n        }\n      });\n    }\n    */\n  };\n\n  if (displaySubmitFallback === true) {\n    return (\n      <React.Fragment>\n        <SubmitSuccessModal />\n        <SubmitFailureModal />\n        <DisabledButton tabindex=\"0\">{btnTransferText}</DisabledButton>\n      </React.Fragment>\n    );\n  }\n\n  return (\n    <React.Fragment>\n      <SubmitSuccessModal />\n      <SubmitFailureModal />\n      {transmittingData ? (\n        <TransmittingSpin />\n      ) : (\n        <StyledButton tabindex=\"0\" onClick={(e) => handleClick(e)}>\n          {btnTransferText}\n        </StyledButton>\n      )}\n      {checkInternetConnection && (\n        <WarningDiv>Check your internet connection</WarningDiv>\n      )}\n    </React.Fragment>\n  );\n};\nexport default SubmitResultsButton;\n\nconst StyledButton = styled.button`\n  border-color: #2e6da4;\n  color: white;\n  font-size: 1.2em;\n  font-weight: bold;\n  padding: 0.25em 1em;\n  border-radius: 3px;\n  text-decoration: none;\n  width: 200px;\n  height: 50px;\n  justify-self: right;\n  margin-right: 35px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-top: 30px;\n  margin-bottom: 20px;\n  background-color: ${({ theme, active }) =>\n    active ? theme.secondary : theme.primary};\n\n  &:hover {\n    background-color: ${({ theme }) => theme.secondary};\n  }\n\n  &:focus {\n    background-color: ${({ theme }) => theme.focus};\n  }\n`;\n\nconst DisabledButton = styled.button`\n  border-color: lightgray;\n  color: white;\n  font-size: 1.2em;\n  font-weight: bold;\n  padding: 0.25em 1em;\n  border-radius: 3px;\n  text-decoration: none;\n  width: 200px;\n  height: 50px;\n  justify-self: right;\n  margin-right: 35px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-top: 30px;\n  margin-bottom: 20px;\n  background-color: lightgray;\n`;\n\nconst TransmittingSpin = styled.div`\n  display: inline-block;\n  width: 50px;\n  height: 50px;\n  border: 5px solid rgba(255, 255, 255, 0.3);\n  border-radius: 50%;\n  border-top-color: #337ab7;\n  animation: spin 1s ease-in-out infinite;\n  -webkit-animation: spin 1s ease-in-out infinite;\n\n  @keyframes spin {\n    to {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n  @-webkit-keyframes spin {\n    to {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n`;\n\nconst WarningDiv = styled.div`\n  background-color: lightpink;\n  padding: 5px;\n  border-radius: 3px;\n  font-weight: bold;\n`;\n\n/* \n  const demoData = {\n    projectName: \"My_Q_project\",\n    partId: \"jimbo-wilbur\",\n    randomId: \"8ea8f130-b1e\",\n    dateTime: \"26/9/2021 @ 7:28:33\",\n    timeLanding: \"00:02:15\",\n    timePresort: \"00:05:06\",\n    timeSort: \"00:06:28\",\n    timePostsort: \"00:01:01\",\n    timeSurvey: \"00:01:36\",\n    npos: 3,\n    nneu: 27,\n    nneg: 3,\n    column4_1: \"no response\",\n    column4_2: \"no response\",\n    columnN4_1: \"no response\",\n    columnN4_2: \"no response\",\n    qNum1: \"info. - na\",\n    qNum2: \"hjkhjkhk\",\n    qNum3: \"no response\",\n    qNum4: \"no response\",\n    qNum5: \"no response\",\n    qNum6: \"no response\",\n    qNum7: \"1\",\n    \"qNum8-1\": \"no response\",\n    \"qNum8-2\": \"no response\",\n    \"qNum8-3\": \"no response\",\n    \"qNum8-4\": \"no response\",\n    \"qNum9-1\": \"no response\",\n    \"qNum9-2\": \"no response\",\n    \"qNum9-3\": \"no response\",\n    \"qNum9-4\": \"no response\",\n    \"qNum10-1\": \"no response\",\n    \"qNum10-2\": \"no response\",\n    \"qNum10-3\": \"no response\",\n    \"qNum10-4\": \"no response\",\n    sort: \"1|0|-1|0|-1|-2|0|-1|3|-2|-3|3|1|-4|-4|1|2|2|2|3|1|2|4|-3|4|-2|-1|0|-2|-1|1|0|-3\",\n  };\n */\n","import React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport decodeHTML from \"../../utilities/decodeHTML\";\nimport SubmitButton from \"./SubmitButton\";\nimport calculatePostsortResults from \"./calculatePostsortResults\";\nimport SubmitFallback from \"./SubmitFallback\";\nimport { v4 as uuid } from \"uuid\";\nimport SaveLocalDataToLocalStorageButton from \"./SaveLocalDataToLocalStorageButton\";\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\nimport useStore from \"../../globalState/useStore\";\nimport LocalSubmitSuccessModal from \"./LocalSubmitSuccessModal\";\nimport SubmitButtonGS from \"./SubmitButtonGS\";\n\nconst getLangObj = (state) => state.langObj;\nconst getConfigObj = (state) => state.configObj;\nconst getMapObj = (state) => state.mapObj;\nconst getSetCurrentPage = (state) => state.setCurrentPage;\nconst getDisplaySubmitFallback = (state) => state.displaySubmitFallback;\nconst getResults = (state) => state.results;\nconst getResultsPostsort = (state) => state.resultsPostsort;\nconst getResultsSurvey = (state) => state.resultsSurvey;\nconst getPartId = (state) => state.partId;\nconst getUsercode = (state) => state.usercode;\nconst getUrlUsercode = (state) => state.urlUsercode;\nconst getDisplayGoodbyeMessage = (state) => state.displayGoodbyeMessage;\nconst getParticipantName = (state) => state.localParticipantName;\nconst getLocalUsercode = (state) => state.localUsercode;\n\nlet transmissionResults = {};\n\nconst SubmitPage = () => {\n  // STATE\n  const langObj = useSettingsStore(getLangObj);\n  const configObj = useSettingsStore(getConfigObj);\n  const mapObj = useSettingsStore(getMapObj);\n  const setCurrentPage = useStore(getSetCurrentPage);\n  const displaySubmitFallback = useStore(getDisplaySubmitFallback);\n  const results = useStore(getResults);\n  const resultsPostsort = useStore(getResultsPostsort);\n  const resultsSurvey = useStore(getResultsSurvey);\n  const partId = useStore(getPartId);\n  const usercode = useStore(getUsercode);\n  const urlUsercode = useStore(getUrlUsercode);\n  const displayGoodbyeMessage = useStore(getDisplayGoodbyeMessage);\n  const localParticipantName = useStore(getParticipantName);\n  const localUsercode = useStore(getLocalUsercode);\n\n  useEffect(() => {\n    setCurrentPage(\"submit\");\n  }, [setCurrentPage]);\n\n  const transferTextAbove = decodeHTML(langObj.transferTextAbove);\n  const transferTextBelow = decodeHTML(langObj.transferTextBelow);\n  const goodbyeMessage = decodeHTML(langObj.goodbyeMessage);\n\n  const pageHeader = ReactHtmlParser(decodeHTML(langObj.transferHead));\n\n  // config options\n  const headerBarColor = configObj.headerBarColor;\n\n  useEffect(() => {\n    // format results for transmission\n    try {\n      // finish setup and format results object\n      transmissionResults[\"projectName\"] = configObj.studyTitle;\n      transmissionResults[\"partId\"] = partId;\n      transmissionResults[\"randomId\"] = uuid().substring(0, 12);\n      transmissionResults[\"urlUsercode\"] = urlUsercode;\n      transmissionResults[\"dateTime\"] = results.dateTime;\n      transmissionResults[\"timeLanding\"] = results.timeOnlandingPage;\n      transmissionResults[\"timePresort\"] = results.timeOnpresortPage;\n      transmissionResults[\"timeSort\"] = results.timeOnsortPage;\n\n      if (configObj.firebaseOrLocal === \"local\") {\n        transmissionResults[\"partId\"] = localParticipantName;\n        transmissionResults[\"usercode\"] = localUsercode;\n      }\n\n      if (configObj.showPostsort === true) {\n        transmissionResults[\"timePostsort\"] = results.timeOnpostsortPage;\n      }\n\n      if (configObj.showSurvey === true) {\n        transmissionResults[\"timeSurvey\"] = results.timeOnsurveyPage;\n      }\n\n      let numPos = results.npos;\n      if (isNaN(numPos)) {\n        numPos = 0;\n      }\n      let numNeu = results.nneu;\n      if (isNaN(numNeu)) {\n        numNeu = 0;\n      }\n      let numNeg = results.nneg;\n      if (isNaN(numNeg)) {\n        numNeg = 0;\n      }\n\n      transmissionResults[\"npos\"] = numPos;\n      transmissionResults[\"nneu\"] = numNeu;\n      transmissionResults[\"nneg\"] = numNeg;\n\n      // if project included POSTSORT, read in complete sorted results\n      if (configObj.showPostsort) {\n        const newPostsortObject = calculatePostsortResults(\n          resultsPostsort,\n          mapObj,\n          configObj\n        );\n        const keys = Object.keys(newPostsortObject);\n        for (let i = 0; i < keys.length; i++) {\n          transmissionResults[keys[i]] = newPostsortObject[keys[i]];\n        }\n      }\n\n      // if project included SURVEY, read in results\n      if (configObj.showSurvey) {\n        const keys2 = Object.keys(resultsSurvey);\n        for (let ii = 0; ii < keys2.length; ii++) {\n          transmissionResults[keys2[ii]] = resultsSurvey[keys2[ii]];\n        }\n      }\n      transmissionResults[\"sort\"] = results.sort;\n\n      // remove null values to prevent errors\n      for (const property in transmissionResults) {\n        if (\n          transmissionResults[property] === null ||\n          transmissionResults[property] === undefined\n        ) {\n          transmissionResults[property] = \"no data\";\n        }\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }, [\n    results,\n    configObj,\n    localParticipantName,\n    localUsercode,\n    mapObj,\n    partId,\n    resultsPostsort,\n    resultsSurvey,\n    usercode,\n    urlUsercode,\n  ]);\n\n  // early return if data submit success event\n  if (displayGoodbyeMessage === true) {\n    return (\n      <React.Fragment>\n        <GoodbyeDiv>{ReactHtmlParser(goodbyeMessage)}</GoodbyeDiv>\n      </React.Fragment>\n    );\n  }\n\n  if (configObj.firebaseOrLocal === \"local\") {\n    return (\n      <React.Fragment>\n        <SortTitleBar background={headerBarColor}>{pageHeader}</SortTitleBar>\n        <LocalSubmitSuccessModal />\n        <ContainerDiv>\n          <SaveLocalDataToLocalStorageButton results={transmissionResults} />\n        </ContainerDiv>\n      </React.Fragment>\n    );\n  } else if (configObj.firebaseOrLocal === \"sheets\") {\n    return (\n      <React.Fragment>\n        <SortTitleBar background={headerBarColor}>{pageHeader}</SortTitleBar>\n        <ContainerDiv>\n          <ContentDiv>{ReactHtmlParser(transferTextAbove)}</ContentDiv>\n          <SubmitButtonGS\n            results={transmissionResults}\n            api={configObj.steinApiUrl}\n          />\n\n          {displaySubmitFallback ? (\n            <SubmitFallback results={transmissionResults} />\n          ) : (\n            <ContentDiv>{ReactHtmlParser(transferTextBelow)}</ContentDiv>\n          )}\n        </ContainerDiv>\n        {/* <h1>test</h1> */}\n      </React.Fragment>\n    );\n  } else {\n    return (\n      <React.Fragment>\n        <SortTitleBar background={headerBarColor}>{pageHeader}</SortTitleBar>\n        <ContainerDiv>\n          <ContentDiv>{ReactHtmlParser(transferTextAbove)}</ContentDiv>\n          <SubmitButton results={transmissionResults} />\n\n          {displaySubmitFallback ? (\n            <SubmitFallback results={transmissionResults} />\n          ) : (\n            <ContentDiv>{ReactHtmlParser(transferTextBelow)}</ContentDiv>\n          )}\n        </ContainerDiv>\n        {/* <h1>test</h1> */}\n      </React.Fragment>\n    );\n  }\n};\n\nexport default SubmitPage;\n\nconst SortTitleBar = styled.div`\n  width: calc(100vw-4px);\n  padding-left: 1.5vw;\n  padding-right: 1.5vw;\n  padding-top: 5px;\n  min-height: 50px;\n  background-color: ${(props) => props.background};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: white;\n  font-weight: bold;\n  font-size: 28px;\n`;\n\nconst ContainerDiv = styled.div`\n  display: flex;\n  min-height: 800px;\n  width: calc(100vw-4px);\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst ContentDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  line-height: 1.2em;\n  width: 85vw;\n  font-size: 1.35em;\n  padding: 25px;\n  align-self: center;\n`;\n\nconst GoodbyeDiv = styled.div`\n  display: flex;\n  width: calc(100vw -20px);\n  height: calc(100vh - 50px);\n  font-size: 22px;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n`;\n\n/*\n--- Example results object ---\n\n{\n  \"projectName\": \"my Q study\",\n  \"partId\": \"anonymous\",\n  \"randomId\": \"367eee86-f28\",\n  \"usercode\": \"no usercode set\",\n  \"dateTime\": \"no data\",\n  \"timeLanding\": \"no data\",\n  \"timePresort\": \"no data\",\n  \"timeSort\": \"no data\",\n  \"timePostsort\": \"no data\",\n  \"timeSurvey\": \"no data\",\n  \"npos\": 0,\n  \"nneu\": 0,\n  \"nneg\": 0,\n  \"column4_1\": \"no response\",\n  \"column4_2\": \"no response\",\n  \"columnN4_1\": \"no response\",\n  \"columnN4_2\": \"no response\",\n  \"sort\": \"no data\"\n}\nSubmitButton.jsx:60 \n*/\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport decodeHTML from \"../../utilities/decodeHTML\";\nimport sanitizeString from \"../../utilities/sanitizeString\";\nimport useStore from \"../../globalState/useStore\";\n\nconst getResults = (state) => state.resultsSurvey;\nconst getSetResultsSurvey = (state) => state.setResultsSurvey;\nconst getAnswersStorage = (state) => state.answersStorage;\nconst getSetAnswersStorage = (state) => state.setAnswersStorage;\n\nconst SurveyTextElement = (props) => {\n  // STATE\n  const results = useStore(getResults);\n  const setResultsSurvey = useStore(getSetResultsSurvey);\n  const answersStorage = useStore(getAnswersStorage);\n  const setAnswersStorage = useStore(getSetAnswersStorage);\n\n  const checkRequiredQuestionsComplete = props.check;\n  // useStore(\n  //   (state) => state.checkRequiredQuestionsComplete\n  // );\n\n  const requiredAnswersObj = useStore((state) => state.requiredAnswersObj);\n  // const resultsSurvey = useStore((state) => state.resultsSurvey);\n  const setRequiredAnswersObj = useStore(\n    (state) => state.setRequiredAnswersObj\n  );\n\n  // preload \"no response\" in state\n  useEffect(() => {\n    results[`qNum${props.opts.qNum}`] = \"no response\";\n    setResultsSurvey(results);\n  }, [props, setResultsSurvey, results]);\n\n  const id = `qNum${props.opts.qNum}`;\n\n  // to force component update\n  const [userText, setUserText] = useState(\"\");\n  if (userText.length > 100) {\n    console.log(userText);\n  }\n\n  // for required question check\n  const [formatOptions, setFormatOptions] = useState({\n    bgColor: \"whitesmoke\",\n    border: \"none\",\n  });\n\n  // event handler\n  const handleOnChange = (e) => {\n    let value = e.target.value;\n    let valueLen = value.length;\n\n    // restrict to numbers\n    if (props.opts.restricted === \"true\" || props.opts.restricted === true) {\n      value = value.replace(/\\D/g, \"\");\n    }\n\n    // limit length\n    if (props.opts.limited === \"true\" || props.opts.limited === true) {\n      if (value.length > +props.opts.limitLength) {\n        value = value.substring(0, +props.opts.limitLength);\n      }\n    }\n    setUserText(value);\n    answersStorage[id] = value;\n    setAnswersStorage(answersStorage);\n\n    // record if answered or not\n    if (valueLen > 0) {\n      requiredAnswersObj[id] = \"answered\";\n      let sanitizedText = sanitizeString(value);\n      results[`qNum${props.opts.qNum}`] = sanitizedText;\n    } else {\n      results[`qNum${props.opts.qNum}`] = \"no response\";\n      requiredAnswersObj[id] = \"no response\";\n    }\n    setRequiredAnswersObj(requiredAnswersObj);\n    setResultsSurvey(results);\n  };\n\n  // required question answer check\n  let userTextLen = false;\n  if (id in answersStorage) {\n    let userTextLen1 = answersStorage[id];\n    userTextLen = userTextLen1.length;\n  }\n\n  useEffect(() => {\n    if (\n      checkRequiredQuestionsComplete === true &&\n      userTextLen < 1 &&\n      props.opts.required === true\n    ) {\n      setFormatOptions({\n        bgColor: \"lightpink\",\n        border: \"3px dashed black\",\n      });\n    } else {\n      setFormatOptions({\n        bgColor: \"whitesmoke\",\n        border: \"none\",\n      });\n    }\n  }, [checkRequiredQuestionsComplete, userTextLen, props]);\n\n  const labelText = ReactHtmlParser(decodeHTML(props.opts.label));\n  const noteText = ReactHtmlParser(decodeHTML(props.opts.note));\n\n  let inputValue;\n  if (id in answersStorage) {\n    inputValue = answersStorage[id];\n\n    requiredAnswersObj[id] = \"answered\";\n    results[`qNum${props.opts.qNum}`] = inputValue;\n\n    setRequiredAnswersObj(requiredAnswersObj);\n    setResultsSurvey(results);\n  } else {\n    inputValue = \"\";\n  }\n\n  return (\n    <Container bgColor={formatOptions.bgColor} border={formatOptions.border}>\n      <TitleBar>\n        <div>{labelText}</div>\n      </TitleBar>\n      <NoteText>\n        <div>{noteText}</div>\n      </NoteText>\n      <TextInput value={inputValue} onChange={handleOnChange} />\n    </Container>\n  );\n};\n\nexport default SurveyTextElement;\n\nconst Container = styled.div`\n  width: 90vw;\n  padding: 20px;\n  margin-left: 20px;\n  margin-right: 20px;\n  max-width: 1300px;\n  min-height: 200px;\n  background-color: ${(props) => props.bgColor};\n  outline: ${(props) => props.border};\n  outline-offset: -3px;\n`;\n\nconst TitleBar = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 5px;\n  min-height: 50px;\n  font-size: 18px;\n  text-align: center;\n  width: 100%;\n  border-radius: 3px;\n  background-color: lightgray;\n`;\n\nconst NoteText = styled.div`\n  display: flex;\n  justify-content: left;\n  align-items: center;\n  vertical-align: center;\n  margin-top: 5px;\n  height: 50px;\n  font-size: 16px;\n  text-align: center;\n  background-color: whitesmoke;\n  width: 100%;\n  border-radius: 3px;\n`;\n\nconst TextInput = styled.input`\n  display: flex;\n  justify-content: left;\n  align-items: center;\n  vertical-align: center;\n  margin-top: 5px;\n  height: 50px;\n  font-size: 18px;\n  background-color: white;\n  width: 100%;\n  border-radius: 3px;\n  border: 2px solid lightgray;\n  padding-left: 5px;\n  padding-right: 5px;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport decodeHTML from \"../../utilities/decodeHTML\";\nimport sanitizeString from \"../../utilities/sanitizeString.js\";\nimport useStore from \"../../globalState/useStore.js\";\n\nconst getResults = (state) => state.resultsSurvey;\nconst getSetResultsSurvey = (state) => state.setResultsSurvey;\nconst getCheckReqQsComplete = (state) => state.checkRequiredQuestionsComplete;\nconst getRequiredAnswersObj = (state) => state.requiredAnswersObj;\nconst getSetRequiredAnswersObj = (state) => state.setRequiredAnswersObj;\nconst getAnswersStorage = (state) => state.answersStorage;\nconst getSetAnswersStorage = (state) => state.setAnswersStorage;\n\nconst SurveyTextAreaElement = (props) => {\n  // STATE\n  const results = useStore(getResults);\n  const setResultsSurvey = useStore(getSetResultsSurvey);\n  const checkRequiredQuestionsComplete = useStore(getCheckReqQsComplete);\n  const requiredAnswersObj = useStore(getRequiredAnswersObj);\n  const setRequiredAnswersObj = useStore(getSetRequiredAnswersObj);\n  const answersStorage = useStore(getAnswersStorage);\n  const setAnswersStorage = useStore(getSetAnswersStorage);\n\n  useEffect(() => {\n    results[`qNum${props.opts.qNum}`] = \"no response\";\n    setResultsSurvey(results);\n  }, [props, results, setResultsSurvey]);\n\n  // let savedTextAreaText;\n  const [userText, setUserText] = useState(\"\");\n  const [formatOptions, setFormatOptions] = useState({\n    bgColor: \"whitesmoke\",\n    border: \"none\",\n  });\n\n  const id = `qNum${props.opts.qNum}`;\n\n  // ON CHANGE\n  const handleOnChange = (e) => {\n    let value = e.target.value;\n    // value = value.trim();\n    setUserText(value);\n    answersStorage[id] = value;\n    setAnswersStorage(answersStorage);\n\n    // record if answered or not\n    if (value.length > 0) {\n      requiredAnswersObj[id] = \"answered\";\n      let sanitizedText = sanitizeString(value);\n      results[`qNum${props.opts.qNum}`] = sanitizedText;\n    } else {\n      requiredAnswersObj[id] = \"no response\";\n      results[`qNum${props.opts.qNum}`] = \"no response\";\n    }\n    setRequiredAnswersObj(requiredAnswersObj);\n    setResultsSurvey(results);\n  };\n\n  // required question answer check\n  let userTextLen = false;\n  if (id in answersStorage) {\n    let userTextLen1 = answersStorage[id];\n    userTextLen = userTextLen1.length;\n  }\n\n  useEffect(() => {\n    if (\n      (props.opts.required === true || props.opts.required === \"true\") &&\n      checkRequiredQuestionsComplete === true &&\n      userTextLen < 1\n    ) {\n      setFormatOptions({\n        bgColor: \"lightpink\",\n        border: \"3px dashed black\",\n      });\n    } else {\n      setFormatOptions({\n        bgColor: \"whitesmoke\",\n        border: \"none\",\n      });\n    }\n  }, [\n    checkRequiredQuestionsComplete,\n    userText,\n    userTextLen,\n    props.opts.required,\n  ]);\n\n  const labelText = ReactHtmlParser(decodeHTML(props.opts.label));\n  const placeholder = props.opts.placeholder;\n\n  // to check for response in global state and inject into results if present\n  let inputValue;\n  if (id in answersStorage) {\n    inputValue = answersStorage[id];\n\n    // record if answered or not\n    requiredAnswersObj[id] = \"answered\";\n    results[`qNum${props.opts.qNum}`] = inputValue;\n\n    setRequiredAnswersObj(requiredAnswersObj);\n    setResultsSurvey(results);\n  } else {\n    inputValue = \"\";\n  }\n\n  return (\n    <Container bgColor={formatOptions.bgColor} border={formatOptions.border}>\n      <TitleBar>\n        <div>{labelText}</div>\n      </TitleBar>\n      <TextAreaInput\n        value={inputValue}\n        placeholder={placeholder}\n        onChange={handleOnChange}\n      />\n    </Container>\n  );\n};\n\nexport default SurveyTextAreaElement;\n\nconst Container = styled.div`\n  width: 90vw;\n  padding: 20px;\n  margin-left: 20px;\n  margin-right: 20px;\n  max-width: 1300px;\n  min-height: 200px;\n  background-color: whitesmoke;\n  background-color: ${(props) => props.bgColor};\n  outline: ${(props) => props.border};\n  outline-offset: -3px;\n`;\n\nconst TitleBar = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  min-height: 50px;\n  padding: 5px;\n  font-size: 18px;\n  text-align: center;\n  background-color: lightgray;\n  width: 100%;\n  border-radius: 3px;\n`;\n\nconst TextAreaInput = styled.textarea`\n  display: flex;\n  justify-content: left;\n  align-items: center;\n  vertical-align: center;\n  margin-top: 0px;\n  height: 150px;\n  font-size: 18px;\n  background-color: white;\n  width: 100%;\n  border-radius: 3px;\n  border: 2px solid lightgray;\n  padding: 5px;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { v4 as uuid } from \"uuid\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport decodeHTML from \"../../utilities/decodeHTML\";\nimport useStore from \"../../globalState/useStore\";\n\nlet getResults = (state) => state.resultsSurvey;\nconst getSetResultsSurvey = (state) => state.setResultsSurvey;\nconst getCheckReqQsComplete = (state) => state.checkRequiredQuestionsComplete;\nconst getRequiredAnswersObj = (state) => state.requiredAnswersObj;\nconst getSetRequiredAnswersObj = (state) => state.setRequiredAnswersObj;\nconst getAnswersStorage = (state) => state.answersStorage;\nconst getSetAnswersStorage = (state) => state.setAnswersStorage;\n\nconst SurveyRadioElement = (props) => {\n  // STATE\n  let results = useStore(getResults);\n  const setResultsSurvey = useStore(getSetResultsSurvey);\n  const checkRequiredQuestionsComplete = useStore(getCheckReqQsComplete);\n  const requiredAnswersObj = useStore(getRequiredAnswersObj);\n  const setRequiredAnswersObj = useStore(getSetRequiredAnswersObj);\n  const answersStorage = useStore(getAnswersStorage);\n  const setAnswersStorage = useStore(getSetAnswersStorage);\n\n  // local state for required question warning\n  let [testValue, setTestValue] = useState(false);\n  const [formatOptions, setFormatOptions] = useState({\n    bgColor: \"whitesmoke\",\n    border: \"none\",\n  });\n\n  useEffect(() => {\n    results[`qNum${props.opts.qNum}`] = \"no response\";\n    setResultsSurvey(results);\n  }, [props, results, setResultsSurvey]);\n\n  const getOptionsArray = (options) => {\n    let array = options.split(\";;;\");\n    array = array.filter(function (e) {\n      return e;\n    });\n    // array = array.map((x) => x.replace(/\\s/g, \"\"));\n    array = array.map((x) => x.trim());\n    return array;\n  };\n\n  const optsArray = getOptionsArray(props.opts.options);\n\n  // template\n  const RadioInput = ({ label, value, checked, setter }) => {\n    return (\n      <label>\n        <InputStyleDiv>\n          <input\n            type=\"radio\"\n            checked={checked === value}\n            onChange={() => setter(value)}\n            value={value}\n          />\n          <LabelDiv>\n            <div>{label}</div>\n          </LabelDiv>\n        </InputStyleDiv>\n      </label>\n    );\n  };\n\n  const id = `qNum${props.opts.qNum}`;\n\n  let [selected, setSelected] = useState();\n\n  const handleChange = (e) => {\n    requiredAnswersObj[id] = \"answered\";\n    setRequiredAnswersObj(requiredAnswersObj);\n\n    results[`qNum${props.opts.qNum}`] = +e.target.value + 1;\n\n    answersStorage[`qNum${props.opts.qNum}`] = +e.target.value;\n    setAnswersStorage(answersStorage);\n    setResultsSurvey(results);\n    setTestValue(true);\n  }; // end handle change\n\n  // check if response is in global state and inject into results\n  if (id in answersStorage) {\n    let response = answersStorage[id];\n    selected = response;\n    testValue = true;\n\n    requiredAnswersObj[id] = \"answered\";\n    setRequiredAnswersObj(requiredAnswersObj);\n\n    results[`qNum${props.opts.qNum}`] = +response + 1;\n\n    setResultsSurvey(results);\n  }\n\n  useEffect(() => {\n    // if is a required question, check if all parts answered\n    if (\n      (props.opts.required === true || props.opts.required === \"true\") &&\n      checkRequiredQuestionsComplete === true &&\n      testValue === false\n    ) {\n      setFormatOptions({ bgColor: \"lightpink\", border: \"3px dashed black\" });\n    } else {\n      setFormatOptions({\n        bgColor: \"whitesmoke\",\n        border: \"none\",\n      });\n    }\n  }, [checkRequiredQuestionsComplete, testValue, props.opts.required]);\n\n  const RadioItems = () => {\n    const radioList = optsArray.map((item, index) => (\n      <div key={uuid()}>\n        <RadioInput\n          value={index}\n          checked={selected}\n          label={item}\n          setter={setSelected}\n        />\n      </div>\n    ));\n    return <div>{radioList}</div>;\n  };\n\n  const labelText = ReactHtmlParser(decodeHTML(props.opts.label));\n  const noteText = ReactHtmlParser(decodeHTML(props.opts.note));\n\n  return (\n    <Container bgColor={formatOptions.bgColor} border={formatOptions.border}>\n      <TitleBar>\n        <div>{labelText}</div>\n      </TitleBar>\n      <NoteText>\n        <div>{noteText}</div>\n      </NoteText>\n      <RadioContainer onChange={(e) => handleChange(e)}>\n        <RadioItems />\n      </RadioContainer>\n    </Container>\n  );\n};\n\nexport default SurveyRadioElement;\n\nconst Container = styled.div`\n  width: 90vw;\n  padding: 20px;\n  margin-left: 20px;\n  margin-right: 20px;\n  max-width: 1300px;\n  min-height: 200px;\n  background-color: ${(props) => props.bgColor};\n  outline: ${(props) => props.border};\n  outline-offset: -3px;\n`;\n\nconst TitleBar = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  min-height: 50px;\n  padding: 5px;\n  font-size: 18px;\n  text-align: center;\n  background-color: lightgray;\n  width: 100%;\n  border-radius: 3px;\n`;\n\nconst RadioContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: left;\n  align-items: left;\n  padding: 20px;\n  vertical-align: center;\n  margin-top: 0px;\n  min-height: 100px;\n  font-size: 16px;\n  background-color: white;\n  width: 100%;\n  border-radius: 3px;\n  border: 2px solid lightgray;\n\n  input {\n    margin-top: 8px;\n  }\n\n  label {\n    margin-left: 8px;\n  }\n`;\n\nconst LabelDiv = styled.div`\n  padding-left: 5px;\n`;\n\nconst InputStyleDiv = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: baseline;\n`;\n\nconst NoteText = styled.div`\n  display: flex;\n  justify-content: left;\n  align-items: center;\n  vertical-align: center;\n  margin-top: 5px;\n  height: 50px;\n  font-size: 16px;\n  text-align: center;\n  background-color: whitesmoke;\n  width: 100%;\n  border-radius: 3px;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport MultiSelect from \"react-multi-select-component\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport decodeHTML from \"../../utilities/decodeHTML\";\nimport useStore from \"../../globalState/useStore\";\n\nconst getResults = (state) => state.resultsSurvey;\nconst getSetResultsSurvey = (state) => state.setResultsSurvey;\nconst getCheckReqQsComplete = (state) => state.checkRequiredQuestionsComplete;\nconst getRequiredAnswersObj = (state) => state.requiredAnswersObj;\nconst getSetRequiredAnswersObj = (state) => state.setRequiredAnswersObj;\nconst getAnswersStorage = (state) => state.answersStorage;\nconst getSetAnswersStorage = (state) => state.setAnswersStorage;\n\nconst SurveyDropdownElement = (props) => {\n  // STATE\n  const results = useStore(getResults);\n  const setResultsSurvey = useStore(getSetResultsSurvey);\n  const checkRequiredQuestionsComplete = useStore(getCheckReqQsComplete);\n  const requiredAnswersObj = useStore(getRequiredAnswersObj);\n  const setRequiredAnswersObj = useStore(getSetRequiredAnswersObj);\n  const answersStorage = useStore(getAnswersStorage);\n  const setAnswersStorage = useStore(getSetAnswersStorage);\n\n  useEffect(() => {\n    results[`qNum${props.opts.qNum}`] = \"no response\";\n    setResultsSurvey(results);\n  }, [props, results, setResultsSurvey]);\n\n  const [formatOptions, setFormatOptions] = useState({\n    bgColor: \"whitesmoke\",\n    border: \"none\",\n  });\n\n  const getOptionsArray = (options) => {\n    let array = options.split(\";;;\");\n    array = array.filter(function (e) {\n      return e;\n    });\n    const objArray = array.map((x) => {\n      x.replace(/\\s/g, \"\");\n      const tempObj = {};\n      tempObj.label = x;\n      tempObj.value = x;\n      return tempObj;\n    });\n    return objArray;\n  };\n\n  let originalOptions = props.opts.options.split(\";;;\");\n  originalOptions = originalOptions.map((x) => x.trim());\n\n  let localStore = {\n    hasBeenAnswered: false,\n  };\n\n  let [selected, setSelected] = useState([]);\n\n  const id = `qNum${props.opts.qNum}`;\n\n  // HANDLE ON CHANGE\n  const handleOnChange = (e) => {\n    setSelected(e);\n    answersStorage[id] = e;\n    setAnswersStorage(answersStorage);\n\n    if (e.length !== 0) {\n      requiredAnswersObj[id] = \"answered\";\n      let selected2 = \"\";\n      for (let i = 0; i < e.length; i++) {\n        let label = e[i].label;\n        let id = originalOptions.indexOf(label);\n        if (i === 0) {\n          selected2 += id + 1;\n        } else {\n          selected2 += \"|\" + (id + 1);\n        }\n      }\n      results[`qNum${props.opts.qNum}`] = selected2;\n      setResultsSurvey(results);\n    } else {\n      requiredAnswersObj[id] = \"no response\";\n      results[`qNum${props.opts.qNum}`] = \"no response\";\n      setResultsSurvey(results);\n    }\n    setRequiredAnswersObj(requiredAnswersObj);\n  };\n\n  if (selected.length > 0) {\n    localStore[\"hasBeenAnswered\"] = true;\n  } else {\n    localStore[\"hasBeenAnswered\"] = false;\n  }\n\n  // required question answered?\n  let hasBeenAnswered = localStore.hasBeenAnswered;\n\n  // check if response in global state and inject into results\n  if (id in answersStorage) {\n    let response = answersStorage[id];\n    selected = response;\n    hasBeenAnswered = true;\n\n    requiredAnswersObj[id] = \"answered\";\n    let selected2 = \"\";\n    for (let i = 0; i < response.length; i++) {\n      let label = response[i].label;\n      let id = originalOptions.indexOf(label);\n      if (i === 0) {\n        selected2 += id + 1;\n      } else {\n        selected2 += \"|\" + (id + 1);\n      }\n    }\n    results[`qNum${props.opts.qNum}`] = selected2;\n    setResultsSurvey(results);\n  }\n\n  useEffect(() => {\n    if (\n      (props.opts.required === true || props.opts.required === \"true\") &&\n      checkRequiredQuestionsComplete === true &&\n      hasBeenAnswered === false\n    ) {\n      setFormatOptions({\n        bgColor: \"lightpink\",\n        border: \"3px dashed black\",\n      });\n    } else {\n      setFormatOptions({\n        bgColor: \"whitesmoke\",\n        border: \"none\",\n      });\n    }\n  }, [checkRequiredQuestionsComplete, hasBeenAnswered, props.opts.required]);\n\n  const labelText = ReactHtmlParser(decodeHTML(props.opts.label));\n\n  return (\n    <Container bgColor={formatOptions.bgColor} border={formatOptions.border}>\n      <TitleBar>\n        <div>{labelText}</div>\n      </TitleBar>\n      <MultiSelect\n        className={\"multiselect\"}\n        options={getOptionsArray(props.opts.options)}\n        labelledBy=\"Select\"\n        onChange={handleOnChange}\n        value={selected}\n      />\n    </Container>\n  );\n};\n\nexport default SurveyDropdownElement;\n\nconst Container = styled.div`\n  width: 90vw;\n  padding: 20px;\n  margin-left: 20px;\n  margin-right: 20px;\n  max-width: 1300px;\n  min-height: 125px;\n  background-color: ${(props) => props.bgColor};\n  outline: ${(props) => props.border};\n  outline-offset: -3px;\n\n  .multiselect {\n    font-size: 16px;\n    line-height: 1.1em;\n  }\n`;\n\nconst TitleBar = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  min-height: 50px;\n  padding: 5px;\n  font-size: 18px;\n  text-align: center;\n  background-color: lightgray;\n  width: 100%;\n  border-radius: 3px;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { v4 as uuid } from \"uuid\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport decodeHTML from \"../../utilities/decodeHTML\";\nimport useStore from \"../../globalState/useStore\";\n\nconst getResults = (state) => state.resultsSurvey;\nconst getSetResultsSurvey = (state) => state.setResultsSurvey;\nconst getCheckReqQsComplete = (state) => state.checkRequiredQuestionsComplete;\nconst getRequiredAnswersObj = (state) => state.requiredAnswersObj;\nconst getSetRequiredAnswersObj = (state) => state.setRequiredAnswersObj;\nconst getAnswersStorage = (state) => state.answersStorage;\nconst getSetAnswersStorage = (state) => state.setAnswersStorage;\n\nconst SurveyCheckboxElement = (props) => {\n  // STATE\n  const results = useStore(getResults);\n  const setResultsSurvey = useStore(getSetResultsSurvey);\n  const checkRequiredQuestionsComplete = useStore(getCheckReqQsComplete);\n  const requiredAnswersObj = useStore(getRequiredAnswersObj);\n  const setRequiredAnswersObj = useStore(getSetRequiredAnswersObj);\n  const answersStorage = useStore(getAnswersStorage);\n  const setAnswersStorage = useStore(getSetAnswersStorage);\n\n  useEffect(() => {\n    results[`qNum${props.opts.qNum}`] = \"no response\";\n    setResultsSurvey(results);\n  }, [props, results, setResultsSurvey]);\n\n  let [hasBeenAnswered, setHasBeenAnswered] = useState(false);\n\n  let localStore = {};\n\n  const getOptionsArray = (options) => {\n    let array = options.split(\";;;\");\n    array = array.filter(function (e) {\n      return e;\n    });\n    array.map((x) => (localStore[x] = false));\n    return array;\n  };\n\n  const optsArray = getOptionsArray(props.opts.options);\n  const nameValue = `question${props.opts.qNum}`;\n\n  let [checkedState, setCheckedState] = useState(\n    new Array(optsArray.length).fill(false)\n  );\n\n  const [formatOptions, setFormatOptions] = useState({\n    bgColor: \"whitesmoke\",\n    border: \"none\",\n  });\n\n  const id = `qNum${props.opts.qNum}`;\n\n  // HANDLE CHANGE\n  const handleChange = (position) => {\n    position = parseInt(position, 10);\n    const updatedCheckedState = checkedState.map((item, index) =>\n      index === position ? !item : item\n    );\n\n    setCheckedState(updatedCheckedState);\n    answersStorage[id] = updatedCheckedState;\n    setAnswersStorage(answersStorage);\n\n    let selected = updatedCheckedState.reduce(\n      (text = \"\", currentState, index) => {\n        if (currentState === true) {\n          return text + (index + 1).toString() + \"|\";\n        }\n        return text;\n      },\n      \"\"\n    );\n\n    if (selected.charAt(selected.length - 1) === \"|\") {\n      selected = selected.substr(0, selected.length - 1);\n    }\n\n    if (selected.length > 0) {\n      setHasBeenAnswered(true);\n      requiredAnswersObj[id] = \"answered\";\n    } else {\n      setHasBeenAnswered(false);\n\n      requiredAnswersObj[id] = \"no response\";\n      selected = \"no response\";\n    }\n\n    results[`qNum${props.opts.qNum}`] = selected;\n    setResultsSurvey(results);\n    setRequiredAnswersObj(requiredAnswersObj);\n  };\n\n  if (id in answersStorage) {\n    let response = answersStorage[id];\n\n    checkedState = response;\n    hasBeenAnswered = true;\n\n    let selected = response.reduce((text = \"\", currentState, index) => {\n      if (currentState === true) {\n        return text + (index + 1).toString() + \"|\";\n      }\n      return text;\n    }, \"\");\n\n    if (selected.charAt(selected.length - 1) === \"|\") {\n      selected = selected.substring(0, selected.length - 1);\n    }\n\n    requiredAnswersObj[id] = \"answered\";\n\n    results[`qNum${props.opts.qNum}`] = selected;\n\n    setResultsSurvey(results);\n    setRequiredAnswersObj(requiredAnswersObj);\n  }\n\n  useEffect(() => {\n    if (\n      (props.opts.required === true || props.opts.required === \"true\") &&\n      checkRequiredQuestionsComplete === true &&\n      hasBeenAnswered === false\n    ) {\n      setFormatOptions({ bgColor: \"lightpink\", border: \"3px dashed black\" });\n    } else {\n      setFormatOptions({\n        bgColor: \"whitesmoke\",\n        border: \"none\",\n      });\n    }\n  }, [checkRequiredQuestionsComplete, hasBeenAnswered, props.opts.required]);\n\n  const labelText = ReactHtmlParser(decodeHTML(props.opts.label));\n\n  return (\n    <Container bgColor={formatOptions.bgColor} border={formatOptions.border}>\n      <TitleBar>\n        <div>{labelText}</div>\n      </TitleBar>\n      <RadioContainer>\n        {optsArray.map((item, index) => {\n          return (\n            <div key={uuid()}>\n              <input\n                id={`${item}-${index}`}\n                type=\"checkbox\"\n                value={item}\n                name={nameValue}\n                checked={checkedState[index]}\n                onChange={() => handleChange(index)}\n              />\n              <label htmlFor={`${item}-${index}`}>{item}</label>\n            </div>\n          );\n        })}\n      </RadioContainer>\n    </Container>\n  );\n};\n\nexport default SurveyCheckboxElement;\n\nconst Container = styled.div`\n  width: 90vw;\n  padding: 20px;\n  margin-left: 20px;\n  margin-right: 20px;\n  max-width: 1300px;\n  min-height: 150px;\n  background-color: ${(props) => props.bgColor};\n  outline: ${(props) => props.border};\n  outline-offset: -3px;\n`;\n\nconst TitleBar = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  min-height: 50px;\n  padding: 5px;\n  font-size: 18px;\n  text-align: center;\n  background-color: lightgray;\n  width: 100%;\n  border-radius: 3px;\n`;\n\nconst RadioContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: left;\n  align-items: left;\n  padding: 20px;\n  vertical-align: center;\n  margin-top: 0px;\n  min-height: 120px;\n  font-size: 16px;\n  background-color: white;\n  width: 100%;\n  border-radius: 3px;\n  border: 2px solid lightgray;\n\n  input {\n    margin-top: 8px;\n  }\n\n  label {\n    margin-left: 8px;\n  }\n`;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { v4 as uuid } from \"uuid\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport decodeHTML from \"../../utilities/decodeHTML\";\nimport useStore from \"../../globalState/useStore\";\n\nconst getResults = (state) => state.resultsSurvey;\nconst getSetResultsSurvey = (state) => state.setResultsSurvey;\nconst getCheckReqQsComplete = (state) => state.checkRequiredQuestionsComplete;\nconst getRequiredAnswersObj = (state) => state.requiredAnswersObj;\nconst getSetRequiredAnswersObj = (state) => state.setRequiredAnswersObj;\nconst getAnswersStorage = (state) => state.answersStorage;\nconst getSetAnswersStorage = (state) => state.setAnswersStorage;\n\nconst SurveyRatings2Element = (props) => {\n  // STATE\n  const results = useStore(getResults);\n  const setResultsSurvey = useStore(getSetResultsSurvey);\n  const checkRequiredQuestionsComplete = useStore(getCheckReqQsComplete);\n  const requiredAnswersObj = useStore(getRequiredAnswersObj);\n  const setRequiredAnswersObj = useStore(getSetRequiredAnswersObj);\n  const answersStorage = useStore(getAnswersStorage);\n  const setAnswersStorage = useStore(getSetAnswersStorage);\n\n  // local state for required question warning\n  let [testValue, setTestValue] = useState(5);\n  const [formatOptions, setFormatOptions] = useState({\n    bgColor: \"whitesmoke\",\n    border: \"none\",\n  });\n\n  // setup default results if no input\n  useEffect(() => {\n    let array = props.opts.options.split(\";;;\");\n    array = array.filter(function (e) {\n      return e;\n    });\n\n    const length = array.length;\n\n    for (let i = 0; i < length; i++) {\n      results[`qNum${props.opts.qNum}-${i + 1}`] = \"no response\";\n    }\n\n    setResultsSurvey(results);\n  }, [props, setResultsSurvey, results]);\n\n  // filter to remove empty strings if present\n  const getOptionsArray = (options) => {\n    let array = options.split(\";;;\");\n    array = array.filter(function (e) {\n      return e;\n    });\n    return array;\n  };\n\n  // to use with required check and related css formatting\n  const [localStore, setLocalStore] = useState({});\n\n  const optsArray = getOptionsArray(props.opts.options);\n  const rows = optsArray.length;\n\n  const getScaleArray = (options) => {\n    let array = options.split(\";;;\");\n    return array;\n  };\n  const scaleArray = getScaleArray(props.opts.scale);\n\n  // setup local state\n  let [checkedState, setCheckedState] = useState(\n    Array.from({ length: rows }, () => Array.from({ length: 2 }, () => false))\n  );\n\n  const id = `qNum${props.opts.qNum}`;\n\n  // ****** ON CHANGE  *******\n\n  const handleChange = (selectedRow, column, e) => {\n    let name = e.target.name;\n    let value = e.target.value;\n\n    // needed for required question check\n    const newObj = localStore;\n    newObj[name] = value;\n    setLocalStore(newObj);\n    answersStorage[id] = newObj;\n\n    // update local state with radio selected\n    const newArray = [];\n    const newCheckedState = checkedState.map(function (row, index) {\n      if (selectedRow === index) {\n        row.map(function (item, index) {\n          if (column === index) {\n            newArray.push(true);\n            return null;\n          } else {\n            newArray.push(false);\n            return null;\n          }\n        });\n        return newArray;\n      } else {\n        return row;\n      }\n    });\n\n    setCheckedState(newCheckedState);\n    answersStorage[id][\"checkedState\"] = [...newCheckedState];\n    setAnswersStorage(answersStorage);\n\n    // record if answered or not\n    if (newCheckedState.length > 0) {\n      requiredAnswersObj[id] = \"answered\";\n    } else {\n      requiredAnswersObj[id] = \"no response\";\n    }\n    setRequiredAnswersObj(requiredAnswersObj);\n    results[name] = +value;\n    setResultsSurvey(results);\n\n    const rating2State = localStore;\n    const testArray = Object.keys(rating2State);\n    const conditionalLength = testArray.length;\n    setTestValue(optsArray.length - conditionalLength);\n  };\n\n  if (id in answersStorage) {\n    // set state - answered or no response (checks all parts)\n    const keys2 = Object.keys(answersStorage[id]);\n\n    // skip check that all answered if not required\n    // prevents error in which answering only one\n    // prevents navigation\n    if (props.opts.required === true || props.opts.required === \"true\") {\n      let objLen = keys2.length - 1;\n      if (objLen >= rows) {\n        testValue = 0;\n        requiredAnswersObj[id] = \"answered\";\n        setRequiredAnswersObj(requiredAnswersObj);\n      } else {\n        testValue = 1;\n        requiredAnswersObj[id] = \"no response\";\n        setRequiredAnswersObj(requiredAnswersObj);\n      }\n    }\n\n    keys2.forEach((item, index) => {\n      if (item !== \"checkedState\") {\n        results[item] = answersStorage[id][item];\n      }\n    });\n\n    checkedState = [...answersStorage[id][\"checkedState\"]];\n  }\n\n  useEffect(() => {\n    // if is a required question, check if all parts answered\n    if (\n      (props.opts.required === true || props.opts.required === \"true\") &&\n      checkRequiredQuestionsComplete === true &&\n      testValue > 0\n    ) {\n      setFormatOptions({ bgColor: \"lightpink\", border: \"3px dashed black\" });\n    } else {\n      setFormatOptions({\n        bgColor: \"whitesmoke\",\n        border: \"none\",\n      });\n    }\n  }, [checkRequiredQuestionsComplete, testValue, props.opts.required]);\n\n  const RadioItems = () => {\n    const radioList = optsArray.map((item, index) => {\n      const itemText = ReactHtmlParser(decodeHTML(item));\n      return (\n        <ItemContainer indexVal={index} key={uuid()}>\n          <OptionsText key={uuid()}>{itemText}</OptionsText>\n          <RadioInput\n            key={uuid()}\n            id={`Q-${index}`}\n            type=\"radio\"\n            value={1}\n            name={`qNum${props.opts.qNum}-${index + 1}`}\n            onChange={(e) => handleChange(index, 0, e)}\n            checked={checkedState[index][0]}\n          />\n          <RadioInput\n            key={uuid()}\n            id={`Q2-${index}`}\n            type=\"radio\"\n            value={2}\n            name={`qNum${props.opts.qNum}-${index + 1}`}\n            onChange={(e) => handleChange(index, 1, e)}\n            checked={checkedState[index][1]}\n          />\n        </ItemContainer>\n      );\n    });\n    return <div>{radioList}</div>;\n  };\n\n  const labelText = ReactHtmlParser(decodeHTML(props.opts.label));\n\n  return (\n    <Container bgColor={formatOptions.bgColor} border={formatOptions.border}>\n      <TitleBar>\n        <div>{labelText}</div>\n      </TitleBar>\n      <RadioContainer>\n        <RatingTitle>\n          <div />\n          <ScaleDiv>\n            <div>{ReactHtmlParser(decodeHTML(scaleArray[0]))}</div>\n          </ScaleDiv>\n          <ScaleDiv>\n            <div>{ReactHtmlParser(decodeHTML(scaleArray[1]))}</div>\n          </ScaleDiv>\n        </RatingTitle>\n        <RadioItems />\n      </RadioContainer>\n    </Container>\n  );\n};\n\nexport default SurveyRatings2Element;\n\nconst Container = styled.div`\n  width: 90vw;\n  padding: 20px;\n  margin-left: 20px;\n  margin-right: 20px;\n  max-width: 1300px;\n  min-height: 200px;\n  background-color: ${(props) => props.bgColor};\n  outline: ${(props) => props.border};\n  outline-offset: -3px;\n`;\n\nconst TitleBar = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  min-height: 50px;\n  padding: 5px;\n  font-size: 18px;\n  text-align: center;\n  background-color: lightgray;\n  width: 100%;\n  border-radius: 3px;\n`;\n\nconst RadioContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: left;\n  align-items: left;\n  padding: 20px;\n  vertical-align: center;\n  margin-top: 0px;\n  height: auto;\n  min-height: 50px;\n  font-size: 16px;\n  background-color: white;\n  width: 100%;\n  border-radius: 3px;\n  border: 2px solid lightgray;\n\n  input {\n    margin-top: 8px;\n  }\n\n  label {\n    margin-left: 8px;\n  }\n`;\n\nconst ItemContainer = styled.div`\n  display: inline-grid;\n  grid-template-columns: minmax(30%, 900px) 100px 100px 150px;\n  margin-bottom: 17px;\n  padding-left: 5px;\n  padding-bottom: 3px;\n  height: 40px;\n  align-items: end;\n  background-color: ${(props) => (props.indexVal % 2 ? \"white\" : \"#ececec\")};\n`;\n\nconst RatingTitle = styled.div`\n  display: inline-grid;\n  grid-template-columns: minmax(30%, 900px) 100px 100px 150px;\n  margin-bottom: 7px;\n`;\n\nconst ScaleDiv = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst RadioInput = styled.input`\n  display: flex;\n  justify-self: center;\n  align-self: center;\n`;\n\nconst OptionsText = styled.span`\n  margin-bottom: 2px;\n  padding-left: 5px;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { v4 as uuid } from \"uuid\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport decodeHTML from \"../../utilities/decodeHTML\";\nimport useStore from \"../../globalState/useStore\";\n\nconst getResults = (state) => state.resultsSurvey;\nconst getSetResultsSurvey = (state) => state.setResultsSurvey;\nconst getCheckReqQsComplete = (state) => state.checkRequiredQuestionsComplete;\nconst getRequiredAnswersObj = (state) => state.requiredAnswersObj;\nconst getSetRequiredAnswersObj = (state) => state.setRequiredAnswersObj;\nconst getAnswersStorage = (state) => state.answersStorage;\nconst getSetAnswersStorage = (state) => state.setAnswersStorage;\n\nconst SurveyRatings5Element = (props) => {\n  // STATE\n  const results = useStore(getResults);\n  const setResultsSurvey = useStore(getSetResultsSurvey);\n  const checkRequiredQuestionsComplete = useStore(getCheckReqQsComplete);\n  const requiredAnswersObj = useStore(getRequiredAnswersObj);\n  const setRequiredAnswersObj = useStore(getSetRequiredAnswersObj);\n  const answersStorage = useStore(getAnswersStorage);\n  const setAnswersStorage = useStore(getSetAnswersStorage);\n\n  // let savedTextAreaText;\n  let [testValue, setTestValue] = useState(5);\n  const [formatOptions, setFormatOptions] = useState({\n    bgColor: \"whitesmoke\",\n    border: \"none\",\n  });\n\n  useEffect(() => {\n    let array = props.opts.options.split(\";;;\");\n    array = array.filter(function (e) {\n      return e;\n    });\n    const length = array.length;\n    for (let i = 0; i < length; i++) {\n      results[`qNum${props.opts.qNum}-${i + 1}`] = \"no response\";\n    }\n    setResultsSurvey(results);\n  }, [props, results, setResultsSurvey]);\n\n  // filter to remove empty strings if present\n  const getOptionsArray = (options) => {\n    let array = options.split(\";;;\");\n    array = array.filter(function (e) {\n      return e;\n    });\n    return array;\n  };\n\n  // to use with required check and related css formating\n  const [local5Store, setLocal5Store] = useState({});\n\n  const optsArray = getOptionsArray(props.opts.options);\n  const rows = optsArray.length;\n\n  // setup local state with length 5\n  let [checked5State, setChecked5State] = useState(\n    Array.from({ length: rows }, () => Array.from({ length: 5 }, () => false))\n  );\n\n  const id = `qNum${props.opts.qNum}`;\n\n  // HANDLE CHANGE\n  const handleChange = (selectedRow, column, e) => {\n    let name = e.target.name;\n    let value = e.target.value;\n\n    // needed for required question check\n    const newObj = local5Store;\n    newObj[name] = value;\n    setLocal5Store(newObj);\n    answersStorage[id] = newObj;\n\n    // update local state with radio selected\n    const newArray = [];\n    const newChecked5State = checked5State.map(function (row, index) {\n      if (selectedRow === index) {\n        row.map(function (item, index) {\n          if (column === index) {\n            newArray.push(true);\n            return null;\n          } else {\n            newArray.push(false);\n            return null;\n          }\n        });\n        return newArray;\n      } else {\n        return row;\n      }\n    });\n    setChecked5State(newChecked5State);\n\n    answersStorage[id][\"checkedState\"] = [...newChecked5State];\n    setAnswersStorage(answersStorage);\n\n    // record if answered or not\n    if (newChecked5State.length > 0) {\n      requiredAnswersObj[id] = \"answered\";\n    } else {\n      requiredAnswersObj[id] = \"no response\";\n    }\n    setRequiredAnswersObj(requiredAnswersObj);\n    results[name] = +value;\n\n    setResultsSurvey(results);\n\n    // if is a required question, check if all parts answered\n    // const rating5State = local5Store;\n    const testArray = Object.keys(local5Store);\n    const conditionalLength = testArray.length;\n    setTestValue(optsArray.length - conditionalLength);\n  };\n\n  if (id in answersStorage) {\n    const keys2 = Object.keys(answersStorage[id]);\n\n    // skip check that all answered if not required\n    // prevents error in which answering only one\n    // prevents navigation\n    if (props.opts.required === true || props.opts.required === \"true\") {\n      let objLen = keys2.length - 1;\n      if (objLen >= rows) {\n        testValue = 0;\n        requiredAnswersObj[id] = \"answered\";\n        setRequiredAnswersObj(requiredAnswersObj);\n      } else {\n        testValue = 1;\n        requiredAnswersObj[id] = \"no response\";\n        setRequiredAnswersObj(requiredAnswersObj);\n      }\n    }\n\n    keys2.forEach((item, index) => {\n      if (item !== \"checkedState\") {\n        results[item] = answersStorage[id][item];\n      }\n    });\n\n    checked5State = [...answersStorage[id][\"checkedState\"]];\n  }\n\n  useEffect(() => {\n    // if is a required question, check if all parts answered\n    if (\n      (props.opts.required === true || props.opts.required === \"true\") &&\n      checkRequiredQuestionsComplete === true &&\n      testValue > 0\n    ) {\n      setFormatOptions({ bgColor: \"lightpink\", border: \"3px dashed black\" });\n    } else {\n      setFormatOptions({\n        bgColor: \"whitesmoke\",\n        border: \"none\",\n      });\n    }\n  }, [checkRequiredQuestionsComplete, testValue, props.opts.required]);\n\n  const RadioItems = () => {\n    const radioList = optsArray.map((item, index) => {\n      const itemText = ReactHtmlParser(decodeHTML(item));\n      return (\n        <ItemContainer indexVal={index} key={uuid()}>\n          <OptionsText key={uuid()}>{itemText}</OptionsText>\n          <RadioInput\n            key={uuid()}\n            id={`Q-${index}`}\n            type=\"radio\"\n            value={1}\n            name={`qNum${props.opts.qNum}-${index + 1}`}\n            onChange={(e) => handleChange(index, 0, e)}\n            checked={checked5State[index][0]}\n          />\n          <RadioInput\n            key={uuid()}\n            id={`Q2-${index}`}\n            type=\"radio\"\n            value={2}\n            name={`qNum${props.opts.qNum}-${index + 1}`}\n            onChange={(e) => handleChange(index, 1, e)}\n            checked={checked5State[index][1]}\n          />\n          <RadioInput\n            key={uuid()}\n            id={`Q3-${index}`}\n            type=\"radio\"\n            value={3}\n            name={`qNum${props.opts.qNum}-${index + 1}`}\n            onChange={(e) => handleChange(index, 2, e)}\n            checked={checked5State[index][2]}\n          />\n          <RadioInput\n            key={uuid()}\n            id={`Q4-${index}`}\n            type=\"radio\"\n            value={4}\n            name={`qNum${props.opts.qNum}-${index + 1}`}\n            onChange={(e) => handleChange(index, 3, e)}\n            checked={checked5State[index][3]}\n          />\n          <RadioInput\n            key={uuid()}\n            id={`Q5-${index}`}\n            type=\"radio\"\n            value={5}\n            name={`qNum${props.opts.qNum}-${index + 1}`}\n            onChange={(e) => handleChange(index, 4, e)}\n            checked={checked5State[index][4]}\n          />\n        </ItemContainer>\n      );\n    });\n    return <div>{radioList}</div>;\n  };\n\n  const labelText = ReactHtmlParser(decodeHTML(props.opts.label));\n\n  return (\n    <Container bgColor={formatOptions.bgColor} border={formatOptions.border}>\n      <TitleBar>\n        <div>{labelText}</div>\n      </TitleBar>\n      <RadioContainer>\n        <RatingTitle>\n          <div />\n          <CircleDiv>1</CircleDiv>\n          <CircleDiv>2</CircleDiv>\n          <CircleDiv>3</CircleDiv>\n          <CircleDiv>4</CircleDiv>\n          <CircleDiv>5</CircleDiv>\n        </RatingTitle>\n        <RadioItems />\n      </RadioContainer>\n    </Container>\n  );\n};\n\nexport default SurveyRatings5Element;\n\nconst Container = styled.div`\n  width: 90vw;\n  padding: 20px;\n  margin-left: 20px;\n  margin-right: 20px;\n  max-width: 1300px;\n  min-height: 200px;\n  background-color: ${(props) => props.bgColor};\n  outline: ${(props) => props.border};\n  outline-offset: -3px;\n`;\n\nconst TitleBar = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  min-height: 50px;\n  padding: 5px;\n  font-size: 18px;\n  text-align: center;\n  background-color: lightgray;\n  width: 100%;\n  border-radius: 3px;\n`;\n\nconst RadioContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: left;\n  align-items: left;\n  padding: 20px;\n  vertical-align: center;\n  margin-top: 0px;\n  height: auto;\n  min-height: 50px;\n  font-size: 18px;\n  background-color: white;\n  width: 100%;\n  border-radius: 3px;\n  border: 2px solid lightgray;\n\n  input {\n    margin-top: 8px;\n  }\n\n  label {\n    margin-left: 8px;\n  }\n`;\n\nconst ItemContainer = styled.div`\n  display: inline-grid;\n  grid-template-columns: minmax(30%, 900px) 50px 50px 50px 50px 50px 50px;\n  margin-bottom: 17px;\n  padding-bottom: 3px;\n  height: 40px;\n  background-color: ${(props) => (props.indexVal % 2 ? \"white\" : \"#ececec\")};\n  font-size: 16px;\n  align-items: end;\n`;\n\nconst RatingTitle = styled.div`\n  display: inline-grid;\n  grid-template-columns: minmax(30%, 900px) 50px 50px 50px 50px 50px 50px;\n  margin-bottom: 7px;\n  align-items: end;\n`;\n\nconst RadioInput = styled.input`\n  display: flex;\n  justify-self: center;\n  align-self: center;\n  text-align: center;\n`;\n\nconst CircleDiv = styled.div`\n  display: flex;\n  justify-self: center;\n  align-self: center;\n  text-align: center;\n`;\n\nconst OptionsText = styled.span`\n  margin-bottom: 2px;\n  padding-left: 5px;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { v4 as uuid } from \"uuid\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport decodeHTML from \"../../utilities/decodeHTML\";\nimport useStore from \"../../globalState/useStore\";\n\nconst getResults = (state) => state.resultsSurvey;\nconst getSetResultsSurvey = (state) => state.setResultsSurvey;\nconst getCheckReqQsComplete = (state) => state.checkRequiredQuestionsComplete;\nconst getRequiredAnswersObj = (state) => state.requiredAnswersObj;\nconst getSetRequiredAnswersObj = (state) => state.setRequiredAnswersObj;\nconst getAnswersStorage = (state) => state.answersStorage;\nconst getSetAnswersStorage = (state) => state.setAnswersStorage;\n\nconst SurveyRatings10Element = (props) => {\n  // STATE\n  const results = useStore(getResults);\n  const setResultsSurvey = useStore(getSetResultsSurvey);\n  const checkRequiredQuestionsComplete = useStore(getCheckReqQsComplete);\n  const requiredAnswersObj = useStore(getRequiredAnswersObj);\n  const setRequiredAnswersObj = useStore(getSetRequiredAnswersObj);\n  const answersStorage = useStore(getAnswersStorage);\n  const setAnswersStorage = useStore(getSetAnswersStorage);\n\n  // local state for required question warning\n  let [testValue, setTestValue] = useState(5);\n  const [formatOptions, setFormatOptions] = useState({\n    bgColor: \"whitesmoke\",\n    border: \"none\",\n  });\n\n  useEffect(() => {\n    let array = props.opts.options.split(\";;;\");\n    array = array.filter(function (e) {\n      return e;\n    });\n\n    const length = array.length;\n\n    for (let i = 0; i < length; i++) {\n      results[`qNum${props.opts.qNum}-${i + 1}`] = \"no response\";\n    }\n\n    setResultsSurvey(results);\n  }, [props, results, setResultsSurvey]);\n\n  // filter to remove empty strings if present\n  const getOptionsArray = (options) => {\n    let array = options.split(\";;;\");\n    array = array.filter(function (e) {\n      return e;\n    });\n    return array;\n  };\n\n  // to use with required check and related css formating\n  const [localStore, setLocalStore] = useState({});\n\n  const optsArray = getOptionsArray(props.opts.options);\n  const rows = optsArray.length;\n\n  // setup local state\n  let [checkedState, setCheckedState] = useState(\n    Array.from({ length: rows }, () => Array.from({ length: 10 }, () => false))\n  );\n\n  const id = `qNum${props.opts.qNum}`;\n\n  const handleChange = (selectedRow, column, e) => {\n    let name = e.target.name;\n    let value = e.target.value;\n\n    // needed for required question check\n    const newObj = localStore;\n    newObj[name] = value;\n    setLocalStore(newObj);\n    answersStorage[id] = newObj;\n\n    // update local state with radio selected\n    const newArray = [];\n    const newCheckedState = checkedState.map(function (row, index) {\n      if (selectedRow === index) {\n        row.map(function (item, index) {\n          if (column === index) {\n            newArray.push(true);\n            return null;\n          } else {\n            newArray.push(false);\n            return null;\n          }\n        });\n        return newArray;\n      } else {\n        return row;\n      }\n    });\n    setCheckedState(newCheckedState);\n\n    answersStorage[id][\"checkedState\"] = [...newCheckedState];\n    setAnswersStorage(answersStorage);\n\n    // record if answered or not\n    if (newCheckedState.length > 0) {\n      requiredAnswersObj[id] = \"answered\";\n    } else {\n      requiredAnswersObj[id] = \"no response\";\n    }\n    setRequiredAnswersObj(requiredAnswersObj);\n    results[name] = +value;\n    setResultsSurvey(results);\n\n    // if is a required question, check if all parts answered\n    const ratingState = localStore;\n    const testArray = Object.keys(ratingState);\n    const conditionalLength = testArray.length;\n    setTestValue(optsArray.length - conditionalLength);\n  };\n\n  if (id in answersStorage) {\n    const keys2 = Object.keys(answersStorage[id]);\n\n    // skip check that all answered if not required\n    // prevents error in which answering only one\n    // prevents navigation\n    if (props.opts.required === true || props.opts.required === \"true\") {\n      let objLen = keys2.length - 1;\n      if (objLen >= rows) {\n        testValue = 0;\n        requiredAnswersObj[id] = \"answered\";\n        setRequiredAnswersObj(requiredAnswersObj);\n      } else {\n        testValue = 1;\n        requiredAnswersObj[id] = \"no response\";\n        setRequiredAnswersObj(requiredAnswersObj);\n      }\n    }\n    keys2.forEach((item, index) => {\n      if (item !== \"checkedState\") {\n        results[item] = answersStorage[id][item];\n      }\n    });\n\n    checkedState = [...answersStorage[id][\"checkedState\"]];\n  }\n\n  useEffect(() => {\n    // if is a required question, check if all parts answered\n    if (\n      (props.opts.required === true || props.opts.required === \"true\") &&\n      checkRequiredQuestionsComplete === true &&\n      testValue > 0\n    ) {\n      setFormatOptions({ bgColor: \"lightpink\", border: \"3px dashed black\" });\n    } else {\n      setFormatOptions({\n        bgColor: \"whitesmoke\",\n        border: \"none\",\n      });\n    }\n  }, [checkRequiredQuestionsComplete, testValue, props.opts.required]);\n\n  const RadioItems = () => {\n    const radioList = optsArray.map((item, index) => {\n      const itemText = ReactHtmlParser(decodeHTML(item));\n      return (\n        <ItemContainer indexVal={index} key={uuid()}>\n          <OptionsText key={uuid()}>{itemText}</OptionsText>\n          <RadioInput\n            key={uuid()}\n            id={`Q-${index}`}\n            type=\"radio\"\n            value={1}\n            name={`qNum${props.opts.qNum}-${index + 1}`}\n            onChange={(e) => handleChange(index, 0, e)}\n            checked={checkedState[index][0]}\n          />\n          <RadioInput\n            key={uuid()}\n            id={`Q2-${index}`}\n            type=\"radio\"\n            value={2}\n            name={`qNum${props.opts.qNum}-${index + 1}`}\n            onChange={(e) => handleChange(index, 1, e)}\n            checked={checkedState[index][1]}\n          />\n          <RadioInput\n            key={uuid()}\n            id={`Q3-${index}`}\n            type=\"radio\"\n            value={3}\n            name={`qNum${props.opts.qNum}-${index + 1}`}\n            onChange={(e) => handleChange(index, 2, e)}\n            checked={checkedState[index][2]}\n          />\n          <RadioInput\n            key={uuid()}\n            id={`Q4-${index}`}\n            type=\"radio\"\n            value={4}\n            name={`qNum${props.opts.qNum}-${index + 1}`}\n            onChange={(e) => handleChange(index, 3, e)}\n            checked={checkedState[index][3]}\n          />\n          <RadioInput\n            key={uuid()}\n            id={`Q5-${index}`}\n            type=\"radio\"\n            value={5}\n            name={`qNum${props.opts.qNum}-${index + 1}`}\n            onChange={(e) => handleChange(index, 4, e)}\n            checked={checkedState[index][4]}\n          />\n          <RadioInput\n            key={uuid()}\n            id={`Q6-${index}`}\n            type=\"radio\"\n            value={6}\n            name={`qNum${props.opts.qNum}-${index + 1}`}\n            onChange={(e) => handleChange(index, 5, e)}\n            checked={checkedState[index][5]}\n          />\n          <RadioInput\n            key={uuid()}\n            id={`Q7-${index}`}\n            type=\"radio\"\n            value={7}\n            name={`qNum${props.opts.qNum}-${index + 1}`}\n            onChange={(e) => handleChange(index, 6, e)}\n            checked={checkedState[index][6]}\n          />\n          <RadioInput\n            key={uuid()}\n            id={`Q8-${index}`}\n            type=\"radio\"\n            value={8}\n            name={`qNum${props.opts.qNum}-${index + 1}`}\n            onChange={(e) => handleChange(index, 7, e)}\n            checked={checkedState[index][7]}\n          />\n          <RadioInput\n            key={uuid()}\n            id={`Q9-${index}`}\n            type=\"radio\"\n            value={9}\n            name={`qNum${props.opts.qNum}-${index + 1}`}\n            onChange={(e) => handleChange(index, 8, e)}\n            checked={checkedState[index][8]}\n          />\n          <RadioInput\n            key={uuid()}\n            id={`Q10-${index}`}\n            type=\"radio\"\n            value={10}\n            name={`qNum${props.opts.qNum}-${index + 1}`}\n            onChange={(e) => handleChange(index, 9, e)}\n            checked={checkedState[index][9]}\n          />\n        </ItemContainer>\n      );\n    });\n    return <div>{radioList}</div>;\n  };\n\n  const labelText = ReactHtmlParser(decodeHTML(props.opts.label));\n\n  return (\n    <Container bgColor={formatOptions.bgColor} border={formatOptions.border}>\n      <TitleBar>\n        <div>{labelText}</div>\n      </TitleBar>\n      <RadioContainer>\n        <RatingTitle>\n          <div />\n          <CircleDiv>1</CircleDiv>\n          <CircleDiv>2</CircleDiv>\n          <CircleDiv>3</CircleDiv>\n          <CircleDiv>4</CircleDiv>\n          <CircleDiv>5</CircleDiv>\n          <CircleDiv>6</CircleDiv>\n          <CircleDiv>7</CircleDiv>\n          <CircleDiv>8</CircleDiv>\n          <CircleDiv>9</CircleDiv>\n          <CircleDiv>10</CircleDiv>\n        </RatingTitle>\n        <RadioItems />\n      </RadioContainer>\n    </Container>\n  );\n};\n\nexport default SurveyRatings10Element;\n\nconst Container = styled.div`\n  width: 90vw;\n  padding: 20px;\n  margin-left: 20px;\n  margin-right: 20px;\n  max-width: 1300px;\n  min-height: 200px;\n  background-color: ${(props) => props.bgColor};\n  outline: ${(props) => props.border};\n  outline-offset: -3px;\n`;\n\nconst TitleBar = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  min-height: 50px;\n  padding: 5px;\n  font-size: 18px;\n  text-align: center;\n  background-color: lightgray;\n  width: 100%;\n  border-radius: 3px;\n`;\n\nconst RadioContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: left;\n  align-items: left;\n  padding: 20px;\n  vertical-align: center;\n  margin-top: 0px;\n  height: auto;\n  min-height: 50px;\n  font-size: 18px;\n  background-color: white;\n  width: 100%;\n  border-radius: 3px;\n  border: 2px solid lightgray;\n\n  input {\n    margin-top: 8px;\n  }\n\n  label {\n    margin-left: 8px;\n  }\n`;\n\nconst ItemContainer = styled.div`\n  display: inline-grid;\n  grid-template-columns: minmax(30%, 800px) 40px 40px 40px 40px 40px 40px 40px 40px 40px 40px 40px;\n  margin-bottom: 17px;\n  font-size: 16px;\n  align-items: end;\n  padding-bottom: 3px;\n  height: 40px;\n  background-color: ${(props) => (props.indexVal % 2 ? \"white\" : \"#ececec\")};\n  border-radius: 3px;\n`;\n\nconst RatingTitle = styled.div`\n  display: inline-grid;\n  grid-template-columns: minmax(30%, 800px) 40px 40px 40px 40px 40px 40px 40px 40px 40px 40px 40px;\n  margin-bottom: 7px;\n  align-items: end;\n`;\n\nconst CircleDiv = styled.div`\n  display: flex;\n  justify-self: center;\n  align-items: center;\n  text-align: center;\n`;\n\nconst RadioInput = styled.input`\n  display: flex;\n  justify-self: center;\n  align-self: center;\n  text-align: center;\n  margin-bottom: 6px;\n`;\n\nconst OptionsText = styled.span`\n  margin-bottom: 2px;\n  padding-left: 5px;\n`;\n","import React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport decodeHTML from \"../../utilities/decodeHTML\";\nimport useStore from \"../../globalState/useStore\";\n\nconst getResults = (state) => state.resultsSurvey;\nconst getSetResultsSurvey = (state) => state.setResultsSurvey;\n\nconst SurveyInformationElement = (props) => {\n  // STATE\n  const results = useStore(getResults);\n  const setResultsSurvey = useStore(getSetResultsSurvey);\n\n  useEffect(() => {\n    results[`qNum${props.opts.qNum}`] = \"info. - na\";\n    setResultsSurvey(results);\n  }, [props, results, setResultsSurvey]);\n\n  const infoText = ReactHtmlParser(decodeHTML(props.opts.options));\n\n  return (\n    <Container>\n      <TitleBar backgroundColor={props.opts.background}>\n        <div>{infoText}</div>\n      </TitleBar>\n    </Container>\n  );\n};\n\nexport default SurveyInformationElement;\n\nconst Container = styled.div`\n  width: 90vw;\n  padding: 20px;\n  margin-left: 20px;\n  margin-right: 20px;\n  max-width: 1300px;\n  background-color: whitesmoke;\n  min-height: 50px;\n`;\n\nconst TitleBar = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 5px;\n  min-height: 50px;\n  font-size: 18px;\n  text-align: center;\n  background-color: ${(props) => props.backgroundColor || \"lightgray\"};\n  width: 100%;\n  border-radius: 3px;\n`;\n","import React from \"react\";\nimport \"react-responsive-modal/styles.css\";\nimport { Modal } from \"react-responsive-modal\";\nimport styled from \"styled-components\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport decodeHTML from \"../../utilities/decodeHTML\";\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\nimport useStore from \"../../globalState/useStore\";\n\nconst getLangObj = (state) => state.langObj;\nconst getTriggerModalOpen = (state) => state.triggerSurveyPreventNavModal;\nconst getSetTrigSurvPrevNavModal = (state) =>\n  state.setTriggerSurveyPreventNavModal;\n\nconst AnswerAllSurveyQuestionsModal = () => {\n  // STATE\n  const langObj = useSettingsStore(getLangObj);\n  const triggerModalOpen = useStore(getTriggerModalOpen);\n  const setTriggerSurveyPreventNavModal = useStore(getSetTrigSurvPrevNavModal);\n\n  const modalHead = ReactHtmlParser(\n    decodeHTML(langObj.surveyPreventNavModalHead)\n  );\n  const modalText = ReactHtmlParser(\n    decodeHTML(langObj.surveyPreventNavModalText)\n  );\n\n  // const onOpenModal = () => setOpen(true);\n  const onCloseModal = () => {\n    setTriggerSurveyPreventNavModal(false);\n  };\n\n  return (\n    <Modal\n      className=\"customModal\"\n      open={triggerModalOpen}\n      onClose={onCloseModal}\n      center\n    >\n      <ModalHeader>{modalHead}</ModalHeader>\n      <hr />\n      <ModalContent>{modalText}</ModalContent>\n    </Modal>\n  );\n};\n\nexport default AnswerAllSurveyQuestionsModal;\n\nconst ModalHeader = styled.div`\n  font-size: 24px;\n  line-height: 1.42;\n  padding: 10px 0px 10px 0px;\n\n  hr {\n    color: black;\n  }\n`;\n\nconst ModalContent = styled.div`\n  margin-top: 15px;\n`;\n\n// react-responsive-modal-overlay\n","import React from \"react\";\nimport \"react-responsive-modal/styles.css\";\nimport { Modal } from \"react-responsive-modal\";\nimport styled from \"styled-components\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport decodeHTML from \"../../utilities/decodeHTML\";\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\nimport useStore from \"../../globalState/useStore\";\n\nconst getLangObj = (state) => state.langObj;\nconst getTriggerSurveyModal = (state) => state.triggerSurveyModal;\nconst getSetTriggerSurveyModal = (state) => state.setTriggerSurveyModal;\n\nconst SurveyHelpModal = () => {\n  // STATE\n  const langObj = useSettingsStore(getLangObj);\n  const triggerSurveyModal = useStore(getTriggerSurveyModal);\n  const setTriggerSurveyModal = useStore(getSetTriggerSurveyModal);\n\n  const helpModalHead = ReactHtmlParser(decodeHTML(langObj.surveyModalHead));\n  const helpModalText = ReactHtmlParser(decodeHTML(langObj.surveyModalText));\n\n  // const onOpenModal = () => setOpen(true);\n  const onCloseModal = () => {\n    setTriggerSurveyModal(false);\n  };\n\n  return (\n    <Modal\n      className=\"customModal\"\n      open={triggerSurveyModal}\n      onClose={onCloseModal}\n      center\n    >\n      <ModalHeader>{helpModalHead}</ModalHeader>\n      <hr />\n      <ModalContent>{helpModalText}</ModalContent>\n    </Modal>\n  );\n};\n\nexport default SurveyHelpModal;\n\nconst ModalHeader = styled.div`\n  font-size: 24px;\n  line-height: 1.42;\n  padding: 10px 0px 10px 0px;\n\n  hr {\n    color: black;\n  }\n`;\n\nconst ModalContent = styled.div`\n  margin-top: 15px;\n  font-weight: normal;\n`;\n\n// react-responsive-modal-overlay\n","import React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport SurveyTextElement from \"./SurveyTextElement\";\nimport SurveyTextAreaElement from \"./SurveyTextAreaElement\";\nimport SurveyRadioElement from \"./SurveyRadioElement\";\nimport SurveyDropdownElement from \"./SurveyDropdownElement\";\nimport SurveyCheckboxElement from \"./SurveyCheckboxElement\";\nimport SurveyRating2Element from \"./SurveyRating2Element\";\nimport SurveyRating5Element from \"./SurveyRating5Element\";\nimport SurveyRating10Element from \"./SurveyRating10Element\";\nimport SurveyInformationElement from \"./SurveyInformationElement\";\nimport { v4 as uuid } from \"uuid\";\nimport calculateTimeOnPage from \"../../utilities/calculateTimeOnPage\";\nimport AnswerAllSurveyQuestionsModal from \"./AnswerAllSurveyQuestionsModal\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport decodeHTML from \"../../utilities/decodeHTML\";\nimport SurveyHelpModal from \"./SurveyHelpModal\";\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\nimport useStore from \"../../globalState/useStore\";\n\nconst getLangObj = (state) => state.langObj;\nconst getConfigObj = (state) => state.configObj;\nconst getSurveyQuestionObjArray = (state) => state.surveyQuestionObjArray;\nconst getRequiredAnswersObj = (state) => state.requiredAnswersObj;\nconst getSetRequiredAnswersObj = (state) => state.setRequiredAnswersObj;\nconst getSetCurrentPage = (state) => state.setCurrentPage;\nconst getCheckReqQuesComplete = (state) => state.checkRequiredQuestionsComplete;\nconst getResults = (state) => state.results;\nconst getSetResults = (state) => state.setResults;\nconst getSetDisplayNextButton = (state) => state.setDisplayNextButton;\n\nconst SurveyPage = () => {\n  // STATE\n  const langObj = useSettingsStore(getLangObj);\n  const configObj = useSettingsStore(getConfigObj);\n  const surveyQuestionObjArray = useSettingsStore(getSurveyQuestionObjArray);\n  const requiredAnswersObj = useSettingsStore(getRequiredAnswersObj);\n  const setRequiredAnswersObj = useSettingsStore(getSetRequiredAnswersObj);\n  const setCurrentPage = useStore(getSetCurrentPage);\n  const checkRequiredQuestionsComplete = useStore(getCheckReqQuesComplete);\n  const results = useStore(getResults);\n  const setResults = useStore(getSetResults);\n  const setDisplayNextButton = useStore(getSetDisplayNextButton);\n\n  const headerBarColor = configObj.headerBarColor;\n  const surveyQuestionObjects = surveyQuestionObjArray;\n\n  // setup language\n  const surveyHeader = ReactHtmlParser(decodeHTML(langObj.surveyHeader));\n\n  // set next button display\n  setDisplayNextButton(true);\n\n  useEffect(() => {\n    // reset required questions if page return\n    let keys = Object.keys(requiredAnswersObj);\n    for (let i = 0; i < keys.length; i++) {\n      requiredAnswersObj[keys[i]] = \"no response\";\n    }\n    setRequiredAnswersObj(requiredAnswersObj);\n  }, [setRequiredAnswersObj, requiredAnswersObj]);\n\n  useEffect(() => {\n    let startTime;\n    startTime = Date.now();\n    setCurrentPage(\"survey\");\n\n    return () => {\n      const updatedResults = calculateTimeOnPage(\n        startTime,\n        \"surveyPage\",\n        \"surveyPage\",\n        results\n      );\n      setResults(updatedResults);\n    };\n  }, [setCurrentPage, results, setResults]);\n\n  const SurveyQuestions = () => {\n    const QuestionList = surveyQuestionObjects.map((object, index) => {\n      if (object.type === \"text\") {\n        return (\n          <SurveyTextElement\n            key={uuid()}\n            check={checkRequiredQuestionsComplete}\n            opts={object}\n          />\n        );\n      }\n      if (object.type === \"textarea\") {\n        return <SurveyTextAreaElement key={uuid()} opts={object} />;\n      }\n      if (object.type === \"radio\") {\n        return <SurveyRadioElement key={uuid()} opts={object} />;\n      }\n      if (object.type === \"select\") {\n        return <SurveyDropdownElement key={uuid()} opts={object} />;\n      }\n      if (object.type === \"checkbox\") {\n        return <SurveyCheckboxElement key={uuid()} opts={object} />;\n      }\n      if (object.type === \"rating2\") {\n        return <SurveyRating2Element key={uuid()} opts={object} />;\n      }\n      if (object.type === \"rating5\") {\n        return <SurveyRating5Element key={uuid()} opts={object} />;\n      }\n      if (object.type === \"rating10\") {\n        return <SurveyRating10Element key={uuid()} opts={object} />;\n      }\n      if (object.type === \"information\") {\n        return <SurveyInformationElement key={uuid()} opts={object} />;\n      }\n      return null;\n    });\n    return QuestionList;\n  };\n\n  return (\n    <React.Fragment>\n      <SurveyHelpModal />\n      <AnswerAllSurveyQuestionsModal />\n      <SortTitleBar background={headerBarColor}>{surveyHeader}</SortTitleBar>\n      <Container>\n        <SurveyQuestions />\n      </Container>\n    </React.Fragment>\n  );\n};\n\nexport default SurveyPage;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding-bottom: 150px;\n  margin-top: 50px;\n`;\n\nconst SortTitleBar = styled.div`\n  width: 100vw;\n  padding-left: 1.5vw;\n  padding-right: 1.5vw;\n  padding-top: 5px;\n  min-height: 50px;\n  background-color: ${(props) => props.background};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: white;\n  font-weight: bold;\n  font-size: 28px;\n  position: fixed;\n  top: 0;\n  z-index: 9999;\n`;\n","import React from \"react\";\nclass NonExistentPage extends React.Component {\n  render() {\n    return (\n      <div>\n        {\" \"}\n        <h1>404</h1> <p>Page doesn't exist</p>\n      </div>\n    );\n  }\n}\nexport default NonExistentPage;\n","import useStore from \"../globalState/useStore\";\n\nconst processConfigXMLData = (dataObject) => {\n  const data = dataObject.elements[0].elements;\n  const configObj = {};\n  let surveyQuestionArray;\n\n  let surveyData = [];\n  for (let i = 0; i < data.length; i++) {\n    let value;\n\n    let tempObj = data[i];\n\n    let key = data[i].attributes.id;\n\n    // separate out survey questions\n    if (key === \"survey\") {\n      surveyData.push([...data[i].elements]);\n    }\n\n    // if it has a value in the XML file ==> no empty strings\n    if (\"elements\" in tempObj) {\n      value = data[i].elements[0].text;\n\n      // for all non-survey keys\n      if (key !== \"survey\") {\n        // deal with the array values\n        if (\n          key === \"columnHeadersColorsArray\" ||\n          key === \"columnColorsArray\" ||\n          key === \"qSortHeaderNumbers\" ||\n          key === \"qSortHeaders\" ||\n          key === \"qSortPattern\"\n        ) {\n        } else {\n          // for all others...\n          // convert string values -  boolean or number\n          if (value === \"true\") {\n            value = true;\n          } else if (value === \"false\") {\n            value = false;\n          } else if (!isNaN(value)) {\n            value = +value;\n          }\n          configObj[key] = value;\n        }\n      }\n    }\n  }\n\n  // setup survey object\n  const requiredAnswersObj = {};\n  if (surveyData.length > 0) {\n    surveyQuestionArray = [];\n    for (let j = 0; j < surveyData.length; j++) {\n      let tempObj = {};\n      // let tempObj2 = {};\n      let questionType = surveyData[j][0].attributes.type;\n\n      // INFORMATION question\n      if (questionType === \"information\") {\n        tempObj.qNum = j + 1;\n        tempObj.type = \"information\";\n        tempObj.background = surveyData[j][1].attributes.bg;\n\n        try {\n          tempObj.options = surveyData[j][1].elements[0].text;\n        } catch (error) {\n          console.log(error);\n          tempObj.options = \"\";\n        }\n\n        surveyQuestionArray.push(tempObj);\n      }\n\n      // TEXT question\n      if (questionType === \"text\") {\n        tempObj.id = `qNum${j + 1}`;\n        let isRequired = JSON.parse(surveyData[j][0].attributes.required);\n        if (isRequired === \"true\" || isRequired === true) {\n          isRequired = true;\n          requiredAnswersObj[`qNum${j + 1}`] = \"no response\";\n        }\n        tempObj.qNum = j + 1;\n        tempObj.type = \"text\";\n        tempObj.required = isRequired;\n\n        try {\n          tempObj.label = surveyData[j][1].elements[0].text;\n        } catch (error) {\n          console.log(error);\n          tempObj.label = \"\";\n        }\n\n        try {\n          tempObj.note = surveyData[j][2].elements[0].text;\n        } catch (error) {\n          tempObj.note = \"\";\n        }\n\n        try {\n          tempObj.limitLength = JSON.parse(\n            surveyData[j][0].attributes.maxlength\n          );\n        } catch (error) {\n          console.log(error);\n          tempObj.limitLength = \"999\";\n        }\n\n        try {\n          tempObj.restricted = surveyData[j][0].attributes.restricted;\n        } catch (error) {\n          console.log(error);\n          tempObj.restricted = \"false\";\n        }\n\n        try {\n          tempObj.limited = surveyData[j][0].attributes.limited;\n        } catch (error) {\n          console.log(error);\n          tempObj.limited = \"false\";\n        }\n\n        tempObj.hasBeenAnswered = false;\n\n        surveyQuestionArray.push(tempObj);\n      }\n\n      // TEXTAREA question\n      if (questionType === \"textarea\") {\n        tempObj.id = `qNum${j + 1}`;\n        let isRequired = JSON.parse(surveyData[j][0].attributes.required);\n        if (isRequired === \"true\" || isRequired === true) {\n          isRequired = true;\n          requiredAnswersObj[`qNum${j + 1}`] = \"no response\";\n        }\n        tempObj.qNum = j + 1;\n        tempObj.type = \"textarea\";\n\n        try {\n          tempObj.required = surveyData[j][0].attributes.required;\n        } catch (error) {\n          console.log(error);\n          tempObj.required = false;\n        }\n\n        try {\n          tempObj.label = surveyData[j][1].elements[0].text;\n        } catch (error) {\n          console.log(error);\n          tempObj.label = \"\";\n        }\n\n        try {\n          tempObj.placeholder = surveyData[j][2].elements[0].text;\n        } catch (error) {\n          console.log(error);\n          tempObj.placeholder = \"\";\n        }\n\n        tempObj.hasBeenAnswered = false;\n\n        surveyQuestionArray.push(tempObj);\n      }\n\n      // RADIO question\n      if (questionType === \"radio\") {\n        tempObj.id = `qNum${j + 1}`;\n        let isRequired = JSON.parse(surveyData[j][0].attributes.required);\n        if (isRequired === \"true\" || isRequired === true) {\n          isRequired = true;\n          requiredAnswersObj[`qNum${j + 1}`] = \"no response\";\n        }\n        tempObj.qNum = j + 1;\n        tempObj.type = \"radio\";\n\n        try {\n          tempObj.required = JSON.parse(surveyData[j][0].attributes.required);\n        } catch (error) {\n          console.log(error);\n          tempObj.required = \"false\";\n        }\n\n        try {\n          tempObj.label = surveyData[j][1].elements[0].text;\n        } catch (error) {\n          console.log(error);\n          tempObj.label = \"\";\n        }\n\n        try {\n          tempObj.note = surveyData[j][2].elements[0].text;\n        } catch (error) {\n          console.log(error);\n          tempObj.note = \"\";\n        }\n\n        try {\n          tempObj.options = surveyData[j][0].elements[0].text;\n        } catch (error) {\n          console.log(error);\n          tempObj.options = \"\";\n        }\n\n        tempObj.hasBeenAnswered = false;\n\n        surveyQuestionArray.push(tempObj);\n      }\n\n      // SELECT question\n      if (questionType === \"select\") {\n        tempObj.id = `qNum${j + 1}`;\n        let isRequired = JSON.parse(surveyData[j][0].attributes.required);\n        if (isRequired === \"true\" || isRequired === true) {\n          isRequired = true;\n          requiredAnswersObj[`qNum${j + 1}`] = \"no response\";\n        }\n        tempObj.qNum = j + 1;\n        tempObj.type = \"select\";\n\n        try {\n          tempObj.required = surveyData[j][0].attributes.required;\n        } catch (error) {\n          console.log(error);\n          tempObj.required = \"false\";\n        }\n\n        try {\n          tempObj.label = surveyData[j][1].elements[0].text;\n        } catch (error) {\n          console.log(error);\n          tempObj.label = \"\";\n        }\n\n        try {\n          tempObj.options = surveyData[j][0].elements[0].text;\n        } catch (error) {\n          console.log(error);\n          tempObj.options = \"\";\n        }\n\n        tempObj.hasBeenAnswered = false;\n\n        surveyQuestionArray.push(tempObj);\n      }\n\n      // CHECKBOX question\n      if (questionType === \"checkbox\") {\n        tempObj.id = `qNum${j + 1}`;\n        let isRequired = JSON.parse(surveyData[j][0].attributes.required);\n        if (isRequired === \"true\" || isRequired === true) {\n          isRequired = true;\n          requiredAnswersObj[`qNum${j + 1}`] = \"no response\";\n        }\n        tempObj.qNum = j + 1;\n        tempObj.type = \"checkbox\";\n        try {\n          tempObj.required = JSON.parse(surveyData[j][0].attributes.required);\n        } catch (error) {\n          console.log(error);\n          tempObj.required = \"false\";\n        }\n\n        try {\n          tempObj.label = surveyData[j][1].elements[0].text;\n        } catch (error) {\n          console.log(error);\n          tempObj.label = \"\";\n        }\n\n        try {\n          tempObj.options = surveyData[j][0].elements[0].text;\n        } catch (error) {\n          console.log(error);\n          tempObj.options = \"\";\n        }\n\n        tempObj.hasBeenAnswered = false;\n\n        surveyQuestionArray.push(tempObj);\n      }\n\n      // RATING2 question\n      if (questionType === \"rating2\") {\n        tempObj.id = `qNum${j + 1}`;\n        let isRequired = JSON.parse(surveyData[j][0].attributes.required);\n        if (isRequired === \"true\" || isRequired === true) {\n          isRequired = true;\n          requiredAnswersObj[`qNum${j + 1}`] = \"no response\";\n        }\n        tempObj.qNum = j + 1;\n        tempObj.type = \"rating2\";\n        try {\n          tempObj.required = surveyData[j][0].attributes.required;\n        } catch (error) {\n          console.log(error);\n          tempObj.required = \"false\";\n        }\n\n        try {\n          tempObj.label = surveyData[j][1].elements[0].text;\n        } catch (error) {\n          console.log(error);\n          tempObj.label = \"\";\n        }\n\n        try {\n          tempObj.scale = surveyData[j][0].attributes.scale;\n        } catch (error) {\n          console.log(error);\n          tempObj.scale = \"Yes;;;No\";\n        }\n\n        try {\n          tempObj.options = surveyData[j][0].elements[0].text;\n        } catch (error) {\n          console.log(error);\n          tempObj.options = \"\";\n        }\n\n        tempObj.hasBeenAnswered = false;\n\n        surveyQuestionArray.push(tempObj);\n      }\n\n      // RATING5 question\n      if (questionType === \"rating5\") {\n        tempObj.id = `qNum${j + 1}`;\n        let isRequired = JSON.parse(surveyData[j][0].attributes.required);\n        if (isRequired === \"true\" || isRequired === true) {\n          isRequired = true;\n          requiredAnswersObj[`qNum${j + 1}`] = \"no response\";\n        }\n        tempObj.qNum = j + 1;\n        tempObj.type = \"rating5\";\n        try {\n          tempObj.required = surveyData[j][0].attributes.required;\n        } catch (error) {\n          console.log(error);\n          tempObj.required = \"false\";\n        }\n\n        try {\n          tempObj.label = surveyData[j][1].elements[0].text;\n        } catch (error) {\n          console.log(error);\n          tempObj.label = \"\";\n        }\n\n        try {\n          tempObj.options = surveyData[j][0].elements[0].text;\n        } catch (error) {\n          console.log(error);\n          tempObj.options = \"\";\n        }\n\n        tempObj.hasBeenAnswered = false;\n\n        surveyQuestionArray.push(tempObj);\n      }\n\n      // RATING10 question\n      if (questionType === \"rating10\") {\n        tempObj.id = `qNum${j + 1}`;\n        let isRequired = JSON.parse(surveyData[j][0].attributes.required);\n        if (isRequired === \"true\" || isRequired === true) {\n          isRequired = true;\n          requiredAnswersObj[`qNum${j + 1}`] = \"no response\";\n        }\n        tempObj.qNum = j + 1;\n        tempObj.type = \"rating10\";\n        try {\n          tempObj.required = surveyData[j][0].attributes.required;\n        } catch (error) {\n          console.log(error);\n          tempObj.required = \"false\";\n        }\n\n        try {\n          tempObj.label = surveyData[j][1].elements[0].text;\n        } catch (error) {\n          console.log(error);\n          tempObj.label = \"\";\n        }\n\n        try {\n          tempObj.options = surveyData[j][0].elements[0].text;\n        } catch (error) {\n          console.log(error);\n          tempObj.options = \"\";\n        }\n\n        tempObj.hasBeenAnswered = false;\n\n        surveyQuestionArray.push(tempObj);\n      }\n    }\n    useStore.setState({ requiredAnswersObj: requiredAnswersObj });\n    useStore.setState({ surveyQuestionObjArray: surveyQuestionArray });\n  }\n  let returnObj = {};\n  let shuffleCards = configObj?.shuffleCards;\n  returnObj.requiredAnswersObj = requiredAnswersObj;\n  returnObj.configObj = configObj;\n  returnObj.surveyQuestionObjArray = surveyQuestionArray;\n  returnObj.shuffleCards = shuffleCards;\n  return returnObj;\n};\n\nexport default processConfigXMLData;\n\n// https://stackoverflow.com/questions/7936480/how-to-check-if-a-javascript-object-contains-null-value-or-it-itself-is-null\n","import useStore from \"../globalState/useStore\";\n\nconst processMapXMLData = (dataObject) => {\n  const mapObj = {};\n  const data = dataObject.map;\n  const vColsObj = {};\n  const colInfoArray = [];\n\n  // COLUMN LOOP -> get card counts per column\n  for (let i = 0; i < data.column.length; i++) {\n    let keyVal;\n    let label = data.column[i]._attributes.id;\n    let labelInt = parseInt(label, 10);\n    if (labelInt < 0) {\n      keyVal = `columnN${Math.abs(labelInt)}`;\n      vColsObj[keyVal] = [];\n    } else {\n      keyVal = `column${labelInt}`;\n      vColsObj[keyVal] = [];\n    }\n    let tempObj = {};\n    tempObj.colNum = i + 1;\n    tempObj.label = label;\n    tempObj.colour = `#${data.column[i]._attributes.colour}`;\n    tempObj.numCards = data.column[i]._text;\n    colInfoArray.push(tempObj);\n  }\n\n  // ITEM LOOP -> get color arrays and q sort pattern\n  for (let j = 0; j < data.item.length; j++) {\n    let splitArray = [];\n    let value = data.item[j]._text;\n    let key = data.item[j]._attributes.id;\n    // numerical array ==> convert to integers\n    if (key === \"qSortPattern\") {\n      splitArray = value.split(\",\").map((x) => +x);\n    } else {\n      splitArray = value.split(\",\");\n    }\n    mapObj[key] = splitArray;\n  }\n\n  // create converter object for postsort\n  const postsortConvertObj = {};\n  const headerNumbers = [...mapObj.qSortHeaders];\n  for (let j = 0; j < headerNumbers.length; j++) {\n    let key = `column${headerNumbers[j]}`;\n    postsortConvertObj[key] = mapObj.qSortHeaderNumbers[j];\n  }\n  mapObj.postsortConvertObj = postsortConvertObj;\n\n  useStore.setState({ vColsObj: vColsObj });\n  const returnObj = {};\n  returnObj.vColsObj = vColsObj;\n  returnObj.mapObj = mapObj;\n  return returnObj;\n};\n\nexport default processMapXMLData;\n","import useStore from \"../globalState/useStore\";\n\nconst processLanguageXMLData = (dataObject) => {\n  try {\n    const data = dataObject.language.item;\n\n    const langObj = {};\n    for (let i = 0; i < data.length; i++) {\n      langObj[data[i]._attributes.id] = data[i]._text;\n      useStore.setState({ [data[i]._attributes.id]: data[i]._text });\n    }\n\n    return langObj;\n  } catch (error) {\n    console.log(\"there was a language import error\");\n  }\n};\n\nexport default processLanguageXMLData;\n","import shuffle from \"lodash/shuffle\";\n\n// prep column setup array\nconst processStatementsXMLData = (dataObject, shuffleCards, vColsObj) => {\n  const data = dataObject.statements.statement;\n  let statementsArray = [];\n\n  for (let i = 0; i < data.length; i++) {\n    let tempObj = {};\n    tempObj.id = `s${data[i]._attributes.id}`;\n    tempObj.statementNum = data[i]._attributes.id;\n    tempObj.divColor = \"isUncertainStatement\";\n    tempObj.cardColor = \"yellowSortCard\";\n    tempObj.pinkChecked = false;\n    tempObj.yellowChecked = true;\n    tempObj.greenChecked = false;\n    tempObj.sortValue = 222;\n    tempObj.backgroundColor = \"#e0e0e0\";\n    tempObj.statement = data[i]._text.trim();\n    statementsArray.push(tempObj);\n  }\n\n  if (shuffleCards === true) {\n    const shuffledCards = shuffle(statementsArray);\n    statementsArray = [...shuffledCards];\n  }\n\n  let totalStatements = statementsArray.length;\n\n  const columnStatements = {};\n\n  columnStatements.vCols = vColsObj;\n  columnStatements.statementList = statementsArray;\n\n  localStorage.setItem(\"hasBeenLoaded\", true);\n  const returnObj = {};\n  returnObj.columnStatements = columnStatements;\n  returnObj.totalStatements = totalStatements;\n  return returnObj;\n};\n\nexport default processStatementsXMLData;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst LoadingScreen = () => {\n  return (\n    <Container>\n      <TextDiv>Loading</TextDiv>\n      <div>\n        <div id=\"loading\" />\n      </div>\n    </Container>\n  );\n};\n\nexport default LoadingScreen;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: row;\n  height: 100vh;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst TextDiv = styled.div`\n  font-size: 88px;\n  font-style: italic;\n  font-weight: bold;\n  align-self: center;\n  margin-right: 70px;\n  margin-top: 40px;\n`;\n","import React, { useEffect } from \"react\";\nimport { Prompt } from \"react-router-dom\";\n\nconst PromptUnload = () => {\n  useEffect(() => {\n    window.addEventListener(\"beforeunload\", alertUser);\n    return () => {\n      window.removeEventListener(\"beforeunload\", alertUser);\n    };\n  }, []);\n\n  const alertUser = (e) => {\n    // e.preventDefault();\n    // e.returnValue = \"\";\n    var message = \"o/\";\n\n    (e || window.event).returnValue = message; //Gecko + IE\n    return message;\n  };\n\n  return (\n    <React.Fragment>\n      <Prompt\n        when={false}\n        message={() => \"Are you sure you want to leave this page?\"}\n      />\n    </React.Fragment>\n  );\n};\n\nexport default PromptUnload;\n","import styled from \"styled-components\";\nimport React from \"react\";\nimport { withRouter } from \"react-router\";\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\nimport useStore from \"../../globalState/useStore\";\n\nconst getConfigObj = (state) => state.configObj;\nconst getPresortFinished = (state) => state.presortFinished;\nconst getSetTrigPrePrevNavModal = (state) =>\n  state.setTriggerPresortPreventNavModal;\nconst getCurrentPage = (state) => state.currentPage;\nconst getRequiredAnswersObj = (state) => state.requiredAnswersObj;\nconst getSetCheckReqQuesCompl = (state) =>\n  state.setCheckRequiredQuestionsComplete;\nconst getSetTrigSurvPrevNavModal = (state) =>\n  state.setTriggerSurveyPreventNavModal;\nconst getIsSortingFinished = (state) => state.isSortingFinished;\nconst getHasOverloadedColumn = (state) => state.hasOverloadedColumn;\nconst getSetTrigSortPrevNavModal = (state) =>\n  state.setTriggerSortPreventNavModal;\nconst getSetTrigSortOverColMod = (state) =>\n  state.setTriggerSortOverloadedColumnModal;\n\nconst LinkButton = (props) => {\n  let goToNextPage;\n\n  // STATE\n  const configObj = useSettingsStore(getConfigObj);\n  const presortFinished = useStore(getPresortFinished);\n  const setTriggerPresortPreventNavModal = useStore(getSetTrigPrePrevNavModal);\n  const currentPage = useStore(getCurrentPage);\n  const requiredAnswersObj = useStore(getRequiredAnswersObj);\n  const setCheckRequiredQuestionsComplete = useStore(getSetCheckReqQuesCompl);\n  const setTriggerSurveyPreventNavModal = useStore(getSetTrigSurvPrevNavModal);\n  const isSortingFinished = useStore(getIsSortingFinished);\n  const hasOverloadedColumn = useStore(getHasOverloadedColumn);\n  const setTriggerSortPreventNavModal = useStore(getSetTrigSortPrevNavModal);\n  const setTriggerSortOverloadedColModal = useStore(getSetTrigSortOverColMod);\n\n  const allowUnforcedSorts = configObj.allowUnforcedSorts;\n\n  const {\n    history,\n    location,\n    match,\n    staticContext,\n    to,\n    onClick,\n    // ⬆ filtering out props that `button` doesn’t know what to do with.\n    ...rest\n  } = props;\n\n  const checkForNextPageConditions = (\n    allowUnforcedSorts,\n    isPresortFinished\n  ) => {\n    if (currentPage === \"presort\") {\n      if (isPresortFinished === false) {\n        setTriggerPresortPreventNavModal(true);\n        return false;\n      } else {\n        return true;\n      }\n    }\n    if (currentPage === \"sort\") {\n      if (isSortingFinished === false) {\n        // not finished sorting\n        setTriggerSortPreventNavModal(true);\n        return false;\n      } else {\n        // has finished sorting\n        if (allowUnforcedSorts === true) {\n          // unforced ok -> allow nav\n          setTriggerSortPreventNavModal(false);\n          return true;\n        } else {\n          // unforced not ok -> allow nav if no overloaded columns\n          if (hasOverloadedColumn === true) {\n            setTriggerSortPreventNavModal(false);\n            setTriggerSortOverloadedColModal(true);\n            return false;\n          } else {\n            setTriggerSortPreventNavModal(false);\n            return true;\n          }\n        }\n      }\n    }\n\n    if (currentPage === \"survey\") {\n      const checkArray = [];\n      const keys = Object.keys(requiredAnswersObj);\n      for (let i = 0; i < keys.length; i++) {\n        if (requiredAnswersObj[keys[i]] === \"no response\") {\n          checkArray.push(\"false\");\n        }\n      }\n\n      if (checkArray.length > 0) {\n        // to turn on pink color for unanswered\n        setCheckRequiredQuestionsComplete(true);\n        setTriggerSurveyPreventNavModal(true);\n        return false;\n      } else {\n        return true;\n      }\n    }\n\n    // for pages without checks\n    return true;\n  };\n\n  return (\n    <NextButton\n      {...rest} // `children` is just another prop!\n      onClick={(event) => {\n        onClick && onClick(event);\n        goToNextPage = checkForNextPageConditions(\n          allowUnforcedSorts,\n          presortFinished\n        );\n        if (goToNextPage) {\n          history.push(to);\n        }\n      }}\n      tabindex=\"0\"\n    />\n  );\n};\nexport default withRouter(LinkButton);\n\nconst NextButton = styled.button`\n  border-color: #2e6da4;\n  color: white;\n  font-size: 0.8em;\n  font-weight: bold;\n  padding: 0.5em;\n  border-radius: 3px;\n  text-decoration: none;\n  width: auto;\n  justify-self: right;\n  margin-right: 35px;\n  display: flex;\n  align-items: center;\n  user-select: none;\n  justify-content: center;\n  background-color: ${({ theme, active }) =>\n    active ? theme.secondary : theme.primary};\n\n  &:hover {\n    background-color: ${({ theme }) => theme.secondary};\n  }\n\n  &:focus {\n    background-color: ${({ theme }) => theme.focus};\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport decodeHTML from \"../../utilities/decodeHTML\";\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\nimport useStore from \"../../globalState/useStore\";\n\nconst getLangObj = (state) => state.langObj;\nconst getCardFontSize = (state) => state.cardFontSize;\nconst getSetCardFontSize = (state) => state.setCardFontSize;\n\nconst FooterFontSizer = () => {\n  // STATE\n  const langObj = useSettingsStore(getLangObj);\n  const cardFontSize = useStore(getCardFontSize);\n  const setCardFontSize = useStore(getSetCardFontSize);\n\n  const fontSizeText = ReactHtmlParser(decodeHTML(langObj.fontSizeText));\n\n  const increaseFontSize = () => {\n    const currentSize = cardFontSize;\n    const newSize = currentSize + 1;\n    setCardFontSize(newSize);\n  };\n  const decreaseFontSize = () => {\n    const currentSize = cardFontSize;\n    const newSize = currentSize - 1;\n    setCardFontSize(newSize);\n  };\n\n  return (\n    <Container>\n      <SpanDiv>{fontSizeText}</SpanDiv>\n      <SizeButton padBottom={\"0.4em\"} onClick={decreaseFontSize}>\n        -\n      </SizeButton>\n      <SizeButton padBottom={\"0.25em\"} onClick={increaseFontSize}>\n        +\n      </SizeButton>\n    </Container>\n  );\n};\n\nexport default FooterFontSizer;\n\nconst SizeButton = styled.button`\n  background: #337ab7;\n  border-color: #2e6da4;\n  color: white;\n  font-size: 1.4em;\n  font-weight: bold;\n  margin: 0 3px 0 3px;\n  padding: 0.25em 0.5em;\n  padding-bottom: ${(props) => props.padBottom};\n  height: 30px;\n  width: 35px;\n\n  border-radius: 3px;\n  text-decoration: none;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n`;\n\nconst SpanDiv = styled.div`\n  font-size: 16px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport decodeHTML from \"../../utilities/decodeHTML\";\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\nimport useStore from \"../../globalState/useStore\";\n\nconst getLangObj = (state) => state.langObj;\nconst getCardHeight = (state) => state.cardHeight;\nconst getSetCardHeight = (state) => state.setCardHeight;\n\nconst CardHeightSizer = () => {\n  // STATE\n  const langObj = useSettingsStore(getLangObj);\n  const cardHeight = useStore(getCardHeight);\n  const setCardHeight = useStore(getSetCardHeight);\n\n  const cardHeightText = ReactHtmlParser(decodeHTML(langObj.cardHeightText));\n\n  const increaseHeight = () => {\n    const currentSize = +cardHeight;\n    const newSize = currentSize + 2;\n    setCardHeight(newSize);\n  };\n  const decreaseHeight = () => {\n    const currentSize = +cardHeight;\n    const newSize = currentSize - 2;\n    setCardHeight(newSize);\n  };\n\n  return (\n    <Container>\n      <SpanDiv>{cardHeightText}</SpanDiv>\n      <SizeButton padBottom={\"0.4em\"} onClick={decreaseHeight}>\n        -\n      </SizeButton>\n      <SizeButton padBottom={\"0.25em\"} onClick={increaseHeight}>\n        +\n      </SizeButton>\n    </Container>\n  );\n};\n\nexport default CardHeightSizer;\n\nconst SizeButton = styled.button`\n  background: #337ab7;\n  border-color: #2e6da4;\n  color: white;\n  font-size: 1.4em;\n  font-weight: bold;\n  margin: 0 3px 0 3px;\n  padding: 0.25em 0.5em;\n  padding-bottom: ${(props) => props.padBottom};\n  height: 30px;\n  width: 35px;\n  border-radius: 3px;\n  text-decoration: none;\n  user-select: none;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n  margin-left: 15px;\n`;\n\nconst SpanDiv = styled.div`\n  font-size: 16px;\n`;\n","const calcProgressScore = (\n  currentPage,\n  additionalProgress1,\n  additionalProgressSort,\n  showPostsort,\n  showSurvey,\n  additionalProgressState,\n  additionalProgressStateSort\n) => {\n  let adjustmentValue1 = 20;\n  let adjustmentValue2 = 50;\n  let adjustmentValue3 = 80;\n  if (showPostsort === false && showSurvey === true) {\n    adjustmentValue1 = 30;\n    adjustmentValue2 = 60;\n  }\n  if (showPostsort === true && showSurvey === false) {\n    adjustmentValue1 = 30;\n    adjustmentValue2 = 60;\n    adjustmentValue3 = 90;\n  }\n  if (showPostsort === false && showSurvey === false) {\n    adjustmentValue1 = 30;\n    adjustmentValue2 = 60;\n  }\n\n  let totalProgressScore;\n  let additionalProgress = 0;\n  if (additionalProgress1 !== +additionalProgressState) {\n    additionalProgress = +additionalProgressState;\n  }\n\n  if (additionalProgressSort !== +additionalProgressStateSort) {\n    additionalProgressSort = +additionalProgressStateSort;\n  }\n\n  if (currentPage === \"landing\") {\n    totalProgressScore = 10;\n    return totalProgressScore;\n  }\n  if (currentPage === \"presort\") {\n    totalProgressScore = +additionalProgress + adjustmentValue1;\n    return totalProgressScore;\n  }\n  if (currentPage === \"sort\") {\n    totalProgressScore = +additionalProgressSort + adjustmentValue2;\n    return totalProgressScore;\n  }\n  if (currentPage === \"postsort\") {\n    totalProgressScore = adjustmentValue3;\n    return totalProgressScore;\n  }\n  if (currentPage === \"survey\") {\n    totalProgressScore = 90;\n    return totalProgressScore;\n  }\n  if (currentPage === \"submit\") {\n    totalProgressScore = 100;\n    return totalProgressScore;\n  }\n};\n\nexport default calcProgressScore;\n","import styled from \"styled-components\";\nimport React from \"react\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport decodeHTML from \"../../utilities/decodeHTML\";\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\nimport useStore from \"../../globalState/useStore\";\n\nconst getLangObj = (state) => state.langObj;\nconst getCurrentPage = (state) => state.currentPage;\nconst getSetTriggerLandingModal = (state) => state.setTriggerLandingModal;\nconst getSetTriggerPresortModal = (state) => state.setTriggerPresortModal;\nconst getSetTriggerSortModal = (state) => state.setTriggerSortModal;\nconst getSetTriggerPostsortModal = (state) => state.setTriggerPostsortModal;\nconst getSetTriggerSurveyModal = (state) => state.setTriggerSurveyModal;\nconst getSetTriggerSubmitModal = (state) => state.setTriggerSubmitModal;\n\nconst HelpButton = () => {\n  // STATE\n  const langObj = useSettingsStore(getLangObj);\n  const currentPage = useStore(getCurrentPage);\n  const setTriggerLandingModal = useStore(getSetTriggerLandingModal);\n  const setTriggerPresortModal = useStore(getSetTriggerPresortModal);\n  const setTriggerSortModal = useStore(getSetTriggerSortModal);\n  const setTriggerPostsortModal = useStore(getSetTriggerPostsortModal);\n  const setTriggerSurveyModal = useStore(getSetTriggerSurveyModal);\n  const setTriggerSubmitModal = useStore(getSetTriggerSubmitModal);\n\n  const buttonText = ReactHtmlParser(decodeHTML(langObj.btnHelp)) || \"\";\n\n  const handleOnClick = () => {\n    if (currentPage === \"landing\") {\n      setTriggerLandingModal(true);\n    }\n    if (currentPage === \"presort\") {\n      setTriggerPresortModal(true);\n    }\n    if (currentPage === \"sort\") {\n      setTriggerSortModal(true);\n    }\n    if (currentPage === \"postsort\") {\n      setTriggerPostsortModal(true);\n    }\n    if (currentPage === \"survey\") {\n      setTriggerSurveyModal(true);\n    }\n    if (currentPage === \"submit\") {\n      setTriggerSubmitModal(true);\n    }\n  };\n\n  return (\n    <StyledHelpButton tabindex=\"0\" onClick={handleOnClick}>\n      {buttonText}\n    </StyledHelpButton>\n  );\n};\nexport default HelpButton;\n\nconst StyledHelpButton = styled.button`\n  border-color: #2e6da4;\n  color: white;\n  font-size: 0.8em;\n  font-weight: bold;\n  padding: 0.5em;\n  border-radius: 3px;\n  text-decoration: none;\n  width: auto;\n  justify-self: right;\n  margin-right: 10px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: ${({ theme, active }) =>\n    active ? theme.secondary : theme.primary};\n\n  &:hover {\n    background-color: ${({ theme }) => theme.secondary};\n  }\n\n  &:focus {\n    background-color: ${({ theme }) => theme.focus};\n  }\n`;\n\n/*\n\n  &:hover {\n    opacity: 1;\n    box-shadow: inset 0 0 0 4px #666, 0 0 1px transparent;\n  }\n  */\n","const getNextPage = (currentPage, showPostsort, showSurvey) => {\n  if (showPostsort === true && showSurvey === true) {\n    if (currentPage === \"landing\") {\n      return `/presort`;\n    }\n    if (currentPage === \"presort\") {\n      return `/sort`;\n    }\n    if (currentPage === \"sort\") {\n      return `/postsort`;\n    }\n    if (currentPage === \"postsort\") {\n      return `/survey`;\n    }\n    if (currentPage === \"survey\") {\n      return `/submit`;\n    }\n    if (currentPage === \"submit\") {\n      return `/`;\n    }\n    return `/nopagefound`;\n  }\n\n  if (showPostsort === false && showSurvey === true) {\n    if (currentPage === \"landing\") {\n      return `/presort`;\n    }\n    if (currentPage === \"presort\") {\n      return `/sort`;\n    }\n    if (currentPage === \"sort\") {\n      return `/survey`;\n    }\n    if (currentPage === \"survey\") {\n      return `/submit`;\n    }\n    if (currentPage === \"submit\") {\n      return `/`;\n    }\n    return `/nopagefound`;\n  }\n\n  if (showPostsort === true && showSurvey === false) {\n    if (currentPage === \"landing\") {\n      return `/presort`;\n    }\n    if (currentPage === \"presort\") {\n      return `/sort`;\n    }\n    if (currentPage === \"sort\") {\n      return `/postsort`;\n    }\n    if (currentPage === \"postsort\") {\n      return `/submit`;\n    }\n    if (currentPage === \"submit\") {\n      return `/`;\n    }\n    return `/nopagefound`;\n  }\n\n  if (showPostsort === false && showSurvey === false) {\n    if (currentPage === \"landing\") {\n      return `/presort`;\n    }\n    if (currentPage === \"presort\") {\n      return `/sort`;\n    }\n    if (currentPage === \"sort\") {\n      return `/submit`;\n    }\n    if (currentPage === \"submit\") {\n      return `/`;\n    }\n    return `/nopagefound`;\n  }\n};\n\nexport default getNextPage;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport NextButton from \"./NextButton\";\nimport FooterFontSizer from \"./FooterFontSizer\";\nimport CardHeightSizer from \"./CardHeightSizer\";\nimport ProgressBar from \"@ramonak/react-progress-bar\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport decodeHTML from \"../../utilities/decodeHTML\";\nimport calcProgressScore from \"./calcProgressScore\";\nimport HelpButton from \"./HelpButton\";\nimport getNextPage from \"./getNextPage\";\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\nimport useStore from \"../../globalState/useStore\";\n\nconst getLangObj = (state) => state.langObj;\nconst getConfigObj = (state) => state.configObj;\nconst getDisplayNextButton = (state) => state.displayNextButton;\nconst getCurrentPage = (state) => state.currentPage;\nconst getAdditionalProgress = (state) => state.progressScoreAdditional;\nconst getAdditionalProgressSort = (state) => state.progressScoreAdditionalSort;\nconst getLocalUsercode = (state) => state.localUsercode;\n\nconst StyledFooter = () => {\n  // STATE\n  const langObj = useSettingsStore(getLangObj);\n  const configObj = useSettingsStore(getConfigObj);\n  let displayNextButton = useStore(getDisplayNextButton);\n  const currentPage = useStore(getCurrentPage);\n  const additionalProgress = useStore(getAdditionalProgress);\n  const additionalProgressSort = useStore(getAdditionalProgressSort);\n  const localUsercode = useStore(getLocalUsercode);\n\n  let showAdjustmentContainer = true;\n  let showCardHeightSizer = true;\n  let displayHelpButton = true;\n\n  let logoHtml = ReactHtmlParser(\n    decodeHTML(\n      `{{{center}}}{{{img src=\"./images/logo.png\" height=\"40\" width=\"250\" /}}}{{{/center}}}`\n    )\n  );\n\n  const nextButtonText = ReactHtmlParser(decodeHTML(langObj.btnNext));\n\n  if (currentPage === \"sort\" && configObj.firebaseOrLocal === \"local\") {\n    const usercode = localUsercode;\n    const projectName = configObj.studyTitle;\n    const today = new Date();\n    const date =\n      today.getFullYear() +\n      \"-\" +\n      (today.getMonth() + 1) +\n      \"-\" +\n      today.getDate();\n    const time =\n      today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\n    const dateTime = date + \" \" + time;\n\n    logoHtml = `${usercode} - ${projectName} - ${dateTime}`;\n  }\n\n  const showPostsort = configObj.showPostsort;\n  const showSurvey = configObj.showSurvey;\n\n  const totalProgressScore = calcProgressScore(\n    currentPage,\n    additionalProgress,\n    additionalProgressSort,\n    showPostsort,\n    showSurvey,\n    additionalProgress,\n    additionalProgressSort\n  );\n\n  if (currentPage === \"submit\") {\n    displayNextButton = false;\n  }\n\n  if (configObj.firebaseOrLocal === \"local\" && currentPage === \"landing\") {\n    displayNextButton = false;\n    displayHelpButton = false;\n  }\n  if (currentPage === \"submit\") {\n    displayHelpButton = false;\n  }\n\n  if (currentPage === \"presort\") {\n    showAdjustmentContainer = true;\n    showCardHeightSizer = false;\n  }\n  if (\n    currentPage === \"landing\" ||\n    currentPage === \"survey\" ||\n    currentPage === \"submit\"\n  ) {\n    showAdjustmentContainer = false;\n  }\n\n  let CenterContent = (\n    <React.Fragment>\n      {displayHelpButton && <HelpButton />}\n      {showAdjustmentContainer && (\n        <AdjustmentsContainer>\n          <FooterFontSizer />\n          {showCardHeightSizer && <CardHeightSizer />}\n        </AdjustmentsContainer>\n      )}\n      <ProgressBarDiv>\n        <ProgressBar\n          completed={totalProgressScore}\n          width={\"100px\"}\n          bgColor=\"#337ab7\"\n          labelColor=\"#f0f0f0\"\n          baseBgColor=\"lightgray\"\n        />\n      </ProgressBarDiv>\n    </React.Fragment>\n  );\n\n  const nextPage = getNextPage(currentPage, showPostsort, showSurvey);\n\n  return (\n    <StyledFooterDiv>\n      <LogoContainer>{logoHtml}</LogoContainer>\n      <CenterDiv>{CenterContent}</CenterDiv>\n      {displayNextButton && (\n        <NextButton to={nextPage}>{nextButtonText}</NextButton>\n      )}\n    </StyledFooterDiv>\n  );\n};\n\nexport default StyledFooter;\n\nconst StyledFooterDiv = styled.footer`\n  position: fixed;\n  bottom: 0px;\n  left: 0px;\n  border-top: 1px solid lightgray;\n\n  display: inline-grid;\n  grid-template-columns: 16% 1fr 16%;\n  align-items: center;\n`;\n\nconst AdjustmentsContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  padding-left: 15px;\n`;\n\nconst ProgressBarDiv = styled.div`\n  align-self: center;\n  justify-self: center;\n  margin-left: 25px;\n`;\n\nconst LogoContainer = styled.div`\n  padding-top: 5px;\n  padding-left: 5px;\n  display: flex;\n  justify-self: start;\n  align-self: center;\n  text-align: center;\n`;\n\nconst CenterDiv = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n`;\n","import React, { Suspense, useEffect, useState } from \"react\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport LandingPage from \"./pages/landing/Landing\";\nimport PostsortPage from \"./pages/postsort/Postsort\";\nimport PresortPage from \"./pages/presort/Presort\";\nimport SortPage from \"./pages/sort/Sort\";\nimport SubmitPage from \"./pages/submit/Submit\";\nimport SurveyPage from \"./pages/survey/Survey\";\nimport NoPageFound from \"./utilities/NoPageFound\";\nimport axios from \"axios\";\nimport processConfigXMLData from \"./utilities/processConfigXMLData\";\nimport processMapXMLData from \"./utilities/processMapXMLData\";\nimport processLanguageXMLData from \"./utilities/processLanguageXMLData\";\nimport processStatementsXMLData from \"./utilities/processStatementsXMLData\";\nimport LoadingScreen from \"./pages/landing/LoadingScreen\";\nimport PromptUnload from \"./utilities/PromptUnload\";\nimport StyledFooter from \"./pages/footer/StyledFooter\";\nimport useSettingsStore from \"./globalState/useSettingsStore\";\nimport useStore from \"./globalState/useStore\";\nimport cloneDeep from \"lodash/cloneDeep\";\n// import iOS from \"./isIos\";\n\nconst convert = require(\"xml-js\");\n\nconst getSetConfigObj = (state) => state.setConfigObj;\nconst getSetLangObj = (state) => state.setLangObj;\nconst getSetMapObj = (state) => state.setMapObj;\nconst getSetStatementsObj = (state) => state.setStatementsObj;\nconst getSetColumnStatements = (state) => state.setColumnStatements;\nconst getSetResetColumnStatements = (state) => state.setResetColumnStatements;\nconst getSetSurveyQuesObjArray = (state) => state.setSurveyQuestionObjArray;\nconst getSetRequiredAnswersObj = (state) => state.setRequiredAnswersObj;\nconst getSetDataLoaded = (state) => state.setDataLoaded;\n\nfunction App() {\n  // STATE\n  const [isLoading, setLoading] = useState(true);\n\n  const setConfigObj = useSettingsStore(getSetConfigObj);\n  const setLangObj = useSettingsStore(getSetLangObj);\n  const setMapObj = useSettingsStore(getSetMapObj);\n  const setStatementsObj = useSettingsStore(getSetStatementsObj);\n  const setColumnStatements = useSettingsStore(getSetColumnStatements);\n  const setResetColumnStatements = useSettingsStore(\n    getSetResetColumnStatements\n  );\n  const setSurveyQuestionObjArray = useSettingsStore(getSetSurveyQuesObjArray);\n  const setRequiredAnswersObj = useSettingsStore(getSetRequiredAnswersObj);\n  const setDataLoaded = useStore(getSetDataLoaded);\n\n  useEffect(() => {\n    let shuffleCards;\n    let vColsObj;\n\n    (async () => {\n      await axios\n        .get(\"./settings/language.xml\", {\n          \"Content-Type\": \"application/xml; charset=utf-8\",\n        })\n        .then(function (response) {\n          const options = { compact: true, ignoreComment: true, spaces: 4 };\n          const languageData = convert.xml2js(response.data, options);\n          let langObj = processLanguageXMLData(languageData);\n          setLangObj(langObj);\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n\n      await axios\n        .get(\"./settings/config.xml\", {\n          \"Content-Type\": \"application/xml; charset=utf-8\",\n        })\n        .then(function (response) {\n          const options = { compact: false, ignoreComment: true, spaces: 2 };\n          const configData = convert.xml2js(response.data, options);\n          let info = processConfigXMLData(configData);\n          shuffleCards = info.shuffleCards;\n          setConfigObj(info.configObj);\n          setSurveyQuestionObjArray(info.surveyQuestionObjArray);\n          setRequiredAnswersObj(info.requiredAnswersObj);\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n\n      await axios\n        .get(\"./settings/map.xml\", {\n          \"Content-Type\": \"application/xml; charset=utf-8\",\n        })\n        .then(function (response) {\n          const options = { compact: true, ignoreComment: true, spaces: 4 };\n          const mapData = convert.xml2js(response.data, options);\n          let data = processMapXMLData(mapData);\n          vColsObj = data.vColsObj;\n          setMapObj(data.mapObj);\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n\n      await axios\n        .get(\"./settings/statements.xml\", {\n          \"Content-Type\": \"application/xml; charset=utf-8\",\n        })\n        .then(function (response) {\n          const options = { compact: true, ignoreComment: true, spaces: 4 };\n          const statementsData = convert.xml2js(response.data, options);\n          const statementsObj = processStatementsXMLData(\n            statementsData,\n            shuffleCards,\n            vColsObj\n          );\n          setColumnStatements(statementsObj.columnStatements);\n          const resetColumnStatements = cloneDeep(\n            statementsObj.columnStatements\n          );\n          setResetColumnStatements(resetColumnStatements);\n          setStatementsObj(statementsObj);\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n\n      setDataLoaded(true);\n\n      setTimeout(() => {\n        // setIsDataLoaded(true);\n        setLoading(false);\n      }, 700);\n    })();\n  }, [\n    setConfigObj,\n    setLangObj,\n    setStatementsObj,\n    setColumnStatements,\n    setRequiredAnswersObj,\n    setSurveyQuestionObjArray,\n    setMapObj,\n    setDataLoaded,\n    setResetColumnStatements,\n  ]);\n\n  if (isLoading) {\n    return <LoadingScreen />;\n  }\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <PromptUnload />\n        <Switch>\n          <Route exact path=\"/presort\" component={PresortPage} />\n          <Route exact path=\"/sort\" component={SortPage} />\n          <Route exact path=\"/postsort\" component={PostsortPage} />\n          <Route exact path=\"/survey\" component={SurveyPage} />\n          <Route exact path=\"/submit\" component={SubmitPage} />\n          <Route exact path=\"/\" component={LandingPage} />\n          <Route component={NoPageFound} />\n        </Switch>\n        <Suspense>\n          <StyledFooter />\n        </Suspense>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport GlobalStyle from \"./styles/globalCSS\";\nimport { ThemeProvider } from \"styled-components\";\nimport App from \"./App\";\nimport LoadingScreen from \"./pages/landing/LoadingScreen\";\n\nconst theme = {\n  primary: \"#337ab7\",\n  secondary: \"#285f8f\",\n  focus: \"#63a0d4\",\n};\n\nReactDOM.render(\n  <React.StrictMode>\n    <React.Suspense fallback={<LoadingScreen />}>\n      <ThemeProvider theme={theme}>\n        <GlobalStyle />\n        <App />\n      </ThemeProvider>\n    </React.Suspense>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}